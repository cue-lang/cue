# Code generated internal/ci/ci_tool.cue; DO NOT EDIT.

name: Evict caches
"on":
  schedule:
    - cron: 0 2 * * *
  push:
    branches:
      - ci/test
jobs:
  test:
    if: ${{github.repository == 'cue-lang/cue'}}
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Reset git directory modification times
        run: touch -t 202211302355 $(find * -type d)
      - name: Restore git file modification times
        uses: chetan/git-restore-mtime-action@075f9bc9d159805603419d50f794bd9f33252ebe
      - id: DispatchTrailer
        name: Try to extract Dispatch-Trailer
        run: |-
          x="$(git log -1 --pretty='%(trailers:key=Dispatch-Trailer,valueonly)')"
          if [[ "$x" == "" ]]
          then
             # Some steps rely on the presence or otherwise of the Dispatch-Trailer.
             # We know that we don't have a Dispatch-Trailer in this situation,
             # hence we use the JSON value null in order to represent that state.
             # This means that GitHub expressions can determine whether a Dispatch-Trailer
             # is present or not by checking whether the fromJSON() result of the
             # output from this step is the JSON value null or not.
             x=null
          fi
          echo "value<<EOD" >> $GITHUB_OUTPUT
          echo "$x" >> $GITHUB_OUTPUT
          echo "EOD" >> $GITHUB_OUTPUT
      - if: |-
          ((github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release-branch.')) && (! (contains(github.event.head_commit.message, '
          Dispatch-Trailer: {"type":"')))) && (contains(github.event.head_commit.message, '
          Dispatch-Trailer: {"type":"'))
        name: Check we don't have Dispatch-Trailer on a protected branch
        run: |-
          echo "github.event.head_commit.message contains Dispatch-Trailer"
          echo "github.event.head_commit.message value"
          cat <<EOD
          ${{ github.event.head_commit.message }}
          EOD
          echo "containsDispatchTrailer expression"
          cat <<EOD
          (contains(github.event.head_commit.message, '
          Dispatch-Trailer: {"type":"'))
          EOD
          false
      - run: |-
          echo ${{ secrets.CUECKOO_GITHUB_PAT }} | gh auth login --with-token
          gh extension install actions/gh-actions-cache
          for i in https://github.com/cue-lang/cue https://github.com/cue-lang/cue-trybot
          do
          	echo "Evicting caches for $i"
          	cd $(mktemp -d)
          	git init -b initialbranch
          	git remote add origin $i
          	for j in $(gh actions-cache list -L 100 | grep refs/ | awk '{print $1}')
          	do
          	   gh actions-cache delete --confirm $j
          	done
          done

          # Prepare git for pushes to trybot repo. Note
          # because we have already checked out code we don't
          # need origin. Fetch origin default branch for later use
          git fetch origin master
          git config user.name cueckoo
          git config user.email cueckoo@gmail.com
          git config http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo -n cueckoo:${{ secrets.CUECKOO_GITHUB_PAT }} | base64)"
          git remote add trybot https://github.com/cue-lang/cue-trybot

          # Now trigger the most recent workflow run on each of the default branches.
          # We do this by listing all the branches on the main repo and finding those
          # which match the protected branch patterns (globs).
          for j in $(curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.CUECKOO_GITHUB_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" -f https://api.github.com/repos/cue-lang/cue/branches | jq -r '.[] | .name')
          do
          	for i in master release-branch.*
          	do
          		if [[ "$j" != $i ]]; then
          		   continue
          		fi

          		echo Branch: $j
          		sha=$(curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.CUECKOO_GITHUB_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/cue-lang/cue/commits/$j" | jq -r '.sha')
          		echo Latest commit: $sha

          		echo "Trigger workflow on cue-lang/cue"
          		id=$(curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.CUECKOO_GITHUB_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/cue-lang/cue/actions/workflows/trybot.yml/runs?branch=$j&event=push&head_sha=$sha&per_page=1" | jq -r '.workflow_runs[] | .id')
          if [[ "$id" != "" ]]
          then
             echo Workflow ID for that sha: $id
             curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.CUECKOO_GITHUB_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" -X POST https://api.github.com/repos/cue-lang/cue/actions/runs/$id/rerun
             echo Successfull triggered re-run
          else
             echo "$sha has not run the trybot workflow; skipping"
          fi


          		# Ensure that the trybot repo has the latest commit for
          		# this branch.  If the force-push results in a commit
          		# being pushed, that will trigger the trybot workflows
          		# so we don't need to do anything, otherwise we need to
          		# trigger the most recent commit on that branch
          		if git push -f trybot origin/$j:$j 2>&1 | tee grep up-to-date
          		then
          			echo "Trigger workflow on cue-lang/cue"
          		   id=$(curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.CUECKOO_GITHUB_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/cue-lang/cue-trybot/actions/workflows/trybot.yml/runs?branch=$j&event=push&head_sha=$sha&per_page=1" | jq -r '.workflow_runs[] | .id')
          if [[ "$id" != "" ]]
          then
             echo Workflow ID for that sha: $id
             curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.CUECKOO_GITHUB_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" -X POST https://api.github.com/repos/cue-lang/cue-trybot/actions/runs/$id/rerun
             echo Successfull triggered re-run
          else
             echo "$sha has not run the trybot workflow; skipping"
          fi

          		else
          			echo "Force-push to cue-lang/cue-trybot did work; nothing to do"
          		fi
          	done
          done
