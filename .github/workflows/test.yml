# Generated by internal/ci/ci_tool.cue; do not edit

name: Test
"on":
  push:
    branches:
      - '**'
    tags-ignore:
      - v*
  pull_request: {}
jobs:
  start:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - if: ${{ startsWith(github.ref, 'refs/heads/ci/') }}
        name: Write netrc file for cueckoo Gerrithub
        run: |-
          cat <<EOD > ~/.netrc
          machine review.gerrithub.io
          login cueckoo
          password ${{ secrets.CUECKOO_GERRITHUB_PASSWORD }}
          EOD
          chmod 600 ~/.netrc
      - if: ${{ startsWith(github.ref, 'refs/heads/ci/') }}
        name: Update Gerrit CL message with starting message
        run: 'curl -f -s -n -H "Content-Type: application/json" --request POST --data "{\"tag\":\"trybot\",\"message\":\"Started the build... see progress at ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}\"}" https://review.gerrithub.io/a/changes/$(basename $(dirname $GITHUB_REF))/revisions/$(basename $GITHUB_REF)/review'
  test:
    needs: start
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - 1.16.x
          - 1.17.x
          - 1.18.x
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2022
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Write netrc file for cueckoo Gerrithub
        run: |-
          cat <<EOD > ~/.netrc
          machine review.gerrithub.io
          login cueckoo
          password ${{ secrets.CUECKOO_GERRITHUB_PASSWORD }}
          EOD
          chmod 600 ~/.netrc
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-${{ matrix.go-version }}-go-
      - if: ${{ github.ref == 'refs/heads/master' }}
        run: echo CUE_LONG=true >> $GITHUB_ENV
      - if: matrix.go-version == '1.16.x' && matrix.os == 'ubuntu-20.04'
        name: Generate
        run: go generate ./...
      - name: Test
        run: go test ./...
      - if: ${{ matrix.go-version == '1.18.x' && matrix.os == 'ubuntu-20.04' }}
        name: Test with -race
        run: go test -race ./...
      - name: gorelease check
        run: go run golang.org/x/exp/cmd/gorelease
      - name: Check that git is clean post generate and tests
        run: test -z "$(git status --porcelain)" || (git status; git diff; false)
      - if: ${{ github.ref == 'refs/heads/master' }}
        name: Pull this commit through the proxy on master
        run: |-
          v=$(git rev-parse HEAD)
          cd $(mktemp -d)
          go mod init mod.com
          GOPROXY=https://proxy.golang.org go get -d cuelang.org/go/cmd/cue@$v
      - if: ${{ startsWith(github.ref, 'refs/heads/ci/') && failure() }}
        name: Post any failures for this matrix entry
        run: 'curl -f -s -n -H "Content-Type: application/json" --request POST --data "{\"tag\":\"trybot\",\"message\":\"Build failed for ${{ runner.os }}-${{ matrix.go-version }}; see ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }} for more details\",\"labels\":{\"TryBot-Result\":-1}}" https://review.gerrithub.io/a/changes/$(basename $(dirname $GITHUB_REF))/revisions/$(basename $GITHUB_REF)/review'
  mark_ci_success:
    runs-on: ubuntu-20.04
    if: ${{ startsWith(github.ref, 'refs/heads/ci/') }}
    needs: test
    defaults:
      run:
        shell: bash
    steps:
      - name: Write netrc file for cueckoo Gerrithub
        run: |-
          cat <<EOD > ~/.netrc
          machine review.gerrithub.io
          login cueckoo
          password ${{ secrets.CUECKOO_GERRITHUB_PASSWORD }}
          EOD
          chmod 600 ~/.netrc
      - name: Update Gerrit CL message with success message
        run: 'curl -f -s -n -H "Content-Type: application/json" --request POST --data "{\"tag\":\"trybot\",\"message\":\"Build succeeded for ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}\",\"labels\":{\"TryBot-Result\":1}}" https://review.gerrithub.io/a/changes/$(basename $(dirname $GITHUB_REF))/revisions/$(basename $GITHUB_REF)/review'
  delete_build_branch:
    runs-on: ubuntu-20.04
    if: ${{ startsWith(github.ref, 'refs/heads/ci/') && always() }}
    needs: test
    defaults:
      run:
        shell: bash
    steps:
      - run: |-
          mkdir tmpgit
          cd tmpgit
          git init
          git config user.name cueckoo
          git config user.email cueckoo@gmail.com
          git config http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo -n cueckoo:${{ secrets.CUECKOO_GITHUB_PAT }} | base64)"
          git push https://github.com/cue-lang/cue :${GITHUB_REF#refs/heads/}
