# Generated by internal/ci/ci_tool.cue; do not edit

name: TryBot
"on":
  push:
    branches:
      - '**'
    tags-ignore:
      - v*
  pull_request: {}
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - 1.17.x
          - 1.18.x
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2022
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - if: matrix.go-version == '1.18.x' && matrix.os == 'ubuntu-20.04'
        name: Early git and code sanity checks
        run: |-
          # Ensure the recent commit messages have Signed-off-by headers.
          # TODO: Remove once this is enforced for admins too;
          # see https://bugs.chromium.org/p/gerrit/issues/detail?id=15229
          # TODO: Our --max-count here is just 1, because we've made mistakes very
          # recently. Increase it to 5 or 10 soon, to also cover CL chains.
          for commit in $(git rev-list --max-count=1 HEAD); do
          	if ! git rev-list --format=%B --max-count=1 $commit | grep -q '^Signed-off-by:'; then
          		echo -e "
          Recent commit is lacking Signed-off-by:
          "
          		git show --quiet $commit
          		exit 1
          	fi
          done
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-${{ matrix.go-version }}-go-
      - if: ${{ github.ref == 'refs/heads/master' }}
        run: echo CUE_LONG=true >> $GITHUB_ENV
      - if: matrix.go-version == '1.18.x' && matrix.os == 'ubuntu-20.04'
        name: Generate
        run: go generate ./...
      - name: Test
        run: go test ./...
      - if: matrix.go-version == '1.18.x' && matrix.os == 'ubuntu-20.04'
        name: Check
        run: go vet ./...
      - if: ${{ matrix.go-version == '1.18.x' && matrix.os == 'ubuntu-20.04' }}
        name: Test with -race
        run: go test -race ./...
      - name: Check that git is clean post generate and tests
        run: test -z "$(git status --porcelain)" || (git status; git diff; false)
      - if: ${{ github.ref == 'refs/heads/master' }}
        name: Pull this commit through the proxy on master
        run: |-
          v=$(git rev-parse HEAD)
          cd $(mktemp -d)
          go mod init mod.com
          GOPROXY=https://proxy.golang.org go get -d cuelang.org/go/cmd/cue@$v
