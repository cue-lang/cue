{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "483d6f50_af597e44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-10-03T12:48:17Z",
      "side": 1,
      "message": "Not really keen on that `any` thing, but LGTM as long as it goes away in the next CL.",
      "revId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f809e454_4e75c5d5",
        "filename": "cue/ast/importpath_test.go",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-10-03T12:48:17Z",
      "side": 1,
      "message": "I\u0027m not keen on this. If we want something that\u0027s either string or nil, why not just use `*string` ? But, as I mention below, I don\u0027t think it\u0027s needed anyway.",
      "revId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f1ffa89_ce8c01e6",
        "filename": "cue/ast/importpath_test.go",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-10-03T13:30:27Z",
      "side": 1,
      "message": "because I don\u0027t have `new(\"stringlit\")` yet :) I did briefly think about it, but as it will be a one-commit temporary thing, I\u0027ll leave as is.",
      "parentUuid": "f809e454_4e75c5d5",
      "revId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "791010d1_10919bb8",
        "filename": "cue/ast/importpath_test.go",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-10-03T12:48:17Z",
      "side": 1,
      "message": "This seems inconsistent with `ExplicitEmptyQualifier`, which does include a colon at the end of the string. If we make it consistent, then we don\u0027t have any cases where a non-empty path maps to an empty canonical string, so we can remove the awkward `any` type for `wantCanonical`.\n\nAlthough... I see that\u0027s hard to do without changing existing behaviour, which is what this CL is trying to avoid.",
      "revId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d525774_1ae76886",
        "filename": "cue/ast/importpath_test.go",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-10-03T13:30:27Z",
      "side": 1,
      "message": "indeed, I\u0027ll clean this up in the next CL, I wanted to just reflect the current state of the world.",
      "parentUuid": "791010d1_10919bb8",
      "revId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed, except for Marcel."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader OR label:Code-Review\u003dMAX,user\u003dmpvl@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader OR label:Code-Review=MAX,user=mpvl@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MAX,user=mpvl@gmail.com"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MAX,user=mpvl@gmail.com":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""],"atomExplanations":{"value":{"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\"":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""],"atomExplanations":{"value":{"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\"":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"],"atomExplanations":{"value":{"label:Hold=1":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBot-Result",
        "description": {
          "value": "TryBot-Result+1 is required. Unity-Result is not, as intentional breakages can happen. Can be bypassed by Chief Cueckoo with Code-Review+2."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:TryBot-Result\u003dMAX OR label:Code-Review\u003dMAX,user\u003dchief.cueckoo@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"],"atomExplanations":{"value":{"branch:refs/meta/config":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Result=MAX OR label:Code-Review=MAX,user=chief.cueckoo@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:TryBot-Result=MAX"],"failingAtoms":["label:Code-Review=MAX,user=chief.cueckoo@gmail.com"],"atomExplanations":{"value":{"label:TryBot-Result=MAX":"","label:Code-Review=MAX,user=chief.cueckoo@gmail.com":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0a3785ac15a8700f2cdb431864a9cd163e9e2448",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}