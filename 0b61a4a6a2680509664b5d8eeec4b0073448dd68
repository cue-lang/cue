{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ee10994d_205ea970",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2674,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2024-08-12T07:43:54Z",
      "side": 1,
      "message": "I think I rarely if ever see \"satisfy\" used as a verb. I think that \"tests\" reads better here.",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5738c4ed_dcf6c1d9",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2676,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-08-12T09:41:59Z",
      "side": 1,
      "message": "This description of validators as returning functions seems a little awkward to me, as we already have functions in the language, and they don\u0027t behave like this (and we\u0027ve just described the validator itself as a (builtin) function). It sounds a bit like one could call a validator function directly oneself (e.g. matchN(1, [string])(\"foo\")) but I don\u0027t believe that\u0027s the intention.\n\nI wonder whether it might be nicer to describe a validator in a slightly different way without referring to the thing it returns as a function. Something like this, perhaps?\n\n\u003e A special kind of builtin function is a validator function, which\n\u003e tests that a value has some property. A validator function returns a\n\u003e _validator_, a value which, when unified with some other value `x`,\n\u003e results in either exactly `x` if the property is satisfied, or an error\n\u003e (bottom) otherwise.",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9efcf210_553f5b67",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2682,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2024-08-12T07:43:54Z",
      "side": 1,
      "message": "Spelling: impropor",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f545ded0_e7662e8f",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2790,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2024-08-12T07:43:54Z",
      "side": 1,
      "message": "The wording here seems a bit confused. I think \"...counts how many of the CUE values in the given...\" is what you intended.",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a020ee6d_9a37522e",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2790,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-08-12T09:41:59Z",
      "side": 1,
      "message": "As suggested above, I\u0027d suggest naming this a \"validator\" rather than a \"validator function\".\n\nSomething like this, perhaps?\n\n\u003e The builtin validator function `matchN(count, list)` returns\n\u003e a validator that checks that for a given value `x`, the\n\u003e number of CUE values in the given `list` that unify with `x`\n\u003e unifies with `count`.",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46cbc51f_45e7fb2b",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2794,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-08-12T09:41:59Z",
      "side": 1,
      "message": "```suggestion\nNote that, as with any validator, the result of unification with the values is not returned.\n```",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68188ac8_2ba56fef",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2795,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-08-12T09:41:59Z",
      "side": 1,
      "message": "This reads awkwardly.\n\n\n```suggestion\nTo avoid a successful validation even when the final value is not\ncompatible with any of matched schemas, `x` is evaluated to\nremove all references and resolve default values before unification.\n```\n\n?",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0d261e8_c0b971a7",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2796,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-08-12T09:41:59Z",
      "side": 1,
      "message": "What does it mean to \"remove all references\" ?",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ceff9c6_a35b3cff",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2803,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2024-08-12T07:43:54Z",
      "side": 1,
      "message": "should these examples all be `\u0026 a` ?",
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "544863c7_54966c1c",
        "filename": "doc/ref/spec.md",
        "patchSetId": 1
      },
      "lineNbr": 2827,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-08-12T09:41:59Z",
      "side": 1,
      "message": "I think this would be clearer without X and the extra field:\n\nFor example:\n```\n// match without unifying\nd: matchN(1, [2])\nd: *3 | int // error: default picked before matching.\n```",
      "range": {
        "startLine": 2822,
        "startChar": 0,
        "endLine": 2827,
        "endChar": 0
      },
      "revId": "0b61a4a6a2680509664b5d8eeec4b0073448dd68",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}