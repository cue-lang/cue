{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0eccf765_4e7ecf50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-01-30T08:28:56Z",
      "side": 1,
      "message": "How likely is this low-level API to change over time? If upcoming evaluator refactors are likely to change it, I imagine we want to keep direct uses in CUE\u0027s std to a minimum.",
      "range": {
        "startLine": 10,
        "startChar": 25,
        "endLine": 10,
        "endChar": 34
      },
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00f66117_848dea28",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2023-01-30T09:54:53Z",
      "side": 1,
      "message": "At this level of usage they are unlikely to change too much. But it is a concern indeed. But for cases where the benefit is too great, like here, it is worth using it. We should strive to minimize it indeed, but this issue has come up multiple times over time, and the gains are large, and potentially even larger with further optimizations.",
      "parentUuid": "0eccf765_4e7ecf50",
      "range": {
        "startLine": 10,
        "startChar": 25,
        "endLine": 10,
        "endChar": 34
      },
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2821d199_404afd46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-01-30T08:28:56Z",
      "side": 1,
      "message": "FYI, for the future: https://pkg.go.dev/golang.org/x/perf/cmd/benchstat",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "688e35b8_c9af56d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2023-01-30T09:54:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2821d199_404afd46",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dc694f6_d58c7edb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-01-30T08:28:56Z",
      "side": 1,
      "message": "Is t",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1de5ce90_713b9e91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-02-01T09:05:57Z",
      "side": 1,
      "message": "Err, can\u0027t remember what I was writing here.",
      "parentUuid": "1dc694f6_d58c7edb",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4aa7b43c_fdf328c4",
        "filename": "pkg/list/sort.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2023-02-01T10:20:47Z",
      "side": 1,
      "message": "nit: if the methods are all pointer methods, I\u0027d make the constructor return the pointer value (or alternatively have:\n```\nfunc (v *valueSorter) init(list []cue.Value, cmp cue.Value)\n```\n)",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "989fa5c0_6ec18e6e",
        "filename": "pkg/list/sort.go",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2023-02-01T16:29:03Z",
      "side": 1,
      "message": "I generally do not want to rely on escape analysis and write something that is more clearly not allocating. Using init is more cumbersome as it requires 2 lines at all call sites.",
      "parentUuid": "4aa7b43c_fdf328c4",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8120977_6456e661",
        "filename": "pkg/list/sort.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2023-02-01T10:20:47Z",
      "side": 1,
      "message": "shouldn\u0027t we be using the non-deprecated API, to avoid being a bad example if nothing else?",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a9139f5_b57fe643",
        "filename": "pkg/list/sort.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2023-02-01T16:29:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8120977_6456e661",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f652d64_e131d4bf",
        "filename": "pkg/list/testdata/gen.txtar",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-01-30T08:28:56Z",
      "side": 1,
      "message": "do we want a change in behavior for the errors?",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41bbda2a_8ff0b953",
        "filename": "pkg/list/testdata/gen.txtar",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2023-01-30T09:54:53Z",
      "side": 1,
      "message": "I think it is fine. The only thing that could improve is that instead of using \"list\", we use the actual file name in the package.\n\nBut line reporting is a bit brittle, which should be fixed in future CLs. For now this means that some positions will appear and reappear.\n\nNote that it is not always easy to determine what the right set of positions is anyway. We need to come up with some principled approach about this.",
      "parentUuid": "2f652d64_e131d4bf",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f2339d7_04f8726e",
        "filename": "pkg/list/testdata/gen.txtar",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-02-01T09:05:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "41bbda2a_8ff0b953",
      "revId": "122cdd05acc7af7ac7d7729793c0c9bd70233ff1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}