{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d9d4551_d2977303",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-13T13:58:51Z",
      "side": 1,
      "message": "can you summarize what is the effect of this? it\u0027s not obvious to me at least",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 2
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "329b59b7_d4f3e26e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2023-12-13T15:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d9d4551_d2977303",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 2
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67f1070c_4c4ef0c9",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-13T13:58:51Z",
      "side": 1,
      "message": "I think it\u0027s dangerous to take `${cache}/cue` in its entirety for the module download cache. It\u0027s rather likely that we will need other caches in the future, e.g. for wasm or for expensive analyses like backwards compatibility.\n\nI\u0027d personally make this `${cache}/cue/mod` to leave space for other directories.",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 41
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c334aa2_af1874fe",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2023-12-13T15:44:34Z",
      "side": 1,
      "message": "I don\u0027t think we\u0027re ruling anything out here. We already have two distinct kinds of cache in this directory: `cache/download` and modules themselves, which always have a dot in the first element. So we can always add other top level directories inside `${cache}` without a problem, as long as the names don\u0027t contain a dot, so I don\u0027t _think_ there\u0027s an issue copying Go\u0027s approach here.",
      "parentUuid": "67f1070c_4c4ef0c9",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 41
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c3fee8e_dbd5794f",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-13T15:52:15Z",
      "side": 1,
      "message": "You\u0027re not technically ruling it out, but in practice you are - we want `${cache}/cue` to be an easy to navigate directory, for example if a user wants to look at it or if it gets too large and a user _needs_ to look at it to figure out what\u0027s happening.\n\nIt\u0027s a lot easier if that directory only contains e.g. `mod` and `wasm`, which are self-describing and clear, and not 200 module-path directories with `wasm` buried somewhere in there.\n\nOne example where this is painful already in Go - they shoved the fuzz cache _inside_ the Go build cache, so `fuzz` is buried underneath dozens of directory names like `0e` or `4a`. At least they got it right with the module cache, where it\u0027s in its own `mod` directory, even if it\u0027s inside the now-defunct GOPATH.\n\nFWIW, I also think the downloads should go in `${cache}/mod/download` and not `${cache}/mod/cache/download` - the latter is I think an artifact from Go\u0027s GOMODCACHE being inside `${GOPATH}/pkg/mod`, which is not a cache, so the cache directory is nested. We are already in a cache directory ourselves.",
      "parentUuid": "5c334aa2_af1874fe",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 41
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41e8933a_c0f69e5c",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-13T16:17:34Z",
      "side": 1,
      "message": "FWIW I agree with Daniel here. It has long frustrated me the way the go structure works because of the ~ambiguity that is only \"resolved\" by the absence of a `.`. Having a separate subdirectory costs nothing, and greatly improves the simplicity/understandability.",
      "parentUuid": "6c3fee8e_dbd5794f",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 41
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bdcd7b2_869e1c24",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2023-12-13T16:21:49Z",
      "side": 1,
      "message": "Given that this implies changes to the modcache package, I think I\u0027ll leave this as a TODO and change it in a subsequent CL.",
      "parentUuid": "6c3fee8e_dbd5794f",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 41
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c02ba285_595117b1",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-14T14:20:14Z",
      "side": 1,
      "message": "please do include the TODO here, otherwise we might forget entirely.",
      "parentUuid": "9bdcd7b2_869e1c24",
      "range": {
        "startLine": 84,
        "startChar": 8,
        "endLine": 84,
        "endChar": 41
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fae5225e_35baa189",
        "filename": "cmd/cue/cmd/script_test.go",
        "patchSetId": 12
      },
      "lineNbr": 216,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-13T13:58:51Z",
      "side": 1,
      "message": "mixing filepath.Join with literal slashes is rather odd :) I\u0027d replace the slash.",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 216,
        "endChar": 2
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "826c58fe_adf0f448",
        "filename": "cmd/cue/cmd/script_test.go",
        "patchSetId": 12
      },
      "lineNbr": 216,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2023-12-13T15:44:34Z",
      "side": 1,
      "message": "It\u0027s actually a fairly common idiom (random example from the Go source here: https://github.com/golang/go/blob/58c28ba286dd0e98fe4cca80f5d64bbcb824a685/src/cmd/go/internal/modfetch/sumdb.go#L290 - there are many more) - I don\u0027t see much problem with it. The forward slashes don\u0027t remain in the result.",
      "parentUuid": "fae5225e_35baa189",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 216,
        "endChar": 2
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1693347_e8a19b9a",
        "filename": "cmd/cue/cmd/script_test.go",
        "patchSetId": 12
      },
      "lineNbr": 216,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-13T15:52:15Z",
      "side": 1,
      "message": "TIL Clean (ran by Join) replaces slashes by separators!",
      "parentUuid": "826c58fe_adf0f448",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 216,
        "endChar": 2
      },
      "revId": "25b94df5cb30c15de3db9aec1cc026f56d720e99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}