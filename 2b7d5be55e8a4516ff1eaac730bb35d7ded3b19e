{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fe4b9000_766d18fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-05-24T15:28:06Z",
      "side": 1,
      "message": "CC Marcel in case you think the formatting change is not desirable.",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d92463c_662728c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-05-24T15:41:58Z",
      "side": 1,
      "message": "Unity failed, presumably due to the formatting change. Not sure what\u0027s the best way to deal with that. Presumably we\u0027re happy with the fmt change with the assumption that the old formatting was buggy.\n\nOpen to comments and suggestions :) ",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a3a2571_0530135d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2022-05-27T20:12:04Z",
      "side": 1,
      "message": "Will leave Marcel to review here. \n\nI\u0027m happy to help show you unity and confirm the break is as expected, @mvdan.",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5029e3f1_2878b684",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-05-29T20:34:10Z",
      "side": 1,
      "message": "Sounds good! I\u0027ll wait to hear if this formatting change is acceptable or not. Rog, you may also have an opinion :)",
      "parentUuid": "0a3a2571_0530135d",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "975af08c_306ed748",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2022-05-30T17:07:03Z",
      "side": 1,
      "message": "LGTM thanks!",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f93ef85e_ad5b7c8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2022-06-21T10:24:00Z",
      "side": 1,
      "message": "Tests are typically put in the directory that implements this functionality. So in this case `cue/format`.\n\nThese tests should at least be there. But I think it is then not necessary, or even undesirable, to have the tests here. The cue/cmd tests are typically reserved for tests related to the command line specifically.\n\nThe only \"generic\" test suite we have is `cue/testdata`. (This testdata directory should probably move to the top level directory of the repo.)\nBasically, several components in `internal/core` build their tests on that. But in each case the respective test is run in the relevant directory.\n",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f953553_50771e74",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-06-23T14:35:43Z",
      "side": 1,
      "message": "The reason I used cmd/cue/cmd is that I wanted a testscript txtar file; note how I want to have three CUE files, because each one of these edge cases needs the clause to be at the start of the file to reproduce the bug.\n\ncue/format does have tests, and I initially looked there, but it does not use testscript or txtar files at all just yet. It uses a testdata input+golden file structure, so it would mean six added files - not great. So I thought that piggybacking off of an existing place that already uses testscript would be easier.\n\nI\u0027m happy to move this test to cue/format if you think that\u0027s best, though the diff will certainly be larger as I\u0027ll have to teach it about txtar.",
      "parentUuid": "f93ef85e_ad5b7c8e",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e0a52c5_8077b30f",
        "filename": "cue/format/node.go",
        "patchSetId": 1
      },
      "lineNbr": 705,
      "author": {
        "id": 1020202
      },
      "writtenOn": "2022-05-25T03:44:29Z",
      "side": 1,
      "message": "I have the same question here since it\u0027s kinda strange if you have to fix two places for different clauses.",
      "range": {
        "startLine": 705,
        "startChar": 0,
        "endLine": 705,
        "endChar": 1
      },
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21b8dbf3_9403384b",
        "filename": "cue/format/node.go",
        "patchSetId": 1
      },
      "lineNbr": 705,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-05-26T09:13:20Z",
      "side": 1,
      "message": "yep indeed! I don\u0027t want to refactor this in the same CL, but I\u0027m leaving the TODO to perhaps look at it later.",
      "parentUuid": "8e0a52c5_8077b30f",
      "range": {
        "startLine": 705,
        "startChar": 0,
        "endLine": 705,
        "endChar": 1
      },
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ebfd3c6_0d545676",
        "filename": "cue/format/node.go",
        "patchSetId": 1
      },
      "lineNbr": 705,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2022-06-21T10:28:18Z",
      "side": 1,
      "message": "At the semantic level they are different, which is probably why.",
      "parentUuid": "21b8dbf3_9403384b",
      "range": {
        "startLine": 705,
        "startChar": 0,
        "endLine": 705,
        "endChar": 1
      },
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e8fe369_f46b1a01",
        "filename": "cue/format/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-05-24T15:28:51Z",
      "side": 1,
      "message": "I was confused by the name \"mayCombine\", as the return booleans are true if the combining requires blank spaces. I would have guessed the opposite given the name.",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26ae7f56_5efeb440",
        "filename": "cue/format/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 406,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2022-06-21T10:28:18Z",
      "side": 1,
      "message": "It\u0027s a legacy artifact of the original name of the function: https://github.com/golang/go/blob/5fcd1badf724db853784243b29711df209976873/src/cmd/compile/internal/syntax/printer.go#L236",
      "parentUuid": "5e8fe369_f46b1a01",
      "revId": "2b7d5be55e8a4516ff1eaac730bb35d7ded3b19e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}