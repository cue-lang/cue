{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "91ad8988_2904b109",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-11-25T13:42:55Z",
      "side": 1,
      "message": "shorten this like https://cuelang.org/cl/1203603 - which will also keep working even if we move to a different Gerrit server/URL",
      "revId": "3d43848c9b6c3dce3be8b5923ac2decbcac0a937",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9d5f2cf_110ca4fa",
        "filename": "cue/cuecontext/cuecontext.go",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-11-25T13:42:55Z",
      "side": 1,
      "message": "thinking outloud for a second, do we actually want this in the public API?\n\nmy impression is that we will soon get to a point where `CUE_EXPERIMENT\u003dtoposort` is on by default, and then sometime after we will remove the option to disable it via `CUE_EXPERIMENT\u003dtoposort\u003d0`, which will allow us to delete all the old sorting code. with the assumption that the old sorting was arbitrary, undocumented, and noone should need to stick to it.\n\nat that point... why would we want a TopologicalSort option? it would be deprecated or a no-op, both of which are best avoided.\n\nif what you are trying to solve is how to enable this from Go code, users could always do `os.Setenv(\"CUE_EXPERIMENT\", \"toposort\")` - not ideal, but it does work. Or, alternatively as a nicer API, next to the existing `func CUE_DEBUG(s string) Option` we could add `func CUE_EXPERIMENT(s string) Option`.",
      "revId": "3d43848c9b6c3dce3be8b5923ac2decbcac0a937",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}