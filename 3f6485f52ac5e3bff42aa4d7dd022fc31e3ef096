{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c584eee0_f0713839",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:52Z",
      "side": 1,
      "message": "Some really nice improvements. Just a few comments on discrepancies, a bunch of which should probably be fixed.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae04abc_a04c5a25",
        "filename": "cmd/cue/cmd/testdata/script/encoding_comments.txtar",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "This one seems wrong. In the original, there is an explicit ordering:\nfoo, struct, Data, #Schema, list, and no evidence to the contrary.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f355c2dc_5ae8c978",
        "filename": "cmd/cue/cmd/testdata/script/encoding_comments.txtar",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T14:26:46Z",
      "side": 1,
      "message": "`#Schema` is in its own file (`schema.cue`), on its own, and so has no relationship with any other node. The way in which it\u0027s used doesn\u0027t change that.\n\nfrom `data.cue` we know (read `a -\u003e b` as \"a comes before b\"):\nData -\u003e implicitUnified -\u003e explicitUnified -\u003e disjunction\n\nfrom `basic.cue`:\nfoo -\u003e struct -\u003e list\n\nAll of these relationships are honoured in the output.\n\nWe have 3 unrelated chains then:\n1. #Schema\n2. Data -\u003e implicitUnified -\u003e explicitUnified -\u003e disjunction\n3. foo -\u003e struct -\u003e list\n\nThe algorithm behaves as follows:\n1. #Schema wins because `#` \u003c `D` and `f`. Chain 1 is now complete\n2. Data wins because `D` \u003c `f`.\n3. foo wins because `f` \u003c `i`\n4. implicitUnified wins because `i` \u003c `s`\n5. explicitUnified wins because `e` \u003c `s`\n6. disjunction wins because `d` \u003c `s`. Chain 2 is now complete\n7. struct, then list finishes chain 3.",
      "parentUuid": "3ae04abc_a04c5a25",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7924def_485a5258",
        "filename": "cmd/cue/cmd/testdata/script/encoding_comments.txtar",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-21T14:18:15Z",
      "side": 1,
      "message": "doh. Please ignore me.",
      "parentUuid": "f355c2dc_5ae8c978",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40a07c05_7cb79b40",
        "filename": "cmd/cue/cmd/testdata/script/exp_gengotypes.txtar",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "Not sure I understand what is going on here, but it would be worth considering if we use top in these cases.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0e70042_54fc4667",
        "filename": "cmd/cue/cmd/testdata/script/exp_gengotypes.txtar",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-01-21T11:09:11Z",
      "side": 1,
      "message": "The changes here look overall correct.\n* EmptyStruct is declared before Root in the same original CUE file.\n* Embedded1 and Embedded2 are embedded at the top of the Root struct in the original CUE.\n* LinkedList is declared in types.cue originally, which comes before root.cue.\n\nSo all LGTM.\n\n\u003e but it would be worth considering if we use top in these cases.\n\nHonestly not sure what you mean by this.",
      "parentUuid": "40a07c05_7cb79b40",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ed1ead2_dbccfd3d",
        "filename": "cmd/cue/cmd/testdata/script/exp_gengotypes.txtar",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-01-21T11:10:56Z",
      "side": 1,
      "message": "\u003e LinkedList is declared in types.cue originally, which comes before root.cue.\n\nI got that filename ordering backwards actually (I tend to have issues with this), so perhaps this is backwards. But it\u0027s also not particularly important for a code generation tool.",
      "parentUuid": "d0e70042_54fc4667",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98134b68_50b98865",
        "filename": "cmd/cue/cmd/testdata/script/exp_gengotypes.txtar",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-21T15:28:48Z",
      "side": 1,
      "message": "Ok, I\u0027ve got to the bottom of this one. Note that as a general principle, we do not pay attention to filename, because we want the property that renaming a file does not alter output.\n\nWhat\u0027s tripping us up in this case is that `instVal.Fields(cue.Definitions(true))` does not sort definitions on their own. It sorts everything, and we then skip over things that are not definitions. So, we actually have three unrelated chains here:\n\n1. from import.cue, `#remoteStructs` -\u003e `_unusedImport`\n2. from root.cue, `_#overridenNeverGenerate` -\u003e `#emptyStruct` -\u003e `#root` -\u003e `_#hiddenStruct` -\u003e `#embeddedStruct` -\u003e `_#unusedHiddenStruct` -\u003e `#attrName` -\u003e `#attrType`\n3. from types.cue, `#types` -\u003e `#linkedList`\n\nIf you consider these chains, with their hidden fields too, it makes much more sense that the output order is:\n`#remoteStructs` -\u003e `#types` -\u003e `#linkedList` -\u003e `#emptyStruct` -\u003e `#root` -\u003e `#embeddedStruct` -\u003e `#attrName` -\u003e `#attrType`\n\nEssentially, once one chain gets to a `_`, we tend to switch to another chain because `#` \u003c `_`. So if you figure out the whole list, with hidden fields included, I think it all makes sense.",
      "parentUuid": "0ed1ead2_dbccfd3d",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15acc8f6_76300d9e",
        "filename": "cmd/cue/cmd/testdata/script/exp_gengotypes.txtar",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-01-21T15:35:46Z",
      "side": 1,
      "message": "As long as you\u0027re happy that the new order makes sense, I\u0027m happy. As I mentioned, the order for the code generator here is not terribly important, and in the other cases, toposort is clearly an improvement anyway.",
      "parentUuid": "98134b68_50b98865",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fd0502a_2c24336b",
        "filename": "cmd/cue/cmd/testdata/script/export_issue3511.txtar",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "This is an interesting case. I would have thought there is no ordering, and thus that namespace comes later.\n\nBut I guess this is based on file position?\n\nI\u0027m not entirely sure if this should hold in this case. But as long as it is explainable from the set of rules we tell users, it is probably fine.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a484ec0_bcee1ecd",
        "filename": "cmd/cue/cmd/testdata/script/export_issue3511.txtar",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T14:29:02Z",
      "side": 1,
      "message": "Implicit unification. As the docs in toposort say, this is important:\n\n```\n// 4. Implicit unification\n//\n//\tc: {z: _, y: _}\n//\tc: {x: _, w: _}\n//\n// Here, like with embeddings, we choose that the source order is\n// important, and so we must have a minimum of (z -\u003e y), (x -\u003e w) and\n// (y -\u003e x).\n```\n\nTherefore, here we have `namespace -\u003e name`.",
      "parentUuid": "1fd0502a_2c24336b",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c71ee508_29c10e0d",
        "filename": "cmd/cue/cmd/testdata/script/export_issue3511.txtar",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-21T14:18:15Z",
      "side": 1,
      "message": "It is not a huge deal and if the user uses a fully-defined Schema, this will have a fixed ordering anyway.\n\nBut maybe add a TODO saying we need to consider this.",
      "parentUuid": "7a484ec0_bcee1ecd",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b6dd5b0_39b56f5c",
        "filename": "internal/core/export/export_test.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "Unwanted reordering.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e2635df_1c85f593",
        "filename": "internal/core/export/export_test.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T17:19:28Z",
      "side": 1,
      "message": "This one,...",
      "parentUuid": "6b6dd5b0_39b56f5c",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60de6d1e_6b17d381",
        "filename": "internal/core/export/testdata/main/adt.txtar",
        "patchSetId": 1
      },
      "lineNbr": 441,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T11:52:17Z",
      "side": 1,
      "message": "I guess I should remove this (internal) file?",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ffccdd1_9415edfa",
        "filename": "internal/core/export/testdata/main/adt.txtar",
        "patchSetId": 1
      },
      "lineNbr": 441,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "Yes. It does so automatically for the main test suite, but apparently not here.",
      "parentUuid": "60de6d1e_6b17d381",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38f41206_a1a752b8",
        "filename": "internal/core/export/testdata/main/adt.txtar",
        "patchSetId": 1
      },
      "lineNbr": 441,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T17:08:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ffccdd1_9415edfa",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee0f1d0b_2ca8204d",
        "filename": "internal/core/export/testdata/main/alias.txtar",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "This seems wrong. I only see evidence for simple -\u003e cross (so like the original).",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ee144a8_28d66efc",
        "filename": "internal/core/export/testdata/main/alias.txtar",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T14:50:12Z",
      "side": 1,
      "message": "`simple` and `cross` are in different files, and are unrelated to each other. So within `fieldAlias` we have two chains, one with just `simple` and one with `cross`. `cross` wins because `c` \u003c `s`.",
      "parentUuid": "ee0f1d0b_2ca8204d",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24c7b154_702a778c",
        "filename": "internal/core/export/testdata/main/alias.txtar",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-21T14:18:15Z",
      "side": 1,
      "message": "never mind me again.",
      "parentUuid": "6ee144a8_28d66efc",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26b5434f_13d7b001",
        "filename": "internal/core/export/testdata/main/alias.txtar",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "I would expect z-b and r to be unordered, so the result is r-z-b or such.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e45f376_733cf975",
        "filename": "internal/core/export/testdata/main/alias.txtar",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T14:50:12Z",
      "side": 1,
      "message": "Within the vertex for `a`, we find conjuncts for `z`, `b`, and `r`.\nWe definitely have `z -\u003e b` because of `r\u003d[string]: {z: 1, b: r | null}`\nWe also find that the source positions of `z` and `b` are both before `r`. So the order is `z -\u003e b -\u003e r`",
      "parentUuid": "26b5434f_13d7b001",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d45d2818_d87792ed",
        "filename": "internal/core/export/testdata/main/alias.txtar",
        "patchSetId": 1
      },
      "lineNbr": 452,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-21T14:18:15Z",
      "side": 1,
      "message": "TODO applies her as well.\n\nSo leave for now.",
      "parentUuid": "6e45f376_733cf975",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "192f378c_11e6e13e",
        "filename": "internal/core/export/testdata/main/issue662.txtar",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T11:52:17Z",
      "side": 1,
      "message": "remove this internal file?",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d57f9da_47434a96",
        "filename": "internal/core/export/testdata/main/issue662.txtar",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T17:08:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "192f378c_11e6e13e",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af828feb_44ba87ad",
        "filename": "internal/core/export/testdata/main/merge.txtar",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T11:52:17Z",
      "side": 1,
      "message": "remove this.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f55b6ef_54a25586",
        "filename": "internal/core/export/testdata/main/merge.txtar",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "af828feb_44ba87ad",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "030dd90b_b9fd63b6",
        "filename": "internal/core/export/testdata/main/merge.txtar",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T17:08:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f55b6ef_54a25586",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd3dcae3_22cc1bc8",
        "filename": "pkg/time/testdata/gen.txtar",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "This would ideally be fixed. Shouldn\u0027t be too hard.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b804fe9_fabcb159",
        "filename": "pkg/time/testdata/gen.txtar",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T17:19:28Z",
      "side": 1,
      "message": "...and this one, are both the same thing: I never did implement sorting in the conversion from Go structs. So it\u0027s defaulting back to name only. Happy to work on that and implement it, I\u0027m just not sure whether we should hold up this release for that feature?",
      "parentUuid": "dd3dcae3_22cc1bc8",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "723455fc_6e8318e1",
        "filename": "tools/flow/testdata/issue2416a.txtar",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T11:52:17Z",
      "side": 1,
      "message": "remove this.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7819ffc_1365b042",
        "filename": "tools/flow/testdata/issue2416a.txtar",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "723455fc_6e8318e1",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db2d5cf0_2468fab2",
        "filename": "tools/flow/testdata/issue2416a.txtar",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T17:08:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7819ffc_1365b042",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99daf4e7_d84cf3fa",
        "filename": "tools/flow/testdata/issue2490.txtar",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "It seems that this is wrong. $id comes before text in cli.Print.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb8358e0_ba3930c1",
        "filename": "tools/flow/testdata/issue2490.txtar",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T16:21:25Z",
      "side": 1,
      "message": "Indeed it does. There does appear to be something wrong here. We have explicit unification going on here, and from the docs:\n\n```\n// 2. Explicit unification\n//\n//\tx: {z: _, y: _} \u0026 {x: _, w: _}\n//\n// When considering x, we want no edges between the arguments of the\n// explicit unification operator \u0027\u0026\u0027.  There should only be edges (z\n// -\u003e y) and (x -\u003e w). \n```\n\nHowever, what\u0027s happening is the algorithm is seeing conjuncts in this order:\n```\ntext: \"foo\"\n$id:  *\"tool/cli.Print\" | \"print\"\ntext: string\n```\nIt\u0027s ignoring the edge from `$id -\u003e text` because it thinks `text` has already been provided in this struct. It has been. But it\u0027s failed to figure out they\u0027re from the explicit unification. I\u0027m still digging into this one.",
      "parentUuid": "99daf4e7_d84cf3fa",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5efb4093_2049810a",
        "filename": "tools/flow/testdata/issue2490.txtar",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T16:47:26Z",
      "side": 1,
      "message": "Ah, figured it out. It\u0027s because it\u0027s an embedding, and the evaluator doesn\u0027t keep the explicit unification (BinaryExpr) around in the conjuncts of the vertex. If I change the test to:\n\n```\nroot: foo: cli.Print \u0026 {text: json.Marshal(input)}\n```\n\nthen it behaves as desired, because now the vertex has a BinaryExpr in its conjuncts. We treat everything as implicitly unified *unless* there\u0027s explicit evidence that it\u0027s explicitly unified.",
      "parentUuid": "bb8358e0_ba3930c1",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc4497b9_234bdac8",
        "filename": "tools/flow/testdata/issue2490.txtar",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-21T14:18:15Z",
      "side": 1,
      "message": "We should track this.\n\nEven so, text comes after the other two, so probably still good to investigate.",
      "parentUuid": "5efb4093_2049810a",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e36b1da_729f398a",
        "filename": "tools/flow/testdata/slice.txtar",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "This seems a bit disturbing.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a96ca600_00cdd944",
        "filename": "tools/flow/testdata/slice.txtar",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T14:06:20Z",
      "side": 1,
      "message": "I went through this one before. It\u0027s the same graph, it\u0027s just the nodes have been renamed.",
      "parentUuid": "4e36b1da_729f398a",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0867a99e_ba652f21",
        "filename": "tools/flow/testdata/template.txtar",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T11:52:17Z",
      "side": 1,
      "message": "remove this.",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5f44e18_f7d9862e",
        "filename": "tools/flow/testdata/template.txtar",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-01-20T14:00:07Z",
      "side": 1,
      "message": "yes",
      "parentUuid": "0867a99e_ba652f21",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79137515_21254985",
        "filename": "tools/flow/testdata/template.txtar",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-01-20T17:08:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5f44e18_f7d9862e",
      "revId": "3f6485f52ac5e3bff42aa4d7dd022fc31e3ef096",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}