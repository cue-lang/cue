{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4fc29f3a_d942865e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-05-13T11:46:10Z",
      "side": 1,
      "message": "Good catch.\n\nThis issue must have been introduced when we moved when we included optional fields in the Arcs list. Originally they were maintained elsewhere, but for various reasons we needed to include them in Arcs.\n\nA question remains whether we should count required fields. With this change they are _not_ counted. (The IsOptional method is inappropriately named, a remnant from when we did not have required fields.) Technically, required fields are not fields. So that means this change is correct. On the other hand, if we have, say, a MaxFields of 1, and we have two required fields, we know there is no completed configuration that can ever satisfy this constraint.\n\nI\u0027m inclined to say that we _should_ count required fields for both MinFields and MaxFields, but this can be left for another CL.",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9ffec52_ecb1e166",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-13T11:49:02Z",
      "side": 1,
      "message": "Filed https://github.com/cue-lang/cue/issues/3141 for tracking this follow-up work - we would need tests with required fields too.",
      "parentUuid": "4fc29f3a_d942865e",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db5ead54_8dd57882",
        "filename": "pkg/struct/testdata/struct.txtar",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-09T21:59:16Z",
      "side": 1,
      "message": "so in this case the old evaluator is still buggy? should we call this out in the commit message?",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41eb42e3_8983bf63",
        "filename": "pkg/struct/testdata/struct.txtar",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1037843
      },
      "writtenOn": "2024-05-10T06:47:57Z",
      "side": 1,
      "message": "It actually looks OK, I\u0027m not sure why the output is different in the two cases:\n\n```\n╰─❯ go run ./cmd/cue export test.cue                                                                                                                                                       ─╯\nminFields.failOptional1: invalid value {a?:1} (does not satisfy struct.MinFields(1)): len(fields) \u003c MinFields(1) (0 \u003c 1):\n    ./test.cue:4:12\n    ./test.cue:4:29\n    ./test.cue:6:17\nexit status 1\n╭─ ~/src/cue-lang/cue change-1194425:master ⇡2 *5 ?1 ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 09:45:51 ─╮\n╰─❯ CUE_EXPERIMENT\u003devalv3 go run ./cmd/cue export test.cue                                                                                                                                 ─╯\nminFields.failOptional1: invalid value {a?:1} (does not satisfy struct.MinFields(1)): len(fields) \u003c MinFields(1) (0 \u003c 1):\n    ./test.cue:4:12\n    ./test.cue:4:29\nexit status 1\n```",
      "parentUuid": "db5ead54_8dd57882",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "677a94b2_f1932a45",
        "filename": "pkg/struct/testdata/struct.txtar",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-10T08:32:04Z",
      "side": 1,
      "message": "differences in positions are a known quirk that will be ironed out. what concerns me is how the outputs and diff between them in the test show that only the new evaluator fails as expected. maybe Marcel can give some ideas as to why this might be happening.\n\nyou could try rebasing on master to see if that helps.",
      "parentUuid": "41eb42e3_8983bf63",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62fb8fc3_709f9c67",
        "filename": "pkg/struct/testdata/struct.txtar",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-13T14:16:18Z",
      "side": 1,
      "message": "So to recap, `cue export` fails as expected with both the old and new evaluator, but in the test, the old evaluator succeeds unexpectedly. Perhaps the code being run is different. @mpvl@gmail.com any ideas?",
      "parentUuid": "677a94b2_f1932a45",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41a77083_4f786036",
        "filename": "pkg/struct/testdata/struct.txtar",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-13T14:46:05Z",
      "side": 1,
      "message": "He says it\u0027s a bit surprising, and perhaps some sort of bug/difference between the old and new evaluator. Either way it\u0027s not hugely important, and leaving this diff here is fine given that it\u0027s the new evaluator that works as expected in the test. Maybe add a diff/explanation like:\n\n\u003e failOptional1: the new evaluator fails as expected, but the old evaluator doesn\u0027t - perhaps due to a bug in either the old evaluator or test code.",
      "parentUuid": "62fb8fc3_709f9c67",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad80ca5d_dfa6ceaf",
        "filename": "pkg/struct/testdata/struct.txtar",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1037843
      },
      "writtenOn": "2024-05-13T15:18:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41a77083_4f786036",
      "revId": "42a32ce38dc34b57457a2d119059bb99524c4273",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}