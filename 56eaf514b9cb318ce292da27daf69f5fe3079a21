{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4efa7b18_7e147652",
        "filename": "cmd/cue/cmd/testdata/script/embed.txtar",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-06-25T17:16:23Z",
      "side": 1,
      "message": "The proposal says \"Hidden files, like those starting with a dot, are not matched\", and also \"only files that are within the module may be embedded\" but I don\u0027t see any logic in the embed implementation that seems to implement those features.\n\nI\u0027d like to see tests that check the behaviour with respect to:\n\n- files starting with \".\" and glob patterns that match them\n- directories that are outside of the current module because they are excluded by filename (e.g. directories starting with \"_\" or \".\")\n- nested module directories (also by definition outside of the current module).",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2cce321_f93abc64",
        "filename": "cmd/cue/cmd/testdata/script/embed.txtar",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-06-26T07:23:16Z",
      "side": 1,
      "message": "Added TODOs for most of those, with some exceptions. See below. This was meant as an MVP, and we can do the rest in followup CLs.\n\nRegarding \"files within a module\":\n- it is not possible to import from any parent directory of a package, so by implication it is also not possible to import from parent directory of a module.\n- I added a TODO for excluding files within a module. I\u0027m not even sure if we support submodules, but if we do, this should really be a functionality of load. This does not seem to be the right place to duplicate this functionality.\n\nRegarding \"no hidden files\", this is explicitly mentioned for glob, as it has some security implications. (The mention of hidden files in the security section is written as and meant to be an anaphora referring to the text in the glob section.)\n\nI\u0027ll address hidden files in a followup CL, as it turns out to be not super simple.\n\nI\u0027m not sure why we should disallow directories starting with _. This seems CUE specific. Are there security concerns with that?\n\nTo your earlier point, it may be good to have the loader, or some other piece of functionality, give a fs.FS for a package or module with all current files.",
      "parentUuid": "4efa7b18_7e147652",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ecd05dd_e73be0a8",
        "filename": "cmd/cue/cmd/testdata/script/embed.txtar",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-06-26T09:33:52Z",
      "side": 1,
      "message": "\u003e I\u0027m not even sure if we support submodules, but if we do, this should really be a functionality of load.\n\nWe do support nested modules and I don\u0027t see how this functionality could be implemented by load. Happy to chat this through online if you like.\n\n\u003e I\u0027m not sure why we should disallow directories starting with _. \n\nI didn\u0027t say those directories should be disallowed, just that there should be tests that check the behaviour with respect to those directories, as they are treated somewhat specially in some places.",
      "parentUuid": "f2cce321_f93abc64",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4ae03f8_550c54aa",
        "filename": "cmd/cue/cmd/testdata/script/embed.txtar",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-06-26T09:37:42Z",
      "side": 1,
      "message": "To be clear, I think it would be worth adding tests that _show_ the current behaviour with respect to the above aspects even if support is not yet added, so when the TODOs are addressed, the test behaviour can be seen to change. Having a glob that matches files in a nested submodule is one such example (Go gives an error in such a case).",
      "parentUuid": "7ecd05dd_e73be0a8",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7301cbc6_5110e909",
        "filename": "cmd/cue/cmd/testdata/script/embed.txtar",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-06-27T07:56:01Z",
      "side": 1,
      "message": "Gotcha Added tests.",
      "parentUuid": "e4ae03f8_550c54aa",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35bd4f60_ea4797c8",
        "filename": "cmd/cue/cmd/testdata/script/embed_mod.txtar",
        "patchSetId": 13
      },
      "lineNbr": 6,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-06-25T17:10:09Z",
      "side": 1,
      "message": "This isn\u0027t used.",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fc94ee3_aa19e487",
        "filename": "cmd/cue/cmd/testdata/script/embed_mod.txtar",
        "patchSetId": 13
      },
      "lineNbr": 6,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-06-26T07:23:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35bd4f60_ea4797c8",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf0c7fe3_5383aeb5",
        "filename": "cmd/cue/cmd/testdata/script/embed_mod.txtar",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-06-25T17:10:09Z",
      "side": 1,
      "message": "I\u0027d like to see a module test that checks that embedding works inside an imported module, not just the main module.",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb3e9af2_09cc2072",
        "filename": "cmd/cue/cmd/testdata/script/embed_mod.txtar",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-06-26T07:23:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf0c7fe3_5383aeb5",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "867598b2_70d382bc",
        "filename": "cue/interpreter/embed/embed.go",
        "patchSetId": 13
      },
      "lineNbr": 147,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-06-25T17:10:09Z",
      "side": 1,
      "message": "This method is unused.",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13aa49b3_8f485f58",
        "filename": "cue/interpreter/embed/embed.go",
        "patchSetId": 13
      },
      "lineNbr": 147,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-06-26T07:23:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "867598b2_70d382bc",
      "revId": "56eaf514b9cb318ce292da27daf69f5fe3079a21",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}