{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7bc71244_f96808ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-18T15:57:53Z",
      "side": 1,
      "message": "SGTM but that omitempty bit seems incorrect to me",
      "revId": "598373390a6c913b5e36d550eba5e9c2ad475b04",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e455437_d86186c6",
        "filename": "internal/mod/modfile/modfile.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-18T15:57:53Z",
      "side": 1,
      "message": "I\u0027m rather confused.\n\n1 - the json v1 semantics *are* that omitempty ignores both nil and non-nil-but-empty slices. See https://go.dev/play/p/AtJ7s2Jf_eS\n\n2 - you are doing a CUE syntax export, not a json encode, as far as I can tell\n\nThe Context.Encode docs seem to agree with me:\n\n```\n// The \"omitempty\" option specifies that the field should be omitted from the\n// encoding if the field has an empty value, defined as false, 0, a nil pointer,\n// a nil interface value, and any empty array, slice, map, or string.\n```\n\nSo either there\u0027s a disconnect here, or our code is buggy and isn\u0027t following the docs.",
      "revId": "598373390a6c913b5e36d550eba5e9c2ad475b04",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "693a4483_9da86532",
        "filename": "internal/mod/modfile/modfile.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2023-12-18T17:02:29Z",
      "side": 1,
      "message": "Yup, the docs are wrong here.\n\nHere\u0027s the evidence: https://go.dev/play/p/_RBcvl9dGwI\nWe should decide what to do about this: my gut feeling is that we should change the behaviour to follow encoding/json, but that might break things, so we should think hard about it.\n\nAt any rate, the doc comment (and my misleading comment here) should be fixed.",
      "parentUuid": "5e455437_d86186c6",
      "revId": "598373390a6c913b5e36d550eba5e9c2ad475b04",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca1b9466_c32be9df",
        "filename": "internal/mod/modfile/modfile.go",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-18T17:11:41Z",
      "side": 1,
      "message": "Definitely think we should attempt to fix the implementation in the upcoming release. We can be loud and clear about that change in behavior in the changelog.\n\nDo you want to file that issue, or should I?\n\nAnd agreed that it\u0027s entirely fine to leave your workaround as-is, just with a fixed comment, and probably as a TODO linking to the issue.",
      "parentUuid": "693a4483_9da86532",
      "revId": "598373390a6c913b5e36d550eba5e9c2ad475b04",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}