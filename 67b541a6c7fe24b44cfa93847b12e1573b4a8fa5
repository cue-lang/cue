{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "98687964_3e7ac65b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 7,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T07:51:27Z",
      "side": 1,
      "message": "Please reference the modules proposal, and make clear this is experimental.\n\nI would also describe any major features implemented and limitations of the command in this commit message so people don\u0027t have to go digging/looking elsewhere.",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4456f66_a17b4b2f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 7,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-07T11:23:53Z",
      "side": 1,
      "message": "Agreed that this commit message is far too short. The two previous ones are much better, and this one is even more visible and important to end users, so it needs added context.",
      "parentUuid": "98687964_3e7ac65b",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc88812d_135739f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T08:10:18Z",
      "side": 1,
      "message": "As discussed the other day I think we also need some tests that cover error cases so that we can see the fs.FS \"issues\" you referred to. That way we can know how bad they are (and when to try and fix them)",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c099806_c22c9870",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T08:10:56Z",
      "side": 1,
      "message": "Sorry, meant to leave that comment unresolved. Marking so.",
      "parentUuid": "fc88812d_135739f5",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77a0df34_bbb53ff1",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T07:51:27Z",
      "side": 1,
      "message": "Have we captured this as an issue or TODO?",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2ea153d_1092989c",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 60,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T07:51:27Z",
      "side": 1,
      "message": "`getRegistry` is not documented so it\u0027s unclear when/why it would return nil. What non-success cases are not covered by nil errors that we need to check this?",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dce78353_4bedcabe",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 77,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T07:51:27Z",
      "side": 1,
      "message": "You could implement only writing the file if it hasn\u0027t changed in \u003c10 lines here, or document the TODO.",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acfee2b3_b0667f98",
        "filename": "cmd/cue/cmd/modtidy.go",
        "patchSetId": 12
      },
      "lineNbr": 77,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-07T11:23:53Z",
      "side": 1,
      "message": "We should also use `filepath.Join` when opening files on disk IMO - it\u0027s fine to skip it in test code, but I think we should do the proper thing in non-test code where we might end up using the strings in error strings or logs.\n\nNote that much of the code does use forward slashes and path.Join, but those are for io/fs and not os APIs.",
      "parentUuid": "dce78353_4bedcabe",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "003d6e96_5e2c97dd",
        "filename": "cmd/cue/cmd/testdata/script/modtidy_initial.txtar",
        "patchSetId": 12
      },
      "lineNbr": 1,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T07:51:27Z",
      "side": 1,
      "message": "This could do with a comment to explain what you are trying to cover here.",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac086f05_0628135f",
        "filename": "cmd/cue/cmd/testdata/script/modtidy_initial.txtar",
        "patchSetId": 12
      },
      "lineNbr": 1,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T08:06:59Z",
      "side": 1,
      "message": "Do we also need a test that shows the successful removal of superfluous dependencies at the `cue mod tidy` level?",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c16406c_8bd298c0",
        "filename": "cmd/cue/cmd/testdata/script/modtidy_initial.txtar",
        "patchSetId": 12
      },
      "lineNbr": 2,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2023-12-06T07:51:27Z",
      "side": 1,
      "message": "Why does this test not require CUE_EXPERIMENT\u003dmodules to be set?",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a69b5aa_273076fb",
        "filename": "cmd/cue/cmd/testdata/script/modtidy_initial.txtar",
        "patchSetId": 12
      },
      "lineNbr": 2,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-12-07T11:23:53Z",
      "side": 1,
      "message": "Both CUE_EXPERIMENT\u003dmodules and CUE_REGISTRY are automatically set when a testscript has `_registry/` files, which helps with repetition. We\u0027ve gated logic on the presence of files/directories before :)",
      "parentUuid": "0c16406c_8bd298c0",
      "revId": "67b541a6c7fe24b44cfa93847b12e1573b4a8fa5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}