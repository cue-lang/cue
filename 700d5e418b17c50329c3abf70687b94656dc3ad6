{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bba88506_1d910f4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-22T21:16:22Z",
      "side": 1,
      "message": "SGTM given that this is all internal. If/when we want to expose knobs via the public Go API, we\u0027ll want something a little bit nicer than a \"",
      "revId": "700d5e418b17c50329c3abf70687b94656dc3ad6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9786bfd3_2da017d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-22T21:16:48Z",
      "side": 1,
      "message": "... than a cuedebug.Config with all the knobs, even though some of them don\u0027t apply at all to the evaluator, like HTTP.",
      "parentUuid": "bba88506_1d910f4e",
      "revId": "700d5e418b17c50329c3abf70687b94656dc3ad6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a02da25_62e650cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-04-23T09:39:02Z",
      "side": 1,
      "message": "For a public API I was thinking of allowing users to pass a map with key values that reflect the environment variables, rather than a struct would be the easiest.\n\nOtherwise, we could do different structs in cuedebug and/or allow embedded structs, or something like that.",
      "parentUuid": "9786bfd3_2da017d9",
      "revId": "700d5e418b17c50329c3abf70687b94656dc3ad6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b63b156b_b03bd26d",
        "filename": "internal/cuedebug/debug.go",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-22T21:16:22Z",
      "side": 1,
      "message": "This seems backwards. Sharing _enables_ structure sharing, and is on by default.",
      "revId": "700d5e418b17c50329c3abf70687b94656dc3ad6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c298625b_52dc0ef4",
        "filename": "internal/cuedebug/debug.go",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-04-23T08:54:19Z",
      "side": 1,
      "message": "Good catch. Originally this was called NoSharing. But with the default mechanism you added, this seemed like a nicer solution.",
      "parentUuid": "b63b156b_b03bd26d",
      "revId": "700d5e418b17c50329c3abf70687b94656dc3ad6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}