{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4a241aed_8e58b24a",
        "filename": "internal/encoding/encoding.go",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-02-26T16:57:33Z",
      "side": 1,
      "message": "This comment seems a bit out of date now.",
      "revId": "70fe31ef0e87a8d47b896e974bc9893794876977",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7115afe4_4bac7e71",
        "filename": "internal/encoding/encoding.go",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-02-26T17:14:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a241aed_8e58b24a",
      "revId": "70fe31ef0e87a8d47b896e974bc9893794876977",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "885019bd_e306a261",
        "filename": "internal/encoding/encoding.go",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-02-26T13:46:56Z",
      "side": 1,
      "message": "This is probably a slightly academic concern, but still:\n\nThere is no guarantee that the transform does no internal buffering. Consequently, the act of creating the transform reader (line 197) could have read something from the underlying buffer `srcr`. We are therefore not guaranteed that this `io.Readall(srcr)` actually does read everything.\n\nThe `t` and `r` are created a block too early - they could be moved down to ~line 226. Which also then means you could a test for this `build.Binary` case early, before `r` (and `t`) is created, and then we\u0027d have the guarantee.\n\nThis is probably nothing to worry about, but if it were me, I think I would make this change, to make the code a touch more defensive.",
      "revId": "70fe31ef0e87a8d47b896e974bc9893794876977",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc1c9060_ee8bf1a7",
        "filename": "internal/encoding/encoding.go",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-02-26T16:57:33Z",
      "side": 1,
      "message": "Agreed. Although it\u0027s trivial to manually verify that transform.NewReader does nothing other than allocate, it\u0027s logically nicer (and a tiny bit cheaper) to do the binary check first before creating the transformer.",
      "parentUuid": "885019bd_e306a261",
      "revId": "70fe31ef0e87a8d47b896e974bc9893794876977",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9f40409_5f68f11f",
        "filename": "internal/encoding/encoding.go",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-02-26T17:14:01Z",
      "side": 1,
      "message": "agreed, done. I had similar thoughts when I first saw the PR, but wasn\u0027t sure whether it was too nitpicky. easy enough to fix in any case.",
      "parentUuid": "dc1c9060_ee8bf1a7",
      "revId": "70fe31ef0e87a8d47b896e974bc9893794876977",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}