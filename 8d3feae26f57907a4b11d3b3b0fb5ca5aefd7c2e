{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f69a66e0_9c948553",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "Looking a lot better, thanks! Still a couple of things to fix though.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4af4bf53_2b99bf9e",
        "filename": "encoding/jsonschema/internal/closedness.go",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "I don\u0027t think this should be in a jsonschema-internal package: I think we should be able to invoke this from the code inside `cmd/cue` that\u0027s actually responsible for the emitting the final code. That way the simplifier can make use of information about the field or definition that the schema might end up in.\n\nHow about exporting it as part of `encoding/jsonschema` itself? That way it\u0027ll be available to other users of the API. We could mark it as experimental for now.\n\nI wouldn\u0027t actually make cmd/cue call `SimplifyClosedness` in this CL though, as that looks like a somewhat more involved change given how `internal/encoding` hides whether encoding/jsonschema has been used.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca729817_81201dd6",
        "filename": "encoding/jsonschema/internal/closedness.go",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:42:22Z",
      "side": 1,
      "message": "\u003e How about exporting it as part of `encoding/jsonschema` itself? That way it\u0027ll be available to other users of the API. We could mark it as experimental for now.\n\nIf we do this, we\u0027ll expose a public API, is that okay? Maybe let\u0027s move it back to \"cuelang.org/go/internal\". WDYT?",
      "parentUuid": "4af4bf53_2b99bf9e",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac1fcdab_fa4783af",
        "filename": "encoding/jsonschema/internal/closedness.go",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-14T21:35:27Z",
      "side": 1,
      "message": "Yeah, that\u0027s fine for now. It can easily be moved.",
      "parentUuid": "ca729817_81201dd6",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa12f1dc_8676d1ab",
        "filename": "encoding/jsonschema/internal/closedness.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "nit: I think it\u0027s nice if code reads from top to bottom, with more minor helper functions towards the end, so I\u0027d move this later in the code (same with `pushStack` and `popStack` FWIW).",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd3dce75_590fec17",
        "filename": "encoding/jsonschema/internal/closedness.go",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa12f1dc_8676d1ab",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeffc189_4b4871a4",
        "filename": "encoding/jsonschema/internal/closedness.go",
        "patchSetId": 8
      },
      "lineNbr": 61,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "This a no-op. No need for it AFAICS.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84007099_3e09352e",
        "filename": "encoding/jsonschema/internal/closedness.go",
        "patchSetId": 8
      },
      "lineNbr": 61,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eeffc189_4b4871a4",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63c5a77a_36307a76",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "```suggestion\n\tname: \"UnificationWithReferenceIntoClosedFieldOfStructLiteralInDefinition\",\n```",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e1e3cd0_1649c670",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63c5a77a_36307a76",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d692b06_12cbcc09",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "This doesn\u0027t seem right to me: the `src` expression is OK, but the `want` expression fails.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e64c6f34_ff2b51e3",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:24:41Z",
      "side": 1,
      "message": "`src` is OK with evalv2, but fails with evalv3.",
      "parentUuid": "7d692b06_12cbcc09",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1aebedf0_4a5ca7c0",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:42:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e64c6f34_ff2b51e3",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1d63d36_a1ff1e6b",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "This isn\u0027t right: `close({...})` does not result in a closed struct with no fields.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df0625b7_e4fd30fc",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:42:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1d63d36_a1ff1e6b",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b9bbcea_1deef519",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "ditto",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1fbf894_3a249f8c",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:42:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b9bbcea_1deef519",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f57da2c_193ceb77",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "Again, the ellipsis shouldn\u0027t be lost here.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c1b11d6_026f8e38",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:42:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f57da2c_193ceb77",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26907806_cf6a4d3b",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 104,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "We shouldn\u0027t be adding braces here, although perhaps it doesn\u0027t matter for the code generated by `encoding/jsonschema`.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d97b822_db20d4a7",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 104,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:24:41Z",
      "side": 1,
      "message": "`astinternal.DebugStr()` will always print braces for a `structlit`. These braces are not added by the simplification pass.",
      "parentUuid": "26907806_cf6a4d3b",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd658a53_b4f2d91c",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "nit: these lines are quite long. A reasonably consistent line length for comments is worthwhile.",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b1104b9_1e04bcca",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd658a53_b4f2d91c",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ba4b628_9043b9ba",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-11-13T17:29:34Z",
      "side": 1,
      "message": "```suggestion\n\t// Keep this test case for the record.\n```",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc1e4d72_fe54fc2a",
        "filename": "encoding/jsonschema/internal/closedness_test.go",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1037721
      },
      "writtenOn": "2024-11-14T06:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ba4b628_9043b9ba",
      "revId": "8d3feae26f57907a4b11d3b3b0fb5ca5aefd7c2e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}