{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "13553971_fd9dd145",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003505
      },
      "writtenOn": "2022-09-20T08:50:24Z",
      "side": 1,
      "message": "I think making programs implicitly-dependent on their environment is a Very Bad Idea, but we already have the feature, and we already export `os`, so adding this seems consistent.\n",
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f742b0cb_10939ffb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-09-21T09:13:55Z",
      "side": 1,
      "message": "The injection variables are precisely about the environment :) You\u0027re right that in general they shouldn\u0027t be used, but in some cases they can be useful. They are a side effect that is deliberately kept at a distance.",
      "parentUuid": "13553971_fd9dd145",
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14101c16_bed22c28",
        "filename": "cmd/cue/cmd/help.go",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1003505
      },
      "writtenOn": "2022-09-20T08:50:24Z",
      "side": 1,
      "message": "Why have a possibly-obsolete list here, when we can just link to Go\u0027s list? Same for os. The wording makes this list sound canonical and complete, but it\u0027s really not.",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 360,
        "endChar": 54
      },
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89536b9a_2327b847",
        "filename": "cmd/cue/cmd/help.go",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-09-21T09:13:55Z",
      "side": 1,
      "message": "You\u0027re right that this list may become obsolete over time; I\u0027m just following the example of `os` here.\n\nI guess we could link to https://go.dev/doc/install/source#environment, or point the user at `go tool dist list`. I think I prefer the former, as Go may not be installed.",
      "parentUuid": "14101c16_bed22c28",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 360,
        "endChar": 54
      },
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abfff42c_73d01a90",
        "filename": "cmd/cue/cmd/help.go",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-09-30T22:15:30Z",
      "side": 1,
      "message": "Rog or Paul, do either of you have thoughts here? For example, we could go with\n\n   arch       GOARCH as described in https://go.dev/doc/install/source#environment\n\nand similar for \"os\".",
      "parentUuid": "89536b9a_2327b847",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 360,
        "endChar": 54
      },
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8767280_bc3a8f7b",
        "filename": "cmd/cue/cmd/help.go",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2022-11-07T14:52:19Z",
      "side": 1,
      "message": "Personally I\u0027m not keen on referencing the Go docs directly for various reason. For one, the set may actually not be the same as Go\u0027s. Other systems are not tested. We officially only support Windows, Linux, and Mac.\n\nSame might be true for arch.\n\nBut in general, it is not a great user experience to have to link through to other pages for something simple like this.\n\nIf we are worried about getting out of sync, a simple test that checks if new entries are added to goarch.go, etc. would do, I reckon.",
      "parentUuid": "abfff42c_73d01a90",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 360,
        "endChar": 54
      },
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd1abc22_781887b5",
        "filename": "cmd/cue/cmd/help.go",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2022-11-14T13:05:35Z",
      "side": 1,
      "message": "Personally I don\u0027t like linking to Go docs too much either, because CUE need not be Go-specific, and it\u0027s a bit messy to follow a link from the command line. However, we do currently just return GOOS/GOARCH, so I\u0027m fine with it given it reflects reality.\n\nRegarding the test - what do you mean by goarch.go?\n\nI imagine what you mean is a test that calls `go tool dist list`, assuming that it\u0027s the same version that we release with, and checks that our help text is up to date. Our help text isn\u0027t structured nor generated, though, so that could be a bit hacky.\n\nFor what it\u0027s worth, the compromise that I reached with Aram in Newcastle is to list the few values which are most often used, then link to upstream for the full list. For example:\n\n```\narch   architecture identifier of the current system.\n       valid values include: 386 amd64 arm arm64 wasm\n       for a full list, see: https://go.dev/doc/install/source#environment\n```",
      "parentUuid": "c8767280_bc3a8f7b",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 360,
        "endChar": 54
      },
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea4c5731_f32bda75",
        "filename": "cmd/cue/cmd/help.go",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2023-01-16T09:03:17Z",
      "side": 1,
      "message": "I\u0027m still not keen on referencing external documentation here. It is inappropriate and sets a bad precedence.\n\nI would just fully list everything, possibly leaving out values that cannot occur because we are not supporting the architecture.\nI think keeping a parallel list in a test is fine. This list is not expected to change often.",
      "parentUuid": "cd1abc22_781887b5",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 360,
        "endChar": 54
      },
      "revId": "8f1f4d32a49566e5c5dc3c21daa831b3e1980c09",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}