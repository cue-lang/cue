{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dc91dd3d_2de07ea4",
        "filename": "internal/core/toposort/graph.go",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-11-01T09:59:03Z",
      "side": 1,
      "message": "Maybe a short explanation here of what scc stands for.",
      "revId": "a08039958b06d074c16eb73c74eddccbaf55edd0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "193f7c13_ff12de5f",
        "filename": "internal/core/toposort/graph.go",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2024-11-04T11:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc91dd3d_2de07ea4",
      "revId": "a08039958b06d074c16eb73c74eddccbaf55edd0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0ca9a2a_674d0904",
        "filename": "internal/core/toposort/graph.go",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-11-01T09:59:03Z",
      "side": 1,
      "message": "In the future we probably want to write features into a pre-allocated buffer (here and in other places) in OpContext. For now this is fine, but it may be good to keep in mind, as it would require passing OpContext around in various places.",
      "revId": "a08039958b06d074c16eb73c74eddccbaf55edd0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5897d47_b04559c2",
        "filename": "internal/core/toposort/scc_test.go",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-11-01T11:16:45Z",
      "side": 1,
      "message": "Line length exceeds 80chars (assuming ts\u003d4) in various places here. It is the convention in Go, and we adopt this, to break lines at 80. \n\nThis makes reading diffs in Gerrit a whole lot easier.",
      "revId": "a08039958b06d074c16eb73c74eddccbaf55edd0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "baf5f8aa_cc670f34",
        "filename": "internal/core/toposort/scc_test.go",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2024-11-04T11:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5897d47_b04559c2",
      "revId": "a08039958b06d074c16eb73c74eddccbaf55edd0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}