{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a2cbbd0_81f3a507",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 18,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-05-07T14:17:07Z",
      "side": 1,
      "message": "and?",
      "range": {
        "startLine": 18,
        "startChar": 38,
        "endLine": 18,
        "endChar": 40
      },
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecd979c0_1b2b6e25",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 18,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-05-09T11:01:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a2cbbd0_81f3a507",
      "range": {
        "startLine": 18,
        "startChar": 38,
        "endLine": 18,
        "endChar": 40
      },
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e655c97d_cc754405",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-05-07T14:17:07Z",
      "side": 1,
      "message": "reuse emitf for consistency in the lines above, and also to not need to be explicit about the trailing newlines",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20c03a91_b71694fa",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-05-09T11:01:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e655c97d_cc754405",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f72c2050_618468d0",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-05-07T14:17:07Z",
      "side": 1,
      "message": "you don\u0027t seem to consistently indent, e.g. the \"if\" line above should be one tab, and this should be two tabs. I would suggest that you don\u0027t indent anything at all, and let go/format deal with it.\n\nor if the indentation is helpful for debugging/testing, perhaps do it consistently?",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38e8f237_9317cb93",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-05-09T11:01:09Z",
      "side": 1,
      "message": "Yeah, it\u0027s a helpful convenience for when we happen to generate incorrect syntax so we\u0027ve only got the raw output to look at and the indentation helps visual parsing. It doesn\u0027t matter that much though. I\u0027ve updated to use somewhat more consistent indentation.",
      "parentUuid": "f72c2050_618468d0",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5419b43_f0fa8947",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 129,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-05-07T14:17:07Z",
      "side": 1,
      "message": "exprFor uses Sprintf itself, so why not call it e.g. generateExprFor, and use it like:\n\n```\ng.emitf(\"r.%s \u003d \", fieldName)\ng.generateExprFor(unaryExpr.X)\n```\n\nI\u0027m not worried about performance here, as this is a generator, but it is a little bit harder to follow what\u0027s going on when one printf layer is used on top of another.",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afe3a936_370931e6",
        "filename": "internal/filetypes/internal/genfunc/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 129,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-05-09T11:01:09Z",
      "side": 1,
      "message": "Mainly because emitf adds a newline but I don\u0027t want a newline after the `\u003d` (and `go/format` won\u0027t remove it).",
      "parentUuid": "d5419b43_f0fa8947",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b316b02_8163d339",
        "filename": "internal/filetypes/internal/genfunc/gen_test.go",
        "patchSetId": 14
      },
      "lineNbr": 197,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-05-07T14:17:07Z",
      "side": 1,
      "message": "what about placing test.go in the same cue module, as a `//go:build ignore` main package file?\n\nif your worry is that you don\u0027t want to pollute the current directory or git checkout, that\u0027s fair enough, but then you can use `go build -overlay` to insert a new file on the cuelang.org/go module without needing to write it to disk.",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afbfc441_8ff0a490",
        "filename": "internal/filetypes/internal/genfunc/gen_test.go",
        "patchSetId": 14
      },
      "lineNbr": 197,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-05-09T11:01:09Z",
      "side": 1,
      "message": "That\u0027s a great idea! I\u0027d totally forgotten (maybe never even knew about) `go build -overlay`. Done.",
      "parentUuid": "3b316b02_8163d339",
      "revId": "a4af94aefd892d9daa319dfee3e52b4ba4fcbc9e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}