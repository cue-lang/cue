{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b6968d56_1f5b98af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-02-28T14:25:25Z",
      "side": 1,
      "message": "SGTM",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef5c1128_11e8582b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-02-28T15:23:05Z",
      "side": 1,
      "message": "I very much like the changes here that then get reflect top of stack in the test we have.",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfdf17a2_b0b1e55f",
        "filename": "cue/load/config.go",
        "patchSetId": 16
      },
      "lineNbr": 371,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-02-28T14:25:25Z",
      "side": 1,
      "message": "do we want to error if `!cueexperiment.Flags.Modules \u0026\u0026 c.Registry !\u003d nil`, for the sake of saying \"you set up a registry, but did not enable the modules experiment\"? I think not, just like you have it here, as setting Registry explicitly seems like enough of an opt-in signal to me. Perhaps briefly mention this assumption.",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af94eea3_8f0ef70b",
        "filename": "cue/load/config.go",
        "patchSetId": 16
      },
      "lineNbr": 371,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-02-28T15:25:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfdf17a2_b0b1e55f",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f534373_8216e4bf",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-02-28T14:25:25Z",
      "side": 1,
      "message": "Big +1 to the different method names now. I like these better. The only nit I have is that ResolveToHost returning a Location feels odd - it should either return a Host, or be called ResolveToLocation. Particularly since you do have a Host type in this same package, so it\u0027s somewhat misleading.\n\nThe same could be said about HostResolver - perhaps name it LocationResolver.",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f951826_7d6d4e83",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-02-28T15:25:54Z",
      "side": 1,
      "message": "Fair point. Done.",
      "parentUuid": "8f534373_8216e4bf",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b469d6f5_fea883af",
        "filename": "mod/modconfig/modconfig.go",
        "patchSetId": 16
      },
      "lineNbr": 78,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-02-28T15:23:05Z",
      "side": 1,
      "message": "I really don\u0027t know what the convention here is, but do we need to document that `cfg0`, if non nil, will be copied instead of modified? A pointer argument suggests two things to my mind: 1) I don\u0027t need to provide anything but also 2) what I provide could be modified. It feels like we need to explicitly state that we will copy `cfg0` is non-nil and never modify it. Same for `NewRegistry` below. But I defer to you and @mvdan@mvdan.cc for what is convention with such args.",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab352428_ffe71034",
        "filename": "mod/modconfig/modconfig.go",
        "patchSetId": 16
      },
      "lineNbr": 78,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-02-28T15:25:39Z",
      "side": 1,
      "message": "I don\u0027t actually know if there\u0027s a convention on read-only vs modify in place, but documenting what we do here is probably good either way just in case.",
      "parentUuid": "b469d6f5_fea883af",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5142bd08_5d3373c3",
        "filename": "mod/modconfig/modconfig.go",
        "patchSetId": 16
      },
      "lineNbr": 78,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-02-28T15:59:11Z",
      "side": 1,
      "message": "\u003e 2) what I provide could be modified.\n\nI\u0027m not sure I agree with that, FWIW. I don\u0027t think that passing a pointer necessarily implies that the argument might be modified - if something might be modified, that should be explicitly called out in the docs.\n\nAs an existing example of this convention, `load.Instances` does exactly as we\u0027re doing here, and `gocode.Generate` is similar, as are many other places.\n\nGiven the existing prevalence of the convention, I think it\u0027s OK as is tbh, but I\u0027ve added a doc comment anyway.",
      "parentUuid": "ab352428_ffe71034",
      "revId": "a9402a4a40bb919d39618f98d534766a899b953d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}