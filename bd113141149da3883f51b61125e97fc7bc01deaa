{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b4a2d3c9_7c5267ec",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "briefly document this? especially if you do want to support empty paths",
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdb0a934_3bd6d154",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "may? can?\n\n(this is simply about resolving, not necessarily fetching)",
      "range": {
        "startLine": 24,
        "startChar": 45,
        "endLine": 24,
        "endChar": 49
      },
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886083c1_144ae6ba",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "interesting, do we not require the catch-all to be at the end? I guess no need to, but I might have assumed that before reading the docs.",
      "range": {
        "startLine": 27,
        "startChar": 36,
        "endLine": 27,
        "endChar": 53
      },
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caa4fa54_83569504",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "where is this link? was this a sort of TODO?",
      "range": {
        "startLine": 43,
        "startChar": 51,
        "endLine": 43,
        "endChar": 69
      },
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a23d8da7_2e2be58c",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "nit: oxford comma",
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "765b269c_a1d2393c",
        "filename": "internal/mod/modresolve/resolve.go",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "do you need these three lines? you will skip the for loop below, and error with `no default catch-all registry provided`, which is perfectly fine. both are the same error case IMO, so there doesn\u0027t seem to be a need to handle it in two places. performance shouldn\u0027t matter at all for the case where s is empty, since you\u0027ll do basically no extra work.",
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bb2b07c_4749ddb0",
        "filename": "internal/mod/modresolve/resolve_test.go",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "`input` or `env` perhaps? `s` is far too short/generic here I think",
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13495264_97dbe68f",
        "filename": "internal/mod/modresolve/resolve_test.go",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "can we use hostnames that don\u0027t relate to us, perhaps? e.g. assuming we decided to keep the proxy under cue.works, having tests that point to cuelabs.dev would be rather unnecessary",
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1334596f_05f6fab9",
        "filename": "internal/mod/modresolve/resolve_test.go",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "I\u0027d still add the empty input here for clarity",
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74ad3caa_69dbae57",
        "filename": "internal/mod/modresolve/resolve_test.go",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-17T15:40:59Z",
      "side": 1,
      "message": "what does looking up an empty string mean? as far as I can tell this is not documented anywhere, and I find it somewhat confusing\n\nEdit: now having read the implementation, I now see that it\u0027s to look up the catch-all or fallback. I\u0027d personally do that via a separate method to be clearer, like Fallback or CatchAll.",
      "revId": "bd113141149da3883f51b61125e97fc7bc01deaa",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}