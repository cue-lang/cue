{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b5a1aa9b_f88ef025",
        "filename": "cmd/cue/cmd/login.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-10-01T10:43:40Z",
      "side": 1,
      "message": "Perhaps round up to a second if the result is zero? Or is that never going to be a possibility?",
      "revId": "c7552960e035cc366984ed50669328c667f5804f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09622535_024399f2",
        "filename": "cmd/cue/cmd/login.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-10-01T10:57:53Z",
      "side": 1,
      "message": "Sorry, what do you mean? Yes, expiry may be zero if an access token never expires, even though in practice that will never appen. But if it does happen, the UTC and Truncate methods will maintain the IsZero()\u003d\u003dtrue property, so it will still work as a non-expiring token just fine. We don\u0027t want to round up to one second, because that would turn a token that never expires into a token that expires immediately.",
      "parentUuid": "b5a1aa9b_f88ef025",
      "revId": "c7552960e035cc366984ed50669328c667f5804f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1945088c_b26fbf15",
        "filename": "cmd/cue/cmd/login.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-10-01T14:36:00Z",
      "side": 1,
      "message": "I was wondering about truncating a \u003e0 but \u003c1s expiry down to zero, but as you mentioned online, it probably doesn\u0027t make any different in practice.",
      "parentUuid": "09622535_024399f2",
      "revId": "c7552960e035cc366984ed50669328c667f5804f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c569749_b48b720e",
        "filename": "cmd/cue/cmd/login.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-10-01T14:36:52Z",
      "side": 1,
      "message": "After a Discord chat - you meant a non-zero expiry timestamp that\u0027s less than one second away. That could in theory happen, although in practice it won\u0027t, because such a token is useless unless it\u0027s valid for at least a handful of minutes.\n\nThe truncation might cause a super-short-lived token to expire in 0.0s rather than e.g. 0.9s, but that\u0027s still the same end result - the token expires immediately. So I won\u0027t add defensive code given that it\u0027s not a practical issue and that the added code doesn\u0027t seem worth it - and is hard to test.",
      "parentUuid": "09622535_024399f2",
      "revId": "c7552960e035cc366984ed50669328c667f5804f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed, except for Marcel."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader OR label:Code-Review\u003dMAX,user\u003dmpvl@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader OR label:Code-Review=MAX,user=mpvl@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MAX,user=mpvl@gmail.com"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7552960e035cc366984ed50669328c667f5804f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7552960e035cc366984ed50669328c667f5804f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7552960e035cc366984ed50669328c667f5804f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7552960e035cc366984ed50669328c667f5804f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBot-Result",
        "description": {
          "value": "TryBot-Result+1 is required. Unity-Result is not, as intentional breakages can happen. Can be bypassed by Chief Cueckoo with Code-Review+2."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:TryBot-Result\u003dMAX OR label:Code-Review\u003dMAX,user\u003dchief.cueckoo@gmail.com"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Result=MAX OR label:Code-Review=MAX,user=chief.cueckoo@gmail.com"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:TryBot-Result=MAX"],"failingAtoms":["label:Code-Review=MAX,user=chief.cueckoo@gmail.com"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7552960e035cc366984ed50669328c667f5804f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}