{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "439b5c33_f3aa8b4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:04:51Z",
      "side": 1,
      "message": "Please see https://github.com/golang/go/wiki/CommitMessage and try to follow it:\n\n* use the package path as the title, and explain where the fix is, e.g. `cmd/cue: support type parameters in get go`\n* wrap at 76 columns, which you can see as a vertical guide in the gerrit UI as well\n* `Fixes #2217.` - no need for a colon",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee9e88a0_492bbc21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1021466
      },
      "writtenOn": "2023-10-22T16:10:37Z",
      "side": 1,
      "message": "Sounds good, thanks. I have been contributing to a few projects and some prefer things like https://www.conventionalcommits.org/en/v1.0.0/ (which prefers colons). I\u0027ll read https://github.com/cue-lang/cue/blob/master/CONTRIBUTING.md again, though it may be good to update this document to include a link to https://github.com/golang/go/wiki/CommitMessage.",
      "parentUuid": "439b5c33_f3aa8b4a",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7ef600b_7ab43adb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-23T20:42:09Z",
      "side": 1,
      "message": "I should have linked to https://github.com/cue-lang/cue/blob/master/CONTRIBUTING.md#good-commit-messages. The two guidelines are extremely similar, which is why I got confused :)",
      "parentUuid": "ee9e88a0_492bbc21",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c472243_5f83abe2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:04:51Z",
      "side": 1,
      "message": "Definitely a step in the right direction :) I\u0027m not super familiar with the new generic APIs in go/types yet, but your tests look good, so I think that says enough.",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "072024fb_af35c84c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:37:05Z",
      "side": 1,
      "message": "The tests don\u0027t seem too happy :) Let me know on Slack if you need any help figuring those out.",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47302dea_eefefac6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1021466
      },
      "writtenOn": "2023-10-22T16:10:37Z",
      "side": 1,
      "message": "Thanks for your feedback. I\u0027ll take a look at the test and publish a new patch.",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb34db36_ea854015",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1082,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:04:51Z",
      "side": 1,
      "message": "another way to phrase this is that, if a type B instantiates a generic type A, then B should be converted in its instantiated form, with all the type parameters fully expanded.\n\ngo/types already handles type instantiation for you; search for \"instantiat\", \"instantiated\", or \"instantiating\" in https://pkg.go.dev/go/types and you\u0027ll see some pointers like Info.Instances, Named.Origin, and so on.\n\ndefinitely fine to do this in a follow-up CL, just giving pointers.",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a90ebff_2a4d97e1",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1197,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:04:51Z",
      "side": 1,
      "message": "this is extremely similar to the comparable interface part - can we deduplicate easily?",
      "range": {
        "startLine": 1193,
        "startChar": 1,
        "endLine": 1197,
        "endChar": 49
      },
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3eb4fb9_8ca70c14",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1197,
      "author": {
        "id": 1021466
      },
      "writtenOn": "2023-10-22T16:10:37Z",
      "side": 1,
      "message": "Not easily - they don\u0027t implement a common interface and it would be more effort than it\u0027s worth IMO. It\u0027s not the worst thing in the world to have some duplication, especially if it\u0027s only twice.",
      "parentUuid": "6a90ebff_2a4d97e1",
      "range": {
        "startLine": 1193,
        "startChar": 1,
        "endLine": 1197,
        "endChar": 49
      },
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c469a3f1_b71d4e14",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1197,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-23T20:42:09Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b3eb4fb9_8ca70c14",
      "range": {
        "startLine": 1193,
        "startChar": 1,
        "endLine": 1197,
        "endChar": 49
      },
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df708fdf_1b015eab",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1201,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:04:51Z",
      "side": 1,
      "message": "if you invert this conditional, you can return early with top and unindent the longer branch.",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f93d84c_94150e2a",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1201,
      "author": {
        "id": 1021466
      },
      "writtenOn": "2023-10-22T16:10:37Z",
      "side": 1,
      "message": "Good point, thank you. I prefer to write code this way, but was caught in the iterative changes I was making and became a bit lost.",
      "parentUuid": "df708fdf_1b015eab",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91bc3e2c_176311ba",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1202,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:04:51Z",
      "side": 1,
      "message": "not super important to prioritize this IMO, since one could always rely on something like `cue trim` or the basic simplifications done by `cue fmt`, and I don\u0027t think that kind of repetition will be common in Go",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dfb8996_dd5a438c",
        "filename": "cmd/cue/cmd/get_go.go",
        "patchSetId": 2
      },
      "lineNbr": 1202,
      "author": {
        "id": 1021466
      },
      "writtenOn": "2023-10-22T16:10:37Z",
      "side": 1,
      "message": "I think that makes sense really, `cue fmt -s` or `cue trim` would be better places to simplify expressions. I know statticheck can do something similar, so may be worth looking there.\n\nhttps://staticcheck.io/docs/checks#S1",
      "parentUuid": "91bc3e2c_176311ba",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50c84903_fdfca426",
        "filename": "cmd/cue/cmd/testdata/script/get_go_types.txtar",
        "patchSetId": 2
      },
      "lineNbr": 234,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2023-10-22T11:04:51Z",
      "side": 1,
      "message": "the spec calls these \"unions\", so you could say SomeInterafceUnion to clarify what kind of generic interface this is.",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "040e80a8_ce3ae8ed",
        "filename": "cmd/cue/cmd/testdata/script/get_go_types.txtar",
        "patchSetId": 2
      },
      "lineNbr": 234,
      "author": {
        "id": 1021466
      },
      "writtenOn": "2023-10-22T16:10:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "50c84903_fdfca426",
      "revId": "ca496e818877ed4081059f461e4244a1e0a666b5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}