exec cue eval

cmp stdout outv2

-- test.cue --
@extern(embed)

package foo

a: _ @embed(file="test.json")

b: _ @embed(file="input.yaml")

c: _ @embed(file="test.json", type=text)

d: _ @embed(glob="x/*.*", type=yaml)

e: _ @embed(glob="x/*.yaml")

f: _ @embed(file="openapi.json", type=openapi)

g: _ @embed(file="openapi.json") // test no auto mode!

-- test.json --
{ "x": 34 }
-- input.yaml --
a1: 2

-- x/test.json --
{ "x": 34 }
-- x/input.yaml --
a1: 2
-- openapi.json --
{
    "openapi": "3.0.0",
    "info": {
        "title":   "My OpenAPI",
        "version": "v1alpha1"
    },
    "paths": {},
    "components": {
        "schemas": {
            "Bar": {
                "type": "object",
                "required": [
                    "foo"
                ],
                "properties": {
                    "foo": {
                        "$ref": "#/components/schemas/Foo"
                    }
                }
            },
            "Foo": {
                "type": "object",
                "required": [
                    "a",
                    "b"
                ],
                "properties": {
                    "a": {
                        "type": "integer"
                    },
                    "b": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMaximum": 10
                    }
                }
            }
        }
    }
}
-- outv2 --
a: {
    x: 34
}
b: {
    a1: 2
}
c: """
    { "x": 34 }

    """
d: {
    "x/input.yaml": {
        a1: 2
    }
    "x/test.json": {
        x: 34
    }
}
e: {
    "x/input.yaml": {
        a1: 2
    }
}
f: {
    info: {
        title:   "My OpenAPI"
        version: "v1alpha1"
    }
    #Bar: {
        foo: {
            a: int
            b: uint & <10
        }
    }
    #Foo: {
        a: int
        b: uint & <10
    }
}
g: {
    openapi: "3.0.0"
    info: {
        title:   "My OpenAPI"
        version: "v1alpha1"
    }
    paths: {}
    components: {
        schemas: {
            Bar: {
                type: "object"
                required: ["foo"]
                properties: {
                    foo: {
                        $ref: "#/components/schemas/Foo"
                    }
                }
            }
            Foo: {
                type: "object"
                required: ["a", "b"]
                properties: {
                    a: {
                        type: "integer"
                    }
                    b: {
                        type:             "integer"
                        minimum:          0
                        exclusiveMaximum: 10
                    }
                }
            }
        }
    }
}
