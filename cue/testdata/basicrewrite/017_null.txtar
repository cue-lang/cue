#name: null
#evalPartial
-- in.cue --
eql: null == null
neq: null != null
unf: null & null

// errors
eq1:  null == 1
eq2:  1 == null
ne1:  "s" != null
call: null()
-- out/compile --
--- in.cue
{
  eql: (null == null)
  neq: (null != null)
  unf: (null & null)
  eq1: (null == 1)
  eq2: (1 == null)
  ne1: ("s" != null)
  call: null()
}
-- out/eval --
Errors:
call: cannot call non-function null (type null):
    ./in.cue:9:7

Result:
(_|_){
  // [eval]
  eql: (bool){ true }
  neq: (bool){ false }
  unf: (null){ null }
  eq1: (bool){ false }
  eq2: (bool){ false }
  ne1: (bool){ true }
  call: (_|_){
    // [eval] call: cannot call non-function null (type null):
    //     ./in.cue:9:7
  }
}
