// Triggering recomputation of disjunctions on each branch results
// in exponential run time. Ensure this does not happen.
-- stats.txt --
Leaks:  0
Freed:  82
Reused: 74
Allocs: 8
Retain: 0

Unifications: 4
Conjuncts:    143
Disjuncts:    82

-- in.cue --
x: a0: {}
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int
x: [_]: f: *1 | int

x: a0: {}
-- out/compile --
--- in.cue
{
  x: {
    a0: {}
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    [_]: {
      f: (*1|int)
    }
  }
  x: {
    a0: {}
  }
}
-- out/eval/stats --
Leaks:  0
Freed:  82
Reused: 74
Allocs: 8
Retain: 0

Unifications: 4
Conjuncts:    143
Disjuncts:    82
-- out/eval --
(struct){
  x: (struct){
    a0: (struct){
      f: (int){ |(*(int){ 1 }, (int){ int }) }
    }
  }
}
