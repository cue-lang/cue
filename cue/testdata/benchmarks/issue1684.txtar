#Issue: 1684

// TODO: significantly reduce the number of counts in this evaluation.
-- stats.txt --
Leaks:  0
Freed:  995025
Reused: 994976
Allocs: 49
Retain: 0

Unifications: 740771
Conjuncts:    3143640
Disjuncts:    995025

-- in.cue --
#Secret: {
	$secret: id: string
}
#secrets: #Secret | {[string]: #secrets}

out: #secrets & {
	FOO: $secret: id: "100"
	ONE: TWO: THREE: $secret: id: "123"
}

#Secret: {
	$secret: _id: string
}
#secrets: #Secret | {[string]: #secrets}

out: #secrets & {
	FOO: $secret: _id: "100"
	ONE: TWO: THREE: $secret: _id: "123"
}
-- out/eval/stats --
Leaks:  0
Freed:  1064043
Reused: 1063992
Allocs: 51
Retain: 0

Unifications: 791999
Conjuncts:    2479541
Disjuncts:    1064043
-- out/evalalpha --
Errors:
out.FOO: field not allowed:
    ./in.cue:14:11
    ./in.cue:4:22
    ./in.cue:7:2
    ./in.cue:17:2
out.ONE: field not allowed:
    ./in.cue:14:11
    ./in.cue:4:22
    ./in.cue:8:2
    ./in.cue:18:2

Result:
(_|_){
  // [eval]
  #Secret: (#struct){
    $secret: (#struct){
      id: (string){ string }
      _id: (string){ string }
    }
  }
  #secrets: (#struct){ |((#struct){
      $secret: (#struct){
        id: (string){ string }
        _id: (string){ string }
      }
    }, (#struct){
    }) }
  out: (_|_){
    // [eval] out.FOO: field not allowed:
    //     ./in.cue:14:11
    //     ./in.cue:4:22
    //     ./in.cue:7:2
    //     ./in.cue:17:2
    // out.ONE: field not allowed:
    //     ./in.cue:14:11
    //     ./in.cue:4:22
    //     ./in.cue:8:2
    //     ./in.cue:18:2
    FOO: (struct){
      $secret: (struct){
        id: (string){ "100" }
        _id: (string){ "100" }
      }
    }
    ONE: (struct){
      TWO: (struct){
        THREE: (struct){
          $secret: (struct){
            id: (string){ "123" }
            _id: (string){ "123" }
          }
        }
      }
    }
  }
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -1,4 +1,18 @@
-(struct){
+Errors:
+out.FOO: field not allowed:
+    ./in.cue:14:11
+    ./in.cue:4:22
+    ./in.cue:7:2
+    ./in.cue:17:2
+out.ONE: field not allowed:
+    ./in.cue:14:11
+    ./in.cue:4:22
+    ./in.cue:8:2
+    ./in.cue:18:2
+
+Result:
+(_|_){
+  // [eval]
   #Secret: (#struct){
     $secret: (#struct){
       id: (string){ string }
@@ -12,17 +26,27 @@
       }
     }, (#struct){
     }) }
-  out: (#struct){
-    FOO: (#struct){
-      $secret: (#struct){
+  out: (_|_){
+    // [eval] out.FOO: field not allowed:
+    //     ./in.cue:14:11
+    //     ./in.cue:4:22
+    //     ./in.cue:7:2
+    //     ./in.cue:17:2
+    // out.ONE: field not allowed:
+    //     ./in.cue:14:11
+    //     ./in.cue:4:22
+    //     ./in.cue:8:2
+    //     ./in.cue:18:2
+    FOO: (struct){
+      $secret: (struct){
         id: (string){ "100" }
         _id: (string){ "100" }
       }
     }
-    ONE: (#struct){
-      TWO: (#struct){
-        THREE: (#struct){
-          $secret: (#struct){
+    ONE: (struct){
+      TWO: (struct){
+        THREE: (struct){
+          $secret: (struct){
             id: (string){ "123" }
             _id: (string){ "123" }
           }
-- diff/todo/p0 --
out.FOO: incorrectly not allowed. This is a result of the overlay evaluating
non-overlay Vertices during the evaluation of disjunctions. This should be fixed
in a separate CL.
-- out/eval --
(struct){
  #Secret: (#struct){
    $secret: (#struct){
      id: (string){ string }
      _id: (string){ string }
    }
  }
  #secrets: (#struct){ |((#struct){
      $secret: (#struct){
        id: (string){ string }
        _id: (string){ string }
      }
    }, (#struct){
    }) }
  out: (#struct){
    FOO: (#struct){
      $secret: (#struct){
        id: (string){ "100" }
        _id: (string){ "100" }
      }
    }
    ONE: (#struct){
      TWO: (#struct){
        THREE: (#struct){
          $secret: (#struct){
            id: (string){ "123" }
            _id: (string){ "123" }
          }
        }
      }
    }
  }
}
-- out/compile --
--- in.cue
{
  #Secret: {
    $secret: {
      id: string
    }
  }
  #secrets: (〈0;#Secret〉|{
    [string]: 〈1;#secrets〉
  })
  out: (〈0;#secrets〉 & {
    FOO: {
      $secret: {
        id: "100"
      }
    }
    ONE: {
      TWO: {
        THREE: {
          $secret: {
            id: "123"
          }
        }
      }
    }
  })
  #Secret: {
    $secret: {
      _id: string
    }
  }
  #secrets: (〈0;#Secret〉|{
    [string]: 〈1;#secrets〉
  })
  out: (〈0;#secrets〉 & {
    FOO: {
      $secret: {
        _id: "100"
      }
    }
    ONE: {
      TWO: {
        THREE: {
          $secret: {
            _id: "123"
          }
        }
      }
    }
  })
}
