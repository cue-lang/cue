#Issue: 1684

// TODO: significantly reduce the number of counts in this evaluation.
-- stats.txt --
Leaks:  0
Freed:  995025
Reused: 994976
Allocs: 49
Retain: 0

Unifications: 740771
Conjuncts:    3143640
Disjuncts:    995025

-- in.cue --
#Secret: {
	$secret: id: string
}
#secrets: #Secret | {[string]: #secrets}

out: #secrets & {
	FOO: $secret: id: "100"
	ONE: TWO: THREE: $secret: id: "123"
}

#Secret: {
	$secret: _id: string
}
#secrets: #Secret | {[string]: #secrets}

out: #secrets & {
	FOO: $secret: _id: "100"
	ONE: TWO: THREE: $secret: _id: "123"
}
-- out/eval/stats --
Leaks:  0
Freed:  1064043
Reused: 1063992
Allocs: 51
Retain: 0

Unifications: 791999
Conjuncts:    2479541
Disjuncts:    1064043
-- out/evalalpha --
(struct){
  #Secret: (#struct){
    $secret: (#struct){
      id: (string){ string }
      _id: (string){ string }
    }
  }
  #secrets: (#struct){ |((#struct){
      $secret: (#struct){
        id: (string){ string }
        _id: (string){ string }
      }
    }, (#struct){
    }) }
  out: (#struct){ |((#struct){
      FOO: (#struct){
        $secret: (#struct){
          id: (string){ "100" }
          _id: (string){ "100" }
        }
      }
      ONE: (#struct){
        TWO: (#struct){
          THREE: (#struct){
            $secret: (#struct){
              id: (string){ "123" }
              _id: (string){ "123" }
            }
          }
        }
      }
      $secret: (#struct){
        id: (string){ string }
        _id: (string){ string }
      }
    }, (#struct){
      FOO: (#struct){ |((#struct){
          $secret: (#struct){
            id: (string){ "100" }
            _id: (string){ "100" }
          }
        }, (#struct){
          $secret: (#struct){
            id: (_|_){
              // [eval] out.FOO.$secret.id: field not allowed:
              //     ./in.cue:4:11
              //     ./in.cue:7:16
            }
            _id: (string){ "100" }
            $secret: (#struct){
              id: (string){ string }
              _id: (string){ string }
            }
          }
        }) }
      ONE: (#struct){ |((#struct){
          TWO: (#struct){
            THREE: (#struct){
              $secret: (#struct){
                id: (string){ "123" }
                _id: (string){ "123" }
              }
            }
          }
          $secret: (#struct){
            id: (string){ string }
            _id: (string){ string }
          }
        }, (#struct){
          TWO: (#struct){ |((#struct){
              THREE: (#struct){
                $secret: (#struct){
                  id: (string){ "123" }
                  _id: (string){ "123" }
                }
              }
              $secret: (#struct){
                id: (string){ string }
                _id: (string){ string }
              }
            }, (#struct){
              THREE: (#struct){ |((#struct){
                  $secret: (#struct){
                    id: (string){ "123" }
                    _id: (string){ "123" }
                  }
                }, (#struct){
                  $secret: (#struct){
                    id: (_|_){
                      // [eval] out.ONE.TWO.THREE.$secret.id: field not allowed:
                      //     ./in.cue:4:11
                      //     ./in.cue:8:28
                    }
                    _id: (string){ "123" }
                    $secret: (#struct){
                      id: (string){ string }
                      _id: (string){ string }
                    }
                  }
                }) }
            }) }
        }) }
    }) }
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -12,22 +12,93 @@
       }
     }, (#struct){
     }) }
-  out: (#struct){
-    FOO: (#struct){
-      $secret: (#struct){
-        id: (string){ "100" }
-        _id: (string){ "100" }
-      }
-    }
-    ONE: (#struct){
-      TWO: (#struct){
-        THREE: (#struct){
-          $secret: (#struct){
-            id: (string){ "123" }
-            _id: (string){ "123" }
-          }
-        }
-      }
-    }
-  }
+  out: (#struct){ |((#struct){
+      FOO: (#struct){
+        $secret: (#struct){
+          id: (string){ "100" }
+          _id: (string){ "100" }
+        }
+      }
+      ONE: (#struct){
+        TWO: (#struct){
+          THREE: (#struct){
+            $secret: (#struct){
+              id: (string){ "123" }
+              _id: (string){ "123" }
+            }
+          }
+        }
+      }
+      $secret: (#struct){
+        id: (string){ string }
+        _id: (string){ string }
+      }
+    }, (#struct){
+      FOO: (#struct){ |((#struct){
+          $secret: (#struct){
+            id: (string){ "100" }
+            _id: (string){ "100" }
+          }
+        }, (#struct){
+          $secret: (#struct){
+            id: (_|_){
+              // [eval] out.FOO.$secret.id: field not allowed:
+              //     ./in.cue:4:11
+              //     ./in.cue:7:16
+            }
+            _id: (string){ "100" }
+            $secret: (#struct){
+              id: (string){ string }
+              _id: (string){ string }
+            }
+          }
+        }) }
+      ONE: (#struct){ |((#struct){
+          TWO: (#struct){
+            THREE: (#struct){
+              $secret: (#struct){
+                id: (string){ "123" }
+                _id: (string){ "123" }
+              }
+            }
+          }
+          $secret: (#struct){
+            id: (string){ string }
+            _id: (string){ string }
+          }
+        }, (#struct){
+          TWO: (#struct){ |((#struct){
+              THREE: (#struct){
+                $secret: (#struct){
+                  id: (string){ "123" }
+                  _id: (string){ "123" }
+                }
+              }
+              $secret: (#struct){
+                id: (string){ string }
+                _id: (string){ string }
+              }
+            }, (#struct){
+              THREE: (#struct){ |((#struct){
+                  $secret: (#struct){
+                    id: (string){ "123" }
+                    _id: (string){ "123" }
+                  }
+                }, (#struct){
+                  $secret: (#struct){
+                    id: (_|_){
+                      // [eval] out.ONE.TWO.THREE.$secret.id: field not allowed:
+                      //     ./in.cue:4:11
+                      //     ./in.cue:8:28
+                    }
+                    _id: (string){ "123" }
+                    $secret: (#struct){
+                      id: (string){ string }
+                      _id: (string){ string }
+                    }
+                  }
+                }) }
+            }) }
+        }) }
+    }) }
 }
-- diff/todo/p0 --
Bug. This is related to adding tasks.
-- out/eval --
(struct){
  #Secret: (#struct){
    $secret: (#struct){
      id: (string){ string }
      _id: (string){ string }
    }
  }
  #secrets: (#struct){ |((#struct){
      $secret: (#struct){
        id: (string){ string }
        _id: (string){ string }
      }
    }, (#struct){
    }) }
  out: (#struct){
    FOO: (#struct){
      $secret: (#struct){
        id: (string){ "100" }
        _id: (string){ "100" }
      }
    }
    ONE: (#struct){
      TWO: (#struct){
        THREE: (#struct){
          $secret: (#struct){
            id: (string){ "123" }
            _id: (string){ "123" }
          }
        }
      }
    }
  }
}
-- out/compile --
--- in.cue
{
  #Secret: {
    $secret: {
      id: string
    }
  }
  #secrets: (〈0;#Secret〉|{
    [string]: 〈1;#secrets〉
  })
  out: (〈0;#secrets〉 & {
    FOO: {
      $secret: {
        id: "100"
      }
    }
    ONE: {
      TWO: {
        THREE: {
          $secret: {
            id: "123"
          }
        }
      }
    }
  })
  #Secret: {
    $secret: {
      _id: string
    }
  }
  #secrets: (〈0;#Secret〉|{
    [string]: 〈1;#secrets〉
  })
  out: (〈0;#secrets〉 & {
    FOO: {
      $secret: {
        _id: "100"
      }
    }
    ONE: {
      TWO: {
        THREE: {
          $secret: {
            _id: "123"
          }
        }
      }
    }
  })
}
