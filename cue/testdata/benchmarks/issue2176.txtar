-- stats.txt --
Leaks:  86
Freed:  3303
Reused: 3296
Allocs: 93
Retain: 525

Unifications: 3381
Conjuncts:    7871
Disjuncts:    3820

-- in.cue --
import (
	"strings"
	"strconv"
	"list"
)

#Datastream: {
	message: string
	message: strings.MinRunes(4)

	marker: {
		length: int
		position: {
			let characters = strings.Split(message, "")
			let unique_combinations = {
				// begin computation once we have more than x number of characters.
				for i, _ in characters if i >= length-1 {
					// this line is causing an increased evaluation time between cue versions.
					// vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
					let combination = list.Slice(characters, i-length+1, i+1)

					// last x number of characters are not unique.
					if list.UniqueItems(list.Slice(characters, i-length+1, i+1)) {
						"\(i+1)": combination
					}
				}
			}
			[for i, _ in unique_combinations {i}][0]
		}
	}
}

input_short: """
	mjqjpqmgbljsphdztnvjfqwrcgsmlb
	"""
input_long: """
	qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw
	"""

input: *input_short | input_long

datastream: #Datastream & {message: input}

output: [string]: string
output: {
	"1": (datastream & {marker: length: 4}).marker.position
	"2": (datastream & {marker: length: 14}).marker.position
}
-- out/eval/stats --
Leaks:  90
Freed:  4079
Reused: 4074
Allocs: 95
Retain: 1359

Unifications: 4161
Conjuncts:    9489
Disjuncts:    4804
-- out/evalalpha --
(struct){
  #Datastream: (#struct){
    message: (string){ strings.MinRunes(4) }
    marker: (#struct){
      length: (int){ int }
      position: (_|_){
        // [incomplete] #Datastream.marker.position.characters: error in call to strings.Split: non-concrete value string:
        //     ./in.cue:14:21
        //     ./in.cue:9:11
        let characters#1 = (_|_){
          // [incomplete] #Datastream.marker.position.characters: error in call to strings.Split: non-concrete value string:
          //     ./in.cue:14:21
          //     ./in.cue:9:11
        }
        let unique_combinations#2 = (_|_){
          // [incomplete] #Datastream.marker.position.characters: error in call to strings.Split: non-concrete value string:
          //     ./in.cue:14:21
          //     ./in.cue:9:11
          let combination#3multi = &[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]
        }
      }
    }
  }
  input_short: (string){ "mjqjpqmgbljsphdztnvjfqwrcgsmlb" }
  input_long: (string){ "qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw" }
  input: (string){ |(*(string){ "mjqjpqmgbljsphdztnvjfqwrcgsmlb" }, (string){ "qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw" }) }
  datastream: (#struct){
    message: (string){ |(*(string){ "mjqjpqmgbljsphdztnvjfqwrcgsmlb" }, (string){ "qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw" }) }
    marker: (#struct){
      length: (int){ int }
      position: (_|_){
        // [incomplete] datastream.marker.position.unique_combinations: non-concrete value int in operand to -:
        //     ./in.cue:17:36
        //     ./in.cue:12:11
        let characters#1 = (#list){
          0: (string){ "m" }
          1: (string){ "j" }
          2: (string){ "q" }
          3: (string){ "j" }
          4: (string){ "p" }
          5: (string){ "q" }
          6: (string){ "m" }
          7: (string){ "g" }
          8: (string){ "b" }
          9: (string){ "l" }
          10: (string){ "j" }
          11: (string){ "s" }
          12: (string){ "p" }
          13: (string){ "h" }
          14: (string){ "d" }
          15: (string){ "z" }
          16: (string){ "t" }
          17: (string){ "n" }
          18: (string){ "v" }
          19: (string){ "j" }
          20: (string){ "f" }
          21: (string){ "q" }
          22: (string){ "w" }
          23: (string){ "r" }
          24: (string){ "c" }
          25: (string){ "g" }
          26: (string){ "s" }
          27: (string){ "m" }
          28: (string){ "l" }
          29: (string){ "b" }
        }
        let unique_combinations#2 = (_|_){
          // [incomplete] datastream.marker.position.unique_combinations: non-concrete value int in operand to -:
          //     ./in.cue:17:36
          //     ./in.cue:12:11
          let combination#3multi = &[&[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]]
        }
      }
    }
  }
  output: (struct){
    "1": (string){
      "7"
      let characters#1 = (#list){
        0: (string){ "m" }
        1: (string){ "j" }
        2: (string){ "q" }
        3: (string){ "j" }
        4: (string){ "p" }
        5: (string){ "q" }
        6: (string){ "m" }
        7: (string){ "g" }
        8: (string){ "b" }
        9: (string){ "l" }
        10: (string){ "j" }
        11: (string){ "s" }
        12: (string){ "p" }
        13: (string){ "h" }
        14: (string){ "d" }
        15: (string){ "z" }
        16: (string){ "t" }
        17: (string){ "n" }
        18: (string){ "v" }
        19: (string){ "j" }
        20: (string){ "f" }
        21: (string){ "q" }
        22: (string){ "w" }
        23: (string){ "r" }
        24: (string){ "c" }
        25: (string){ "g" }
        26: (string){ "s" }
        27: (string){ "m" }
        28: (string){ "l" }
        29: (string){ "b" }
      }
      let unique_combinations#2 = (#struct){
        let combination#3multi = &[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]
        "7": (#list){
          0: (string){ "j" }
          1: (string){ "p" }
          2: (string){ "q" }
          3: (string){ "m" }
        }
        "8": (#list){
          0: (string){ "p" }
          1: (string){ "q" }
          2: (string){ "m" }
          3: (string){ "g" }
        }
        "9": (#list){
          0: (string){ "q" }
          1: (string){ "m" }
          2: (string){ "g" }
          3: (string){ "b" }
        }
        "10": (#list){
          0: (string){ "m" }
          1: (string){ "g" }
          2: (string){ "b" }
          3: (string){ "l" }
        }
        "11": (#list){
          0: (string){ "g" }
          1: (string){ "b" }
          2: (string){ "l" }
          3: (string){ "j" }
        }
        "12": (#list){
          0: (string){ "b" }
          1: (string){ "l" }
          2: (string){ "j" }
          3: (string){ "s" }
        }
        "13": (#list){
          0: (string){ "l" }
          1: (string){ "j" }
          2: (string){ "s" }
          3: (string){ "p" }
        }
        "14": (#list){
          0: (string){ "j" }
          1: (string){ "s" }
          2: (string){ "p" }
          3: (string){ "h" }
        }
        "15": (#list){
          0: (string){ "s" }
          1: (string){ "p" }
          2: (string){ "h" }
          3: (string){ "d" }
        }
        "16": (#list){
          0: (string){ "p" }
          1: (string){ "h" }
          2: (string){ "d" }
          3: (string){ "z" }
        }
        "17": (#list){
          0: (string){ "h" }
          1: (string){ "d" }
          2: (string){ "z" }
          3: (string){ "t" }
        }
        "18": (#list){
          0: (string){ "d" }
          1: (string){ "z" }
          2: (string){ "t" }
          3: (string){ "n" }
        }
        "19": (#list){
          0: (string){ "z" }
          1: (string){ "t" }
          2: (string){ "n" }
          3: (string){ "v" }
        }
        "20": (#list){
          0: (string){ "t" }
          1: (string){ "n" }
          2: (string){ "v" }
          3: (string){ "j" }
        }
        "21": (#list){
          0: (string){ "n" }
          1: (string){ "v" }
          2: (string){ "j" }
          3: (string){ "f" }
        }
        "22": (#list){
          0: (string){ "v" }
          1: (string){ "j" }
          2: (string){ "f" }
          3: (string){ "q" }
        }
        "23": (#list){
          0: (string){ "j" }
          1: (string){ "f" }
          2: (string){ "q" }
          3: (string){ "w" }
        }
        "24": (#list){
          0: (string){ "f" }
          1: (string){ "q" }
          2: (string){ "w" }
          3: (string){ "r" }
        }
        "25": (#list){
          0: (string){ "q" }
          1: (string){ "w" }
          2: (string){ "r" }
          3: (string){ "c" }
        }
        "26": (#list){
          0: (string){ "w" }
          1: (string){ "r" }
          2: (string){ "c" }
          3: (string){ "g" }
        }
        "27": (#list){
          0: (string){ "r" }
          1: (string){ "c" }
          2: (string){ "g" }
          3: (string){ "s" }
        }
        "28": (#list){
          0: (string){ "c" }
          1: (string){ "g" }
          2: (string){ "s" }
          3: (string){ "m" }
        }
        "29": (#list){
          0: (string){ "g" }
          1: (string){ "s" }
          2: (string){ "m" }
          3: (string){ "l" }
        }
        "30": (#list){
          0: (string){ "s" }
          1: (string){ "m" }
          2: (string){ "l" }
          3: (string){ "b" }
        }
      }
    }
    "2": (string){
      "19"
      let characters#1 = (#list){
        0: (string){ "m" }
        1: (string){ "j" }
        2: (string){ "q" }
        3: (string){ "j" }
        4: (string){ "p" }
        5: (string){ "q" }
        6: (string){ "m" }
        7: (string){ "g" }
        8: (string){ "b" }
        9: (string){ "l" }
        10: (string){ "j" }
        11: (string){ "s" }
        12: (string){ "p" }
        13: (string){ "h" }
        14: (string){ "d" }
        15: (string){ "z" }
        16: (string){ "t" }
        17: (string){ "n" }
        18: (string){ "v" }
        19: (string){ "j" }
        20: (string){ "f" }
        21: (string){ "q" }
        22: (string){ "w" }
        23: (string){ "r" }
        24: (string){ "c" }
        25: (string){ "g" }
        26: (string){ "s" }
        27: (string){ "m" }
        28: (string){ "l" }
        29: (string){ "b" }
      }
      let unique_combinations#2 = (#struct){
        let combination#3multi = &[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]
        "19": (#list){
          0: (string){ "q" }
          1: (string){ "m" }
          2: (string){ "g" }
          3: (string){ "b" }
          4: (string){ "l" }
          5: (string){ "j" }
          6: (string){ "s" }
          7: (string){ "p" }
          8: (string){ "h" }
          9: (string){ "d" }
          10: (string){ "z" }
          11: (string){ "t" }
          12: (string){ "n" }
          13: (string){ "v" }
        }
        "25": (#list){
          0: (string){ "s" }
          1: (string){ "p" }
          2: (string){ "h" }
          3: (string){ "d" }
          4: (string){ "z" }
          5: (string){ "t" }
          6: (string){ "n" }
          7: (string){ "v" }
          8: (string){ "j" }
          9: (string){ "f" }
          10: (string){ "q" }
          11: (string){ "w" }
          12: (string){ "r" }
          13: (string){ "c" }
        }
        "26": (#list){
          0: (string){ "p" }
          1: (string){ "h" }
          2: (string){ "d" }
          3: (string){ "z" }
          4: (string){ "t" }
          5: (string){ "n" }
          6: (string){ "v" }
          7: (string){ "j" }
          8: (string){ "f" }
          9: (string){ "q" }
          10: (string){ "w" }
          11: (string){ "r" }
          12: (string){ "c" }
          13: (string){ "g" }
        }
        "27": (#list){
          0: (string){ "h" }
          1: (string){ "d" }
          2: (string){ "z" }
          3: (string){ "t" }
          4: (string){ "n" }
          5: (string){ "v" }
          6: (string){ "j" }
          7: (string){ "f" }
          8: (string){ "q" }
          9: (string){ "w" }
          10: (string){ "r" }
          11: (string){ "c" }
          12: (string){ "g" }
          13: (string){ "s" }
        }
        "28": (#list){
          0: (string){ "d" }
          1: (string){ "z" }
          2: (string){ "t" }
          3: (string){ "n" }
          4: (string){ "v" }
          5: (string){ "j" }
          6: (string){ "f" }
          7: (string){ "q" }
          8: (string){ "w" }
          9: (string){ "r" }
          10: (string){ "c" }
          11: (string){ "g" }
          12: (string){ "s" }
          13: (string){ "m" }
        }
        "29": (#list){
          0: (string){ "z" }
          1: (string){ "t" }
          2: (string){ "n" }
          3: (string){ "v" }
          4: (string){ "j" }
          5: (string){ "f" }
          6: (string){ "q" }
          7: (string){ "w" }
          8: (string){ "r" }
          9: (string){ "c" }
          10: (string){ "g" }
          11: (string){ "s" }
          12: (string){ "m" }
          13: (string){ "l" }
        }
        "30": (#list){
          0: (string){ "t" }
          1: (string){ "n" }
          2: (string){ "v" }
          3: (string){ "j" }
          4: (string){ "f" }
          5: (string){ "q" }
          6: (string){ "w" }
          7: (string){ "r" }
          8: (string){ "c" }
          9: (string){ "g" }
          10: (string){ "s" }
          11: (string){ "m" }
          12: (string){ "l" }
          13: (string){ "b" }
        }
      }
    }
  }
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -12,13 +12,11 @@
           //     ./in.cue:14:21
           //     ./in.cue:9:11
         }
-        let unique_combinations#2multi = {
-          for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
-            let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
-            if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
-              "\((〈2;i〉 + 1))": 〈1;let combination#3〉
-            }
-          }
+        let unique_combinations#2 = (_|_){
+          // [incomplete] #Datastream.marker.position.characters: error in call to strings.Split: non-concrete value string:
+          //     ./in.cue:14:21
+          //     ./in.cue:9:11
+          let combination#3multi = &[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]
         }
       }
     }
@@ -66,13 +64,11 @@
           28: (string){ "l" }
           29: (string){ "b" }
         }
-        let unique_combinations#2multi = {
-          for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
-            let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
-            if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
-              "\((〈2;i〉 + 1))": 〈1;let combination#3〉
-            }
-          }
+        let unique_combinations#2 = (_|_){
+          // [incomplete] datastream.marker.position.unique_combinations: non-concrete value int in operand to -:
+          //     ./in.cue:17:36
+          //     ./in.cue:12:11
+          let combination#3multi = &[&[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]]
         }
       }
     }
@@ -112,12 +108,151 @@
         28: (string){ "l" }
         29: (string){ "b" }
       }
-      let unique_combinations#2multi = {
-        for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
-          let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
-          if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
-            "\((〈2;i〉 + 1))": 〈1;let combination#3〉
-          }
+      let unique_combinations#2 = (#struct){
+        let combination#3multi = &[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]
+        "7": (#list){
+          0: (string){ "j" }
+          1: (string){ "p" }
+          2: (string){ "q" }
+          3: (string){ "m" }
+        }
+        "8": (#list){
+          0: (string){ "p" }
+          1: (string){ "q" }
+          2: (string){ "m" }
+          3: (string){ "g" }
+        }
+        "9": (#list){
+          0: (string){ "q" }
+          1: (string){ "m" }
+          2: (string){ "g" }
+          3: (string){ "b" }
+        }
+        "10": (#list){
+          0: (string){ "m" }
+          1: (string){ "g" }
+          2: (string){ "b" }
+          3: (string){ "l" }
+        }
+        "11": (#list){
+          0: (string){ "g" }
+          1: (string){ "b" }
+          2: (string){ "l" }
+          3: (string){ "j" }
+        }
+        "12": (#list){
+          0: (string){ "b" }
+          1: (string){ "l" }
+          2: (string){ "j" }
+          3: (string){ "s" }
+        }
+        "13": (#list){
+          0: (string){ "l" }
+          1: (string){ "j" }
+          2: (string){ "s" }
+          3: (string){ "p" }
+        }
+        "14": (#list){
+          0: (string){ "j" }
+          1: (string){ "s" }
+          2: (string){ "p" }
+          3: (string){ "h" }
+        }
+        "15": (#list){
+          0: (string){ "s" }
+          1: (string){ "p" }
+          2: (string){ "h" }
+          3: (string){ "d" }
+        }
+        "16": (#list){
+          0: (string){ "p" }
+          1: (string){ "h" }
+          2: (string){ "d" }
+          3: (string){ "z" }
+        }
+        "17": (#list){
+          0: (string){ "h" }
+          1: (string){ "d" }
+          2: (string){ "z" }
+          3: (string){ "t" }
+        }
+        "18": (#list){
+          0: (string){ "d" }
+          1: (string){ "z" }
+          2: (string){ "t" }
+          3: (string){ "n" }
+        }
+        "19": (#list){
+          0: (string){ "z" }
+          1: (string){ "t" }
+          2: (string){ "n" }
+          3: (string){ "v" }
+        }
+        "20": (#list){
+          0: (string){ "t" }
+          1: (string){ "n" }
+          2: (string){ "v" }
+          3: (string){ "j" }
+        }
+        "21": (#list){
+          0: (string){ "n" }
+          1: (string){ "v" }
+          2: (string){ "j" }
+          3: (string){ "f" }
+        }
+        "22": (#list){
+          0: (string){ "v" }
+          1: (string){ "j" }
+          2: (string){ "f" }
+          3: (string){ "q" }
+        }
+        "23": (#list){
+          0: (string){ "j" }
+          1: (string){ "f" }
+          2: (string){ "q" }
+          3: (string){ "w" }
+        }
+        "24": (#list){
+          0: (string){ "f" }
+          1: (string){ "q" }
+          2: (string){ "w" }
+          3: (string){ "r" }
+        }
+        "25": (#list){
+          0: (string){ "q" }
+          1: (string){ "w" }
+          2: (string){ "r" }
+          3: (string){ "c" }
+        }
+        "26": (#list){
+          0: (string){ "w" }
+          1: (string){ "r" }
+          2: (string){ "c" }
+          3: (string){ "g" }
+        }
+        "27": (#list){
+          0: (string){ "r" }
+          1: (string){ "c" }
+          2: (string){ "g" }
+          3: (string){ "s" }
+        }
+        "28": (#list){
+          0: (string){ "c" }
+          1: (string){ "g" }
+          2: (string){ "s" }
+          3: (string){ "m" }
+        }
+        "29": (#list){
+          0: (string){ "g" }
+          1: (string){ "s" }
+          2: (string){ "m" }
+          3: (string){ "l" }
+        }
+        "30": (#list){
+          0: (string){ "s" }
+          1: (string){ "m" }
+          2: (string){ "l" }
+          3: (string){ "b" }
         }
       }
     }
@@ -155,12 +290,119 @@
         28: (string){ "l" }
         29: (string){ "b" }
       }
-      let unique_combinations#2multi = {
-        for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
-          let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
-          if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
-            "\((〈2;i〉 + 1))": 〈1;let combination#3〉
-          }
+      let unique_combinations#2 = (#struct){
+        let combination#3multi = &[&[&[&[&[&[&[&[〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))]]]]]]]]
+        "19": (#list){
+          0: (string){ "q" }
+          1: (string){ "m" }
+          2: (string){ "g" }
+          3: (string){ "b" }
+          4: (string){ "l" }
+          5: (string){ "j" }
+          6: (string){ "s" }
+          7: (string){ "p" }
+          8: (string){ "h" }
+          9: (string){ "d" }
+          10: (string){ "z" }
+          11: (string){ "t" }
+          12: (string){ "n" }
+          13: (string){ "v" }
+        }
+        "25": (#list){
+          0: (string){ "s" }
+          1: (string){ "p" }
+          2: (string){ "h" }
+          3: (string){ "d" }
+          4: (string){ "z" }
+          5: (string){ "t" }
+          6: (string){ "n" }
+          7: (string){ "v" }
+          8: (string){ "j" }
+          9: (string){ "f" }
+          10: (string){ "q" }
+          11: (string){ "w" }
+          12: (string){ "r" }
+          13: (string){ "c" }
+        }
+        "26": (#list){
+          0: (string){ "p" }
+          1: (string){ "h" }
+          2: (string){ "d" }
+          3: (string){ "z" }
+          4: (string){ "t" }
+          5: (string){ "n" }
+          6: (string){ "v" }
+          7: (string){ "j" }
+          8: (string){ "f" }
+          9: (string){ "q" }
+          10: (string){ "w" }
+          11: (string){ "r" }
+          12: (string){ "c" }
+          13: (string){ "g" }
+        }
+        "27": (#list){
+          0: (string){ "h" }
+          1: (string){ "d" }
+          2: (string){ "z" }
+          3: (string){ "t" }
+          4: (string){ "n" }
+          5: (string){ "v" }
+          6: (string){ "j" }
+          7: (string){ "f" }
+          8: (string){ "q" }
+          9: (string){ "w" }
+          10: (string){ "r" }
+          11: (string){ "c" }
+          12: (string){ "g" }
+          13: (string){ "s" }
+        }
+        "28": (#list){
+          0: (string){ "d" }
+          1: (string){ "z" }
+          2: (string){ "t" }
+          3: (string){ "n" }
+          4: (string){ "v" }
+          5: (string){ "j" }
+          6: (string){ "f" }
+          7: (string){ "q" }
+          8: (string){ "w" }
+          9: (string){ "r" }
+          10: (string){ "c" }
+          11: (string){ "g" }
+          12: (string){ "s" }
+          13: (string){ "m" }
+        }
+        "29": (#list){
+          0: (string){ "z" }
+          1: (string){ "t" }
+          2: (string){ "n" }
+          3: (string){ "v" }
+          4: (string){ "j" }
+          5: (string){ "f" }
+          6: (string){ "q" }
+          7: (string){ "w" }
+          8: (string){ "r" }
+          9: (string){ "c" }
+          10: (string){ "g" }
+          11: (string){ "s" }
+          12: (string){ "m" }
+          13: (string){ "l" }
+        }
+        "30": (#list){
+          0: (string){ "t" }
+          1: (string){ "n" }
+          2: (string){ "v" }
+          3: (string){ "j" }
+          4: (string){ "f" }
+          5: (string){ "q" }
+          6: (string){ "w" }
+          7: (string){ "r" }
+          8: (string){ "c" }
+          9: (string){ "g" }
+          10: (string){ "s" }
+          11: (string){ "m" }
+          12: (string){ "l" }
+          13: (string){ "b" }
         }
       }
     }
-- diff/todo/p2 --
let unique_combinations: not marked as multi. Seems benign, but should be fixed.
-- out/eval --
(struct){
  #Datastream: (#struct){
    message: (string){ strings.MinRunes(4) }
    marker: (#struct){
      length: (int){ int }
      position: (_|_){
        // [incomplete] #Datastream.marker.position.characters: error in call to strings.Split: non-concrete value string:
        //     ./in.cue:14:21
        //     ./in.cue:9:11
        let characters#1 = (_|_){
          // [incomplete] #Datastream.marker.position.characters: error in call to strings.Split: non-concrete value string:
          //     ./in.cue:14:21
          //     ./in.cue:9:11
        }
        let unique_combinations#2multi = {
          for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
            let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
            if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
              "\((〈2;i〉 + 1))": 〈1;let combination#3〉
            }
          }
        }
      }
    }
  }
  input_short: (string){ "mjqjpqmgbljsphdztnvjfqwrcgsmlb" }
  input_long: (string){ "qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw" }
  input: (string){ |(*(string){ "mjqjpqmgbljsphdztnvjfqwrcgsmlb" }, (string){ "qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw" }) }
  datastream: (#struct){
    message: (string){ |(*(string){ "mjqjpqmgbljsphdztnvjfqwrcgsmlb" }, (string){ "qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw" }) }
    marker: (#struct){
      length: (int){ int }
      position: (_|_){
        // [incomplete] datastream.marker.position.unique_combinations: non-concrete value int in operand to -:
        //     ./in.cue:17:36
        //     ./in.cue:12:11
        let characters#1 = (#list){
          0: (string){ "m" }
          1: (string){ "j" }
          2: (string){ "q" }
          3: (string){ "j" }
          4: (string){ "p" }
          5: (string){ "q" }
          6: (string){ "m" }
          7: (string){ "g" }
          8: (string){ "b" }
          9: (string){ "l" }
          10: (string){ "j" }
          11: (string){ "s" }
          12: (string){ "p" }
          13: (string){ "h" }
          14: (string){ "d" }
          15: (string){ "z" }
          16: (string){ "t" }
          17: (string){ "n" }
          18: (string){ "v" }
          19: (string){ "j" }
          20: (string){ "f" }
          21: (string){ "q" }
          22: (string){ "w" }
          23: (string){ "r" }
          24: (string){ "c" }
          25: (string){ "g" }
          26: (string){ "s" }
          27: (string){ "m" }
          28: (string){ "l" }
          29: (string){ "b" }
        }
        let unique_combinations#2multi = {
          for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
            let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
            if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
              "\((〈2;i〉 + 1))": 〈1;let combination#3〉
            }
          }
        }
      }
    }
  }
  output: (struct){
    "1": (string){
      "7"
      let characters#1 = (#list){
        0: (string){ "m" }
        1: (string){ "j" }
        2: (string){ "q" }
        3: (string){ "j" }
        4: (string){ "p" }
        5: (string){ "q" }
        6: (string){ "m" }
        7: (string){ "g" }
        8: (string){ "b" }
        9: (string){ "l" }
        10: (string){ "j" }
        11: (string){ "s" }
        12: (string){ "p" }
        13: (string){ "h" }
        14: (string){ "d" }
        15: (string){ "z" }
        16: (string){ "t" }
        17: (string){ "n" }
        18: (string){ "v" }
        19: (string){ "j" }
        20: (string){ "f" }
        21: (string){ "q" }
        22: (string){ "w" }
        23: (string){ "r" }
        24: (string){ "c" }
        25: (string){ "g" }
        26: (string){ "s" }
        27: (string){ "m" }
        28: (string){ "l" }
        29: (string){ "b" }
      }
      let unique_combinations#2multi = {
        for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
          let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
          if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
            "\((〈2;i〉 + 1))": 〈1;let combination#3〉
          }
        }
      }
    }
    "2": (string){
      "19"
      let characters#1 = (#list){
        0: (string){ "m" }
        1: (string){ "j" }
        2: (string){ "q" }
        3: (string){ "j" }
        4: (string){ "p" }
        5: (string){ "q" }
        6: (string){ "m" }
        7: (string){ "g" }
        8: (string){ "b" }
        9: (string){ "l" }
        10: (string){ "j" }
        11: (string){ "s" }
        12: (string){ "p" }
        13: (string){ "h" }
        14: (string){ "d" }
        15: (string){ "z" }
        16: (string){ "t" }
        17: (string){ "n" }
        18: (string){ "v" }
        19: (string){ "j" }
        20: (string){ "f" }
        21: (string){ "q" }
        22: (string){ "w" }
        23: (string){ "r" }
        24: (string){ "c" }
        25: (string){ "g" }
        26: (string){ "s" }
        27: (string){ "m" }
        28: (string){ "l" }
        29: (string){ "b" }
      }
      let unique_combinations#2multi = {
        for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
          let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
          if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
            "\((〈2;i〉 + 1))": 〈1;let combination#3〉
          }
        }
      }
    }
  }
}
-- out/compile --
--- in.cue
{
  #Datastream: {
    message: string
    message: 〈import;strings〉.MinRunes(4)
    marker: {
      length: int
      position: {
        let characters#1 = 〈import;strings〉.Split(〈2;message〉, "")
        let unique_combinations#2multi = {
          for i, _ in 〈1;let characters#1〉 if (〈0;i〉 >= (〈3;length〉 - 1)) {
            let combination#3multi = 〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))
            if 〈import;list〉.UniqueItems(〈import;list〉.Slice(〈3;let characters#1〉, ((〈1;i〉 - 〈4;length〉) + 1), (〈1;i〉 + 1))) {
              "\((〈2;i〉 + 1))": 〈1;let combination#3〉
            }
          }
        }
        [
          for i, _ in 〈1;let unique_combinations#2〉 {
            〈1;i〉
          },
        ][0]
      }
    }
  }
  input_short: "mjqjpqmgbljsphdztnvjfqwrcgsmlb"
  input_long: "qfmfhmhjmjggwbbvdvwvlvrrtsrsccwsslvlffjrrtprprjjvmmclmmghhddpvddclctcqtccgbgdbgdgsdgghqhtqtvvptvppwrwprpvrrrhpphththvhhrnnhnlnslnlhnhnhgnhnpnqqsmsgsllprlprrlzzqzffmzztctbtnbtthlttqvqcqmcmpcpbbczzbqbgghcghchhvwvllfrfnnbssfzsszpsplpglpprnpnfnbnhbnbtbzzvbvpbbhjjlzzbtbvbppczppbwppqwwnwlwccglgvgrgmmdwmwrmrppnfnhhhhqthqthqqrhrshhhqbhqqjgjvjllzvzbzhbbpttjsszvzqqtzzmbmddpldpdcdnccrmcrmmpwprplrrqssvddmpdmmwfwwlrljrrdsssmhsspnpffjggqllnzlnlhnnmddfrfpfbbvssjsrrznngcghgchcmhmrrrtzztjzzhchssslsmlmvvpwpqpjqjdddmsdmmtgtmgtglttfbbgrrcprrqffmmjnjttcmczzgbzggthhsttpggrmmgwwnpnqnqvnqvqppmlpmlpmpjpljljmmtpptfppfrppfdpfdppddmdttgzgzzdbzdzhzhnnsqssvmvbbpjjzwwvnwvvzmvzmzpmpttvrvccqddpgdppgmmthmthtggsfsbbvfbvfvhfvhvvpwpddqrqgqhghnnfmfbbwrbrgbgbvgbbdttffrddqbqpqzzmttlhhsqhsqhsqhhlplttpnpsstpthhpfhpfplprrgfrgffjppghgppghgdggjmmcgmccjvvsrvsrrwgrgmrrngrgttvbtbltthrthrttmfffjpfpssncnrngrrltrltlggjgcgllrzzllhwwjwrwgrgsrgrhrphrhhqwqsqmqlmqlmqmqrmrnnwnhwnhwhzwzjwwgbghhsjspszsznzfztfzfpzzlczztctsstctqtfqfqcfqqjrjccttmqqfpfdfnfwnffqbfbblpbpfpcfcwfccblbwwmqwqrrgprpccngnhghpppwmpplcppfrfjjgmmbzbhbcbzzgdgsdsvvqllzlppnfnlnlslsljlppcscqqfjjjwzwppfgfjjsvvsggjbjljpjpzjzrzjrzzfnfpnfpnfpnfnsnggmpggdllpmmrhhdqqppttgqqcsqsjsbjsjrsrqrbqqmbmcbmcbmbfmfvfqqdbdppmrprnrggmjjhnhbhdhbbfcbbcjjdhhwjwmjmssjswscswcwzccbgbqqmqgmmsdsjsbsdbsddvttjpppcqpcqcgqqslqsssczszrzvvrtvvjppswwhnnwlwtwhhwwzfwwpfpddlvvnvnnvlnntjtqjqjzzjttvvbqbhqbhbbbwnwhnwnppdbpdpvddrqdqjjlvlqqdfdhdjhdjdcjcrcjjggfmfvvfllvfvgglzllmhmzmdddfwddqjjqjfqfcfrrstrssptsstllrflfwwgswslwlbwbwjjvhvfvhfhffhsslwsllbnbblccbwwjqwqqdllrdrnrnffcbbqqpnqqdmdndtntvvrjvvsvmvgvnnmjlwgnjcwljgwnrwpqlztwrpmpgqtwlhrcwsrrhqhjhznrtpqfdnzbfqrzwslptdbdcnqvcllpjsfdvmzqwvzbpnmfcfcjnbmhtwhttjgtnczwctpdthhwmzvzrrgsnmbflgmszgsbvghbzgcmcmszgsbfmlmpbdspqlftmqrcjtmvgcrzznlfwjcbmddplsqrfflqnqfsldwhnncczdmfrrrsbjjqsdzrsgbdbwjbslfcqglsqfddhdsrcdrgqfqthgmfjvnfdfgdncfzpvqcpscnpmfgvqbfwszwzgmqvmcrdrwplfshdgqrchmccpqfznbmfvlhdpctlqgjslrwhjfjlmqfblgjrdlnzdtwlpwhnrhrcrpfwqpmjlgrdbgpbljntmbqlblqqqpgrnjtmjqvjpzvsqdpgtchmmwbhtmgcjqdplrtptqcvdjjpqdzsrcjhcwvdcghlwrdhtdfctmqfcjcqhcvvbzgsvlggcrdgqbtznwwmnbgsfrjprqgcmlswftlwpqqqvshdprldrsghmhrqvmqmvglbvzpvtrjbhcvhqmvdtcvsllznqzjmhpnlbhmlzthbwwhhvdtcdfdcdzhnbsrnqqjvzzsvfjhbsdlsbdlqjnlpnhfcjtdppzmphghltztzcdvzwbftbvwhvgmrllqfzrpbltptdtjjqtfwjfmczzgdvclqbsbftgtlhnhrrvbpvdltstdnhqvpvtjhmghptvsfnlspslmfsftzdrwljrgblgmcbmlszmhnlfdtmsrnjqwrfmsnfgpcqgzmlwppffrmbvhnlstfpgzw"
  input: (*〈0;input_short〉|〈0;input_long〉)
  datastream: (〈0;#Datastream〉 & {
    message: 〈1;input〉
  })
  output: {
    [string]: string
  }
  output: {
    "1": (〈1;datastream〉 & {
      marker: {
        length: 4
      }
    }).marker.position
    "2": (〈1;datastream〉 & {
      marker: {
        length: 14
      }
    }).marker.position
  }
}
