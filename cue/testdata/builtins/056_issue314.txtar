#name: issue314
#evalFull
-- in.cue --
import (
	"text/template"
	"encoding/yaml"
	"encoding/json"
)

x: {
	s: "myname"
	#T
}

#T: {
	s:   string
	out: template.Execute("{{.s}}", {
		"s": s
	})
}

#V: {
	s:   string
	out: json.Marshal({"s": s})
}

#U: {
	s:   string
	out: yaml.Marshal({"s": s})
}
-- out/evalalpha/stats --
Leaks:  0
Freed:  21
Reused: 12
Allocs: 9
Retain: 0

Unifications: 21
Conjuncts:    24
Disjuncts:    0

NumCloseIDs: 3
-- diff/-out/evalalpha/stats<==>+out/eval/stats --
diff old new
--- old
+++ new
@@ -1,9 +1,11 @@
 Leaks:  0
-Freed:  45
-Reused: 39
-Allocs: 6
-Retain: 17
-
-Unifications: 45
-Conjuncts:    77
-Disjuncts:    62
+Freed:  21
+Reused: 12
+Allocs: 9
+Retain: 0
+
+Unifications: 21
+Conjuncts:    24
+Disjuncts:    0
+
+NumCloseIDs: 3
-- out/eval/stats --
Leaks:  0
Freed:  45
Reused: 39
Allocs: 6
Retain: 17

Unifications: 45
Conjuncts:    77
Disjuncts:    62
-- out/evalalpha --
(struct){
  x: (#struct){
    s: (string){ "myname" }
    out: (string){ "myname" }
  }
  #T: (#struct){
    s: (string){ string }
    out: (_|_){
      // [incomplete] #T.out: error in call to text/template.Execute: cannot convert non-concrete value string:
      //     ./in.cue:14:7
      //     ./in.cue:13:2
    }
  }
  #V: (#struct){
    s: (string){ string }
    out: (_|_){
      // [incomplete] cannot convert incomplete value "string" to JSON:
      //     ./in.cue:20:7
    }
  }
  #U: (#struct){
    s: (string){ string }
    out: (_|_){
      // [incomplete] #U.out: error in call to encoding/yaml.Marshal: incomplete value string:
      //     ./in.cue:26:7
      //     ./in.cue:25:7
      //     ./in.cue:26:26
    }
  }
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -8,7 +8,7 @@
     out: (_|_){
       // [incomplete] #T.out: error in call to text/template.Execute: cannot convert non-concrete value string:
       //     ./in.cue:14:7
-      //     ./in.cue:15:3
+      //     ./in.cue:13:2
     }
   }
   #V: (#struct){
@@ -24,6 +24,7 @@
       // [incomplete] #U.out: error in call to encoding/yaml.Marshal: incomplete value string:
       //     ./in.cue:26:7
       //     ./in.cue:25:7
+      //     ./in.cue:26:26
     }
   }
 }
-- out/eval --
(struct){
  x: (#struct){
    s: (string){ "myname" }
    out: (string){ "myname" }
  }
  #T: (#struct){
    s: (string){ string }
    out: (_|_){
      // [incomplete] #T.out: error in call to text/template.Execute: cannot convert non-concrete value string:
      //     ./in.cue:14:7
      //     ./in.cue:15:3
    }
  }
  #V: (#struct){
    s: (string){ string }
    out: (_|_){
      // [incomplete] cannot convert incomplete value "string" to JSON:
      //     ./in.cue:20:7
    }
  }
  #U: (#struct){
    s: (string){ string }
    out: (_|_){
      // [incomplete] #U.out: error in call to encoding/yaml.Marshal: incomplete value string:
      //     ./in.cue:26:7
      //     ./in.cue:25:7
    }
  }
}
-- out/compile --
--- in.cue
{
  x: {
    s: "myname"
    〈1;#T〉
  }
  #T: {
    s: string
    out: 〈import;"text/template"〉.Execute("{{.s}}", {
      s: 〈1;s〉
    })
  }
  #V: {
    s: string
    out: 〈import;"encoding/json"〉.Marshal({
      s: 〈1;s〉
    })
  }
  #U: {
    s: string
    out: 〈import;"encoding/yaml"〉.Marshal({
      s: 〈1;s〉
    })
  }
}
