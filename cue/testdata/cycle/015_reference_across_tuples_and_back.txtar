#name: reference across tuples and back
#evalPartial
-- in.cue --
a: {c: b.e, d: b.f}
b: {e: 3, f: a.c}
-- out/compile --
--- in.cue
{
  a: {
    c: 〈1;b〉.e
    d: 〈1;b〉.f
  }
  b: {
    e: 3
    f: 〈1;a〉.c
  }
}
-- out/eval/stats --
Leaks:  0
Freed:  7
Reused: 1
Allocs: 6
Retain: 8

Unifications: 7
Conjuncts:    12
Disjuncts:    12
-- out/eval --
(struct){
  a: (struct){
    c: (int){ 3 }
    d: (int){ 3 }
  }
  b: (struct){
    e: (int){ 3 }
    f: (int){ 3 }
  }
}
