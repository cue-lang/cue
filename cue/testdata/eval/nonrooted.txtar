-- in.cue --
issue3977: inlineExpr: {
	#NetworkID: 1
	#fn: {
		x:   #NetworkID
		out: x + 1
	}

	err: (#fn & {x: 2}).out
}
issue3977: inlineDisj1: {
	#NetworkID: "2" | "3" | "4"
	#fn: {
		x:   #NetworkID
		out: "value=\(x)"
	}

	err: (#fn & {x: "invalid"}).out
}
issue3977: inlineDisj2: {
	#NetworkID: 1
	#fn: {
		x:   #NetworkID
		out: x + 10
	}

	err: (#fn & {x: *2 | 4}).out
}
issue3977: inlineDisj3: {
	#NetworkID: 1
	#fn: {
		x:   #NetworkID
		out: x + 10
	}

	err: (#fn & {x: *2 | int}).out
}
issue3977: inlineLet: {
	#NetworkID: 1
	let p = {
		x:   #NetworkID
		out: x + 10
	} & {
		x: 2
	}

	err: p.out
}
-- out/eval/stats --
Leaks:  9
Freed:  48
Reused: 43
Allocs: 14
Retain: 27

Unifications: 47
Conjuncts:    87
Disjuncts:    68
-- out/evalalpha --
Errors:
issue3977.inlineLet.p.x: conflicting values 1 and 2:
    ./in.cue:38:14
    ./in.cue:43:6
x: conflicting values 1 and 2:
    ./in.cue:2:14
    ./in.cue:8:18
x: conflicting values 2 and 1:
    ./in.cue:20:14
    ./in.cue:26:19
x: conflicting values 4 and 1:
    ./in.cue:20:14
    ./in.cue:26:23
x: invalid interpolation: 3 errors in empty disjunction::
    ./in.cue:14:8
    ./in.cue:14:17
x: 2 errors in empty disjunction::
    ./in.cue:23:8

Result:
(_|_){
  // [eval]
  issue3977: (_|_){
    // [eval]
    inlineExpr: (_|_){
      // [eval]
      #NetworkID: (int){ 1 }
      #fn: (#struct){
        x: (int){ 1 }
        out: (int){ 2 }
      }
      err: (_|_){
        // [eval] x: conflicting values 1 and 2:
        //     ./in.cue:2:14
        //     ./in.cue:8:18
      }
    }
    inlineDisj1: (_|_){
      // [eval]
      #NetworkID: (string){ |((string){ "2" }, (string){ "3" }, (string){ "4" }) }
      #fn: (#struct){
        x: (string){ |((string){ "2" }, (string){ "3" }, (string){ "4" }) }
        out: (_|_){
          // [incomplete] issue3977.inlineDisj1.#fn.out: invalid interpolation: unresolved disjunction "2" | "3" | "4" (type string):
          //     ./in.cue:14:8
        }
      }
      err: (_|_){
        // [eval] x: invalid interpolation: 3 errors in empty disjunction::
        //     ./in.cue:14:8
        //     ./in.cue:14:17
      }
    }
    inlineDisj2: (_|_){
      // [eval]
      #NetworkID: (int){ 1 }
      #fn: (#struct){
        x: (int){ 1 }
        out: (int){ 11 }
      }
      err: (_|_){
        // [eval] x: conflicting values 2 and 1:
        //     ./in.cue:20:14
        //     ./in.cue:26:19
        // x: conflicting values 4 and 1:
        //     ./in.cue:20:14
        //     ./in.cue:26:23
        // x: 2 errors in empty disjunction::
        //     ./in.cue:23:8
      }
    }
    inlineDisj3: (struct){
      #NetworkID: (int){ 1 }
      #fn: (#struct){
        x: (int){ 1 }
        out: (int){ 11 }
      }
      err: (int){ 11 }
    }
    inlineLet: (_|_){
      // [eval]
      #NetworkID: (int){ 1 }
      let p#1 = (_|_){
        // [eval]
        x: (_|_){
          // [eval] issue3977.inlineLet.p.x: conflicting values 1 and 2:
          //     ./in.cue:38:14
          //     ./in.cue:43:6
        }
        out: (_|_){
          // [eval] issue3977.inlineLet.p.x: conflicting values 1 and 2:
          //     ./in.cue:38:14
          //     ./in.cue:43:6
        }
      }
      err: (_|_){
        // [eval] issue3977.inlineLet.p.x: conflicting values 1 and 2:
        //     ./in.cue:38:14
        //     ./in.cue:43:6
      }
    }
  }
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -1,14 +1,19 @@
 Errors:
+issue3977.inlineLet.p.x: conflicting values 1 and 2:
+    ./in.cue:38:14
+    ./in.cue:43:6
+x: conflicting values 1 and 2:
+    ./in.cue:2:14
+    ./in.cue:8:18
 x: conflicting values 2 and 1:
     ./in.cue:20:14
-    ./in.cue:22:8
-    ./in.cue:26:8
     ./in.cue:26:19
 x: conflicting values 4 and 1:
     ./in.cue:20:14
-    ./in.cue:22:8
-    ./in.cue:26:8
     ./in.cue:26:23
+x: invalid interpolation: 3 errors in empty disjunction::
+    ./in.cue:14:8
+    ./in.cue:14:17
 x: 2 errors in empty disjunction::
     ./in.cue:23:8
 
@@ -17,15 +22,21 @@
   // [eval]
   issue3977: (_|_){
     // [eval]
-    inlineExpr: (struct){
+    inlineExpr: (_|_){
+      // [eval]
       #NetworkID: (int){ 1 }
       #fn: (#struct){
         x: (int){ 1 }
         out: (int){ 2 }
       }
-      err: (int){ 3 }
-    }
-    inlineDisj1: (struct){
+      err: (_|_){
+        // [eval] x: conflicting values 1 and 2:
+        //     ./in.cue:2:14
+        //     ./in.cue:8:18
+      }
+    }
+    inlineDisj1: (_|_){
+      // [eval]
       #NetworkID: (string){ |((string){ "2" }, (string){ "3" }, (string){ "4" }) }
       #fn: (#struct){
         x: (string){ |((string){ "2" }, (string){ "3" }, (string){ "4" }) }
@@ -34,7 +45,11 @@
           //     ./in.cue:14:8
         }
       }
-      err: (string){ "value=invalid" }
+      err: (_|_){
+        // [eval] x: invalid interpolation: 3 errors in empty disjunction::
+        //     ./in.cue:14:8
+        //     ./in.cue:14:17
+      }
     }
     inlineDisj2: (_|_){
       // [eval]
@@ -46,13 +61,9 @@
       err: (_|_){
         // [eval] x: conflicting values 2 and 1:
         //     ./in.cue:20:14
-        //     ./in.cue:22:8
-        //     ./in.cue:26:8
         //     ./in.cue:26:19
         // x: conflicting values 4 and 1:
         //     ./in.cue:20:14
-        //     ./in.cue:22:8
-        //     ./in.cue:26:8
         //     ./in.cue:26:23
         // x: 2 errors in empty disjunction::
         //     ./in.cue:23:8
@@ -66,24 +77,27 @@
       }
       err: (int){ 11 }
     }
-    inlineLet: (struct){
+    inlineLet: (_|_){
+      // [eval]
       #NetworkID: (int){ 1 }
       let p#1 = (_|_){
         // [eval]
         x: (_|_){
-          // [eval] issue3977.inlineLet.p.x: conflicting values 2 and 1:
-          //     ./in.cue:38:14
-          //     ./in.cue:40:8
-          //     ./in.cue:43:6
-        }
-        out: (_|_){
-          // [eval] issue3977.inlineLet.p.x: conflicting values 2 and 1:
-          //     ./in.cue:38:14
-          //     ./in.cue:40:8
-          //     ./in.cue:43:6
-        }
-      }
-      err: (int){ 12 }
+          // [eval] issue3977.inlineLet.p.x: conflicting values 1 and 2:
+          //     ./in.cue:38:14
+          //     ./in.cue:43:6
+        }
+        out: (_|_){
+          // [eval] issue3977.inlineLet.p.x: conflicting values 1 and 2:
+          //     ./in.cue:38:14
+          //     ./in.cue:43:6
+        }
+      }
+      err: (_|_){
+        // [eval] issue3977.inlineLet.p.x: conflicting values 1 and 2:
+        //     ./in.cue:38:14
+        //     ./in.cue:43:6
+      }
     }
   }
 }
-- diff/explanation --
evalv3 correctly fails on all places marked with "err"
-- out/eval --
Errors:
x: conflicting values 2 and 1:
    ./in.cue:20:14
    ./in.cue:22:8
    ./in.cue:26:8
    ./in.cue:26:19
x: conflicting values 4 and 1:
    ./in.cue:20:14
    ./in.cue:22:8
    ./in.cue:26:8
    ./in.cue:26:23
x: 2 errors in empty disjunction::
    ./in.cue:23:8

Result:
(_|_){
  // [eval]
  issue3977: (_|_){
    // [eval]
    inlineExpr: (struct){
      #NetworkID: (int){ 1 }
      #fn: (#struct){
        x: (int){ 1 }
        out: (int){ 2 }
      }
      err: (int){ 3 }
    }
    inlineDisj1: (struct){
      #NetworkID: (string){ |((string){ "2" }, (string){ "3" }, (string){ "4" }) }
      #fn: (#struct){
        x: (string){ |((string){ "2" }, (string){ "3" }, (string){ "4" }) }
        out: (_|_){
          // [incomplete] issue3977.inlineDisj1.#fn.out: invalid interpolation: unresolved disjunction "2" | "3" | "4" (type string):
          //     ./in.cue:14:8
        }
      }
      err: (string){ "value=invalid" }
    }
    inlineDisj2: (_|_){
      // [eval]
      #NetworkID: (int){ 1 }
      #fn: (#struct){
        x: (int){ 1 }
        out: (int){ 11 }
      }
      err: (_|_){
        // [eval] x: conflicting values 2 and 1:
        //     ./in.cue:20:14
        //     ./in.cue:22:8
        //     ./in.cue:26:8
        //     ./in.cue:26:19
        // x: conflicting values 4 and 1:
        //     ./in.cue:20:14
        //     ./in.cue:22:8
        //     ./in.cue:26:8
        //     ./in.cue:26:23
        // x: 2 errors in empty disjunction::
        //     ./in.cue:23:8
      }
    }
    inlineDisj3: (struct){
      #NetworkID: (int){ 1 }
      #fn: (#struct){
        x: (int){ 1 }
        out: (int){ 11 }
      }
      err: (int){ 11 }
    }
    inlineLet: (struct){
      #NetworkID: (int){ 1 }
      let p#1 = (_|_){
        // [eval]
        x: (_|_){
          // [eval] issue3977.inlineLet.p.x: conflicting values 2 and 1:
          //     ./in.cue:38:14
          //     ./in.cue:40:8
          //     ./in.cue:43:6
        }
        out: (_|_){
          // [eval] issue3977.inlineLet.p.x: conflicting values 2 and 1:
          //     ./in.cue:38:14
          //     ./in.cue:40:8
          //     ./in.cue:43:6
        }
      }
      err: (int){ 12 }
    }
  }
}
-- out/compile --
--- in.cue
{
  issue3977: {
    inlineExpr: {
      #NetworkID: 1
      #fn: {
        x: 〈1;#NetworkID〉
        out: (〈0;x〉 + 1)
      }
      err: (〈0;#fn〉 & {
        x: 2
      }).out
    }
  }
  issue3977: {
    inlineDisj1: {
      #NetworkID: ("2"|"3"|"4")
      #fn: {
        x: 〈1;#NetworkID〉
        out: "value=\(〈0;x〉)"
      }
      err: (〈0;#fn〉 & {
        x: "invalid"
      }).out
    }
  }
  issue3977: {
    inlineDisj2: {
      #NetworkID: 1
      #fn: {
        x: 〈1;#NetworkID〉
        out: (〈0;x〉 + 10)
      }
      err: (〈0;#fn〉 & {
        x: (*2|4)
      }).out
    }
  }
  issue3977: {
    inlineDisj3: {
      #NetworkID: 1
      #fn: {
        x: 〈1;#NetworkID〉
        out: (〈0;x〉 + 10)
      }
      err: (〈0;#fn〉 & {
        x: (*2|int)
      }).out
    }
  }
  issue3977: {
    inlineLet: {
      #NetworkID: 1
      let p#1 = ({
        x: 〈1;#NetworkID〉
        out: (〈0;x〉 + 10)
      } & {
        x: 2
      })
      err: 〈0;let p#1〉.out
    }
  }
}
