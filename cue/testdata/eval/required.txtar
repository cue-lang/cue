-- in.cue --
self: t1: {
	a?: int
}

self: t2: {
	a!: int
	a!: int
}

unify: t1: p1: {
	a!: int
	a: int
}

unify: t1: p2: {
	a: int
	a!: int
}

unify: t2: p1: {
	a!: int
	a?: int
}

unify: t2: p2: {
	a?: int
	a!: int
}
#Def: t1: {
	a!: int
}

allowed: issue2306: {
	#A: a!: int
	#A: #B

	#B: b!: int
}

reference: case1: {
	#Foo: a!: int

	b: #Foo.a
}

#Foo: a!: int

reference: {
	toWithinDefinition: {
		b: #Foo.a
	}
	toFieldFromDefinition: {
			b: #Foo
			c: b.a
	}
	toNonDefinition: {
		x: y!: _
		b: x.y
	}
	toConcrete: {
		a!: 1
		b: a + 1
	}
}

-- out/compile --
--- in.cue
{
  self: {
    t1: {
      a?: int
    }
  }
  self: {
    t2: {
      a!: int
      a!: int
    }
  }
  unify: {
    t1: {
      p1: {
        a!: int
        a: int
      }
    }
  }
  unify: {
    t1: {
      p2: {
        a: int
        a!: int
      }
    }
  }
  unify: {
    t2: {
      p1: {
        a!: int
        a?: int
      }
    }
  }
  unify: {
    t2: {
      p2: {
        a?: int
        a!: int
      }
    }
  }
  #Def: {
    t1: {
      a!: int
    }
  }
  allowed: {
    issue2306: {
      #A: {
        a!: int
      }
      #A: 〈0;#B〉
      #B: {
        b!: int
      }
    }
  }
  reference: {
    case1: {
      #Foo: {
        a!: int
      }
      b: 〈0;#Foo〉.a
    }
  }
  #Foo: {
    a!: int
  }
  reference: {
    toWithinDefinition: {
      b: 〈2;#Foo〉.a
    }
    toFieldFromDefinition: {
      b: 〈2;#Foo〉
      c: 〈0;b〉.a
    }
    toNonDefinition: {
      x: {
        y!: _
      }
      b: 〈0;x〉.y
    }
    toConcrete: {
      a!: 1
      b: (〈0;a〉 + 1)
    }
  }
}
-- out/eval/stats --
Leaks:  0
Freed:  47
Reused: 41
Allocs: 6
Retain: 4

Unifications: 47
Conjuncts:    66
Disjuncts:    51
-- out/evalalpha --
(_|_){
  // [eval]
  self: (struct){
    t1: (struct){
      a?: (int){ int }
    }
    t2: (struct){
      a!: (int){ int }
    }
  }
  unify: (struct){
    t1: (struct){
      p1: (struct){
        a: (int){ int }
      }
      p2: (struct){
        a: (int){ int }
      }
    }
    t2: (struct){
      p1: (struct){
        a!: (int){ int }
      }
      p2: (struct){
        a!: (int){ int }
      }
    }
  }
  #Def: (#struct){
    t1: (#struct){
      a!: (int){ int }
    }
  }
  allowed: (_|_){
    // [eval]
    issue2306: (_|_){
      // [eval]
      #A: (_|_){
        // [eval]
        a!: (_|_){
          // [eval] allowed.issue2306.#A.a: field not allowed:
          //     ./in.cue:34:6
        }
        b!: (int){ int }
      }
      #B: (#struct){
        b!: (int){ int }
      }
    }
  }
  reference: (struct){
    case1: (struct){
      #Foo: (#struct){
        a!: (int){ int }
      }
      b: (int){ int }
    }
    toWithinDefinition: (struct){
      b: (int){ int }
    }
    toFieldFromDefinition: (struct){
      b: (#struct){
        a!: (int){ int }
      }
      c: (int){ int }
    }
    toNonDefinition: (struct){
      x: (struct){
        y!: (_){ _ }
      }
      b: (_){ _ }
    }
    toConcrete: (struct){
      a!: (int){ 1 }
      b: (int){ 2 }
    }
  }
  #Foo: (#struct){
    a!: (int){ int }
  }
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -40,8 +40,6 @@
         a!: (_|_){
           // [eval] allowed.issue2306.#A.a: field not allowed:
           //     ./in.cue:34:6
-          //     ./in.cue:35:6
-          //     ./in.cue:37:6
         }
         b!: (int){ int }
       }
-- diff/todo/p2 --
Missing position.
-- out/eval --
(_|_){
  // [eval]
  self: (struct){
    t1: (struct){
      a?: (int){ int }
    }
    t2: (struct){
      a!: (int){ int }
    }
  }
  unify: (struct){
    t1: (struct){
      p1: (struct){
        a: (int){ int }
      }
      p2: (struct){
        a: (int){ int }
      }
    }
    t2: (struct){
      p1: (struct){
        a!: (int){ int }
      }
      p2: (struct){
        a!: (int){ int }
      }
    }
  }
  #Def: (#struct){
    t1: (#struct){
      a!: (int){ int }
    }
  }
  allowed: (_|_){
    // [eval]
    issue2306: (_|_){
      // [eval]
      #A: (_|_){
        // [eval]
        a!: (_|_){
          // [eval] allowed.issue2306.#A.a: field not allowed:
          //     ./in.cue:34:6
          //     ./in.cue:35:6
          //     ./in.cue:37:6
        }
        b!: (int){ int }
      }
      #B: (#struct){
        b!: (int){ int }
      }
    }
  }
  reference: (struct){
    case1: (struct){
      #Foo: (#struct){
        a!: (int){ int }
      }
      b: (int){ int }
    }
    toWithinDefinition: (struct){
      b: (int){ int }
    }
    toFieldFromDefinition: (struct){
      b: (#struct){
        a!: (int){ int }
      }
      c: (int){ int }
    }
    toNonDefinition: (struct){
      x: (struct){
        y!: (_){ _ }
      }
      b: (_){ _ }
    }
    toConcrete: (struct){
      a!: (int){ 1 }
      b: (int){ 2 }
    }
  }
  #Foo: (#struct){
    a!: (int){ int }
  }
}
