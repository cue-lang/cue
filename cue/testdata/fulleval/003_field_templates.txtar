#name: field templates
#evalFull
-- in.cue --
a: {
	{[name=_]: int}
	k: 1
}
b: {
	{[X=_]: {x: 0, y: *1 | int}}
	v: {}
	w: {y: 0}
}
b: {[y=_]: {}} // TODO: allow different name
c: {
	{[Name=_]: {name: Name, y: 1}}
	foo: {}
	bar: _
}
-- out/compile --
--- in.cue
{
  a: {
    {
      [_]: int
    }
    k: 1
  }
  b: {
    {
      [_]: {
        x: 0
        y: (*1|int)
      }
    }
    v: {}
    w: {
      y: 0
    }
  }
  b: {
    [_]: {}
  }
  c: {
    {
      [_]: {
        name: 〈1;-〉
        y: 1
      }
    }
    foo: {}
    bar: _
  }
}
-- out/eval/stats --
Leaks:  0
Freed:  21
Reused: 15
Allocs: 6
Retain: 0

Unifications: 17
Conjuncts:    33
Disjuncts:    21
-- out/eval --
(struct){
  a: (struct){
    k: (int){ 1 }
  }
  b: (struct){
    v: (struct){
      x: (int){ 0 }
      y: (int){ |(*(int){ 1 }, (int){ int }) }
    }
    w: (struct){
      y: (int){ 0 }
      x: (int){ 0 }
    }
  }
  c: (struct){
    foo: (struct){
      name: (string){ "foo" }
      y: (int){ 1 }
    }
    bar: (struct){
      name: (string){ "bar" }
      y: (int){ 1 }
    }
  }
}
