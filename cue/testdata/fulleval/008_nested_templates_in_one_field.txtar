#name: nested templates in one field
#evalFull
-- in.cue --
a: [A=string]: b: [B=string]: {
	name: A
	kind: B
}
a: "A": b: "B": _
a: "C": b: "D": _
a: "EE": b: "FF": {c: "bar"}
-- out/compile --
--- in.cue
{
  a: {
    [string]: {
      b: {
        [string]: {
          name: 〈3;-〉
          kind: 〈1;-〉
        }
      }
    }
  }
  a: {
    A: {
      b: {
        B: _
      }
    }
  }
  a: {
    C: {
      b: {
        D: _
      }
    }
  }
  a: {
    EE: {
      b: {
        FF: {
          c: "bar"
        }
      }
    }
  }
}
-- out/eval/stats --
Leaks:  0
Freed:  18
Reused: 12
Allocs: 6
Retain: 0

Unifications: 18
Conjuncts:    30
Disjuncts:    18
-- out/eval --
(struct){
  a: (struct){
    A: (struct){
      b: (struct){
        B: (struct){
          name: (string){ "A" }
          kind: (string){ "B" }
        }
      }
    }
    C: (struct){
      b: (struct){
        D: (struct){
          name: (string){ "C" }
          kind: (string){ "D" }
        }
      }
    }
    EE: (struct){
      b: (struct){
        FF: (struct){
          c: (string){ "bar" }
          name: (string){ "EE" }
          kind: (string){ "FF" }
        }
      }
    }
  }
}
