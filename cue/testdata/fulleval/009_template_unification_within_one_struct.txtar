#name: template unification within one struct
#evalFull
-- in.cue --
a: {
	{[A=string]: {name: A}}

	// TODO: allow duplicate alias here
	{[X=string]: {kind: X}}
}
a: "A": _
a: "C": _
a: "E": {c: "bar"}
-- out/compile --
--- in.cue
{
  a: {
    {
      [string]: {
        name: 〈1;-〉
      }
    }
    {
      [string]: {
        kind: 〈1;-〉
      }
    }
  }
  a: {
    A: _
  }
  a: {
    C: _
  }
  a: {
    E: {
      c: "bar"
    }
  }
}
-- out/eval --
(struct){
  a: (struct){
    A: (struct){
      name: (string){ "A" }
      kind: (string){ "A" }
    }
    C: (struct){
      name: (string){ "C" }
      kind: (string){ "C" }
    }
    E: (struct){
      c: (string){ "bar" }
      name: (string){ "E" }
      kind: (string){ "E" }
    }
  }
}
