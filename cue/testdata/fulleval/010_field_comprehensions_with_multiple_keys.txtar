# DO NOT EDIT; generated by go run testdata/gen.go
#
#name: field comprehensions with multiple keys
#evalFull
-- in.cue --

for x in [
	{a: "A", b: "B"},
	{a: "C", b: "D"},
	{a: "E", b: "F"},
] {
	a: "\(x.a)": b: "\(x.b)": x
}

for x in [
	{a: "A", b: "B"},
	{a: "C", b: "D"},
	{a: "E", b: "F"},
] {
	"\(x.a)": "\(x.b)": x
}
-- out/def --
E: {
	F: x
}
a: {
	E: {
		b: {
			F: x
		}
	}
	A: {
		b: {
			B: x
		}
	}
	C: {
		b: {
			D: x
		}
	}
}
A: {
	B: x
}
C: {
	D: x
}
-- out/export --
E: {
	F: {
		a: "E"
		b: "F"
	}
}
a: {
	E: {
		b: {
			F: {
				a: "E"
				b: "F"
			}
		}
	}
	A: {
		b: {
			B: {
				a: "A"
				b: "B"
			}
		}
	}
	C: {
		b: {
			D: {
				a: "C"
				b: "D"
			}
		}
	}
}
A: {
	B: {
		a: "A"
		b: "B"
	}
}
C: {
	D: {
		a: "C"
		b: "D"
	}
}
-- out/yaml --
E:
  F:
    a: E
    b: F
a:
  E:
    b:
      F:
        a: E
        b: F
  A:
    b:
      B:
        a: A
        b: B
  C:
    b:
      D:
        a: C
        b: D
A:
  B:
    a: A
    b: B
C:
  D:
    a: C
    b: D
-- out/json --
{"E":{"F":{"a":"E","b":"F"}},"a":{"E":{"b":{"F":{"a":"E","b":"F"}}},"A":{"b":{"B":{"a":"A","b":"B"}}},"C":{"b":{"D":{"a":"C","b":"D"}}}},"A":{"B":{"a":"A","b":"B"}},"C":{"D":{"a":"C","b":"D"}}}
-- out/legacy-debug --
<0>{E: <1>{F: <2>{a: "E", b: "F"}}, a: <3>{E: <4>{b: <5>{F: <6>{a: "E", b: "F"}}}, A: <7>{b: <8>{B: <9>{a: "A", b: "B"}}}, C: <10>{b: <11>{D: <12>{a: "C", b: "D"}}}}, A: <13>{B: <14>{a: "A", b: "B"}}, C: <15>{D: <16>{a: "C", b: "D"}}}
-- out/compile --
--- in.cue
{
  for _, x in [
    {
      a: "A"
      b: "B"
    },
    {
      a: "C"
      b: "D"
    },
    {
      a: "E"
      b: "F"
    },
  ] {
    a: {
      "\(〈2;x〉.a)": {
        b: {
          "\(〈4;x〉.b)": 〈4;x〉
        }
      }
    }
  }
  for _, x in [
    {
      a: "A"
      b: "B"
    },
    {
      a: "C"
      b: "D"
    },
    {
      a: "E"
      b: "F"
    },
  ] {
    "\(〈1;x〉.a)": {
      "\(〈2;x〉.b)": 〈2;x〉
    }
  }
}
-- out/eval/stats --
Leaks:  20
Freed:  29
Reused: 25
Allocs: 24
Retain: 62

Unifications: 49
Conjuncts:    48
Disjuncts:    67
-- out/eval --
(struct){
  a: (struct){
    A: (struct){
      b: (struct){
        B: (struct){
          a: (string){ "A" }
          b: (string){ "B" }
        }
      }
    }
    C: (struct){
      b: (struct){
        D: (struct){
          a: (string){ "C" }
          b: (string){ "D" }
        }
      }
    }
    E: (struct){
      b: (struct){
        F: (struct){
          a: (string){ "E" }
          b: (string){ "F" }
        }
      }
    }
  }
  A: (struct){
    B: (struct){
      a: (string){ "A" }
      b: (string){ "B" }
    }
  }
  C: (struct){
    D: (struct){
      a: (string){ "C" }
      b: (string){ "D" }
    }
  }
  E: (struct){
    F: (struct){
      a: (string){ "E" }
      b: (string){ "F" }
    }
  }
}
