#name: field comprehensions with multiple keys
#evalFull
-- in.cue --

for x in [
	{a: "A", b: "B"},
	{a: "C", b: "D"},
	{a: "E", b: "F"},
] {
	a: "\(x.a)": b: "\(x.b)": x
}

for x in [
	{a: "A", b: "B"},
	{a: "C", b: "D"},
	{a: "E", b: "F"},
] {
	"\(x.a)": "\(x.b)": x
}
-- out/compile --
--- in.cue
{
  for _, x in [
    {
      a: "A"
      b: "B"
    },
    {
      a: "C"
      b: "D"
    },
    {
      a: "E"
      b: "F"
    },
  ] {
    a: {
      "\(〈2;x〉.a)": {
        b: {
          "\(〈4;x〉.b)": 〈4;x〉
        }
      }
    }
  }
  for _, x in [
    {
      a: "A"
      b: "B"
    },
    {
      a: "C"
      b: "D"
    },
    {
      a: "E"
      b: "F"
    },
  ] {
    "\(〈1;x〉.a)": {
      "\(〈2;x〉.b)": 〈2;x〉
    }
  }
}
-- out/eval --
(struct){
  a: (struct){
    A: (struct){
      b: (struct){
        B: (struct){
          a: (string){ "A" }
          b: (string){ "B" }
        }
      }
    }
    C: (struct){
      b: (struct){
        D: (struct){
          a: (string){ "C" }
          b: (string){ "D" }
        }
      }
    }
    E: (struct){
      b: (struct){
        F: (struct){
          a: (string){ "E" }
          b: (string){ "F" }
        }
      }
    }
  }
  A: (struct){
    B: (struct){
      a: (string){ "A" }
      b: (string){ "B" }
    }
  }
  C: (struct){
    D: (struct){
      a: (string){ "C" }
      b: (string){ "D" }
    }
  }
  E: (struct){
    F: (struct){
      a: (string){ "E" }
      b: (string){ "F" }
    }
  }
}
