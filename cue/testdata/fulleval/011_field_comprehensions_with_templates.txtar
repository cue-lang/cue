#name: field comprehensions with templates
#evalFull
-- in.cue --
num: 1
a: {
	if num < 5 {
		[A=string]: [B=string]: {
			name: A
			kind: B
		}
	}
}
a: b: c: d: "bar"
-- out/compile --
--- in.cue
{
  num: 1
  a: {
    if (〈1;num〉 < 5) {
      [string]: {
        [string]: {
          name: 〈2;-〉
          kind: 〈1;-〉
        }
      }
    }
  }
  a: {
    b: {
      c: {
        d: "bar"
      }
    }
  }
}
-- out/eval/stats --
Leaks:  0
Freed:  8
Reused: 3
Allocs: 5
Retain: 0

Unifications: 8
Conjuncts:    12
Disjuncts:    8

MisalignedConjunct: 2

NumCloseIDs: 1
-- out/eval --
(struct){
  num: (int){ 1 }
  a: (struct){
    b: (struct){
      c: (struct){
        d: (string){ "bar" }
        name: (string){ "b" }
        kind: (string){ "c" }
      }
    }
  }
}
