#name: cross-dependent comprehension
#evalFull
-- in.cue --
#a: {
	if b {
		c: 4
	}
	b: bool
}
x: (#a & {b: true}) & {c: 4}
y: x
-- out/compile --
--- in.cue
{
  #a: {
    if 〈0;b〉 {
      c: 4
    }
    b: bool
  }
  x: ((〈0;#a〉 & {
    b: true
  }) & {
    c: 4
  })
  y: 〈0;x〉
}
-- out/evalalpha --
(struct){
  #a: (_|_){
    // [incomplete] #a: incomplete bool: bool:
    //     ./in.cue:5:5
    b: (bool){ bool }
  }
  x: (#struct){
    b: (bool){ true }
    c: (int){ 4 }
  }
  y: ~(x)
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -5,11 +5,8 @@
     b: (bool){ bool }
   }
   x: (#struct){
-    c: (int){ 4 }
-    b: (bool){ true }
-  }
-  y: (#struct){
-    c: (int){ 4 }
-    b: (bool){ true }
-  }
+    b: (bool){ true }
+    c: (int){ 4 }
+  }
+  y: ~(x)
 }
