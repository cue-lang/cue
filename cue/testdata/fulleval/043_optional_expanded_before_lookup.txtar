#name: optional expanded before lookup
#evalFull
-- in.cue --
test: [ID=_]: {
	name: ID
}

test: A: {
	field1: "1"
	field2: "2"
}

B: test.A & {}
-- out/compile --
--- in.cue
{
  test: {
    [_]: {
      name: 〈1;-〉
    }
  }
  test: {
    A: {
      field1: "1"
      field2: "2"
    }
  }
  B: (〈0;test〉.A & {})
}
-- out/eval --
(struct){
  test: (struct){
    A: (struct){
      field1: (string){ "1" }
      field2: (string){ "2" }
      name: (string){ "A" }
    }
  }
  B: (struct){
    field1: (string){ "1" }
    field2: (string){ "2" }
    name: (string){ "A" }
  }
}
