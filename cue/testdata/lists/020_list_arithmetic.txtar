#name: list arithmetic
#evalPartial
-- in.cue --
l0: 3 * [1, 2, 3]
l1: 0 * [1, 2, 3]
l2: 10 * []
l6: 3 * [...int]
l7: 3 * [1, ...int]
l8: 3 * [1, 2, ...int]

s0:  [] + []
s1:  [1] + []
s2:  [] + [2]
s3:  [1] + [2]
s4:  [1, 2] + []
s5:  [] + [1, 2]
s6:  [1] + [1, 2]
s7:  [1, 2] + [1]
s8:  [1, 2] + [1, 2]
s9:  [] + [...]
s10: [1] + [...]
s11: [] + [2, ...]
s12: [1] + [2, ...]
s13: [1, 2] + [...]
s14: [] + [1, 2, ...]
s15: [1] + [1, 2, ...]
s16: [1, 2] + [1, ...]
s17: [1, 2] + [1, 2, ...]

s18: [...] + []
s19: [1, ...] + []
s20: [...] + [2]
s21: [1, ...] + [2]
s22: [1, 2, ...] + []
s23: [...] + [1, 2]
s24: [1, ...] + [1, 2]
s25: [1, 2, ...] + [1]
s26: [1, 2, ...] + [1, 2]
s27: [...] + [...]
s28: [1, ...] + [...]
s29: [...] + [2, ...]
s30: [1, ...] + [2, ...]
s31: [1, 2, ...] + [...]
s32: [...] + [1, 2, ...]
s33: [1, ...] + [1, 2, ...]
s34: [1, 2, ...] + [1, ...]
s35: [1, 2, ...] + [1, 2, ...]
-- out/def --
l0: [1, 2, 3, 1, 2, 3, 1, 2, 3]
l1: []
l2: []
l3: <=2 * []
l4: <=2 * [int]
l5: <=2 * (int * [int])
l6: []
l7: [1, 1, 1]
l8: [1, 2, 1, 2, 1, 2]
s0: []
s1: [1]
s2: [2]
s3: [1, 2]
s4: [1, 2]
s5: [1, 2]
s6: [1, 1, 2]
s7: [1, 2, 1]
s8: [1, 2, 1, 2]
s9: []
s10: [1]
s11: [2]
s12: [1, 2]
s13: [1, 2]
s14: [1, 2]
s15: [1, 1, 2]
s16: [1, 2, 1]
s17: [1, 2, 1, 2]
s18: []
s19: [1]
s20: [2]
s21: [1, 2]
s22: [1, 2]
s23: [1, 2]
s24: [1, 1, 2]
s25: [1, 2, 1]
s26: [1, 2, 1, 2]
s27: []
s28: [1]
s29: [2]
s30: [1, 2]
s31: [1, 2]
s32: [1, 2]
s33: [1, 1, 2]
s34: [1, 2, 1]
s35: [1, 2, 1, 2]
-- out/legacy-debug --
<0>{l0: [1,2,3,1,2,3,1,2,3], l1: [], l2: [], l3: (<=2 * []), l4: (<=2 * [int]), l5: (<=2 * (int * [int])), l6: [], l7: [1,1,1], l8: [1,2,1,2,1,2], s0: [], s1: [1], s2: [2], s3: [1,2], s4: [1,2], s5: [1,2], s6: [1,1,2], s7: [1,2,1], s8: [1,2,1,2], s9: [], s10: [1], s11: [2], s12: [1,2], s13: [1,2], s14: [1,2], s15: [1,1,2], s16: [1,2,1], s17: [1,2,1,2], s18: [], s19: [1], s20: [2], s21: [1,2], s22: [1,2], s23: [1,2], s24: [1,1,2], s25: [1,2,1], s26: [1,2,1,2], s27: [], s28: [1], s29: [2], s30: [1,2], s31: [1,2], s32: [1,2], s33: [1,1,2], s34: [1,2,1], s35: [1,2,1,2]}
-- out/compile --
--- in.cue
{
  l0: (3 * [
    1,
    2,
    3,
  ])
  l1: (0 * [
    1,
    2,
    3,
  ])
  l2: (10 * [])
  l6: (3 * [
    ...int,
  ])
  l7: (3 * [
    1,
    ...int,
  ])
  l8: (3 * [
    1,
    2,
    ...int,
  ])
  s0: ([] + [])
  s1: ([
    1,
  ] + [])
  s2: ([] + [
    2,
  ])
  s3: ([
    1,
  ] + [
    2,
  ])
  s4: ([
    1,
    2,
  ] + [])
  s5: ([] + [
    1,
    2,
  ])
  s6: ([
    1,
  ] + [
    1,
    2,
  ])
  s7: ([
    1,
    2,
  ] + [
    1,
  ])
  s8: ([
    1,
    2,
  ] + [
    1,
    2,
  ])
  s9: ([] + [
    ...,
  ])
  s10: ([
    1,
  ] + [
    ...,
  ])
  s11: ([] + [
    2,
    ...,
  ])
  s12: ([
    1,
  ] + [
    2,
    ...,
  ])
  s13: ([
    1,
    2,
  ] + [
    ...,
  ])
  s14: ([] + [
    1,
    2,
    ...,
  ])
  s15: ([
    1,
  ] + [
    1,
    2,
    ...,
  ])
  s16: ([
    1,
    2,
  ] + [
    1,
    ...,
  ])
  s17: ([
    1,
    2,
  ] + [
    1,
    2,
    ...,
  ])
  s18: ([
    ...,
  ] + [])
  s19: ([
    1,
    ...,
  ] + [])
  s20: ([
    ...,
  ] + [
    2,
  ])
  s21: ([
    1,
    ...,
  ] + [
    2,
  ])
  s22: ([
    1,
    2,
    ...,
  ] + [])
  s23: ([
    ...,
  ] + [
    1,
    2,
  ])
  s24: ([
    1,
    ...,
  ] + [
    1,
    2,
  ])
  s25: ([
    1,
    2,
    ...,
  ] + [
    1,
  ])
  s26: ([
    1,
    2,
    ...,
  ] + [
    1,
    2,
  ])
  s27: ([
    ...,
  ] + [
    ...,
  ])
  s28: ([
    1,
    ...,
  ] + [
    ...,
  ])
  s29: ([
    ...,
  ] + [
    2,
    ...,
  ])
  s30: ([
    1,
    ...,
  ] + [
    2,
    ...,
  ])
  s31: ([
    1,
    2,
    ...,
  ] + [
    ...,
  ])
  s32: ([
    ...,
  ] + [
    1,
    2,
    ...,
  ])
  s33: ([
    1,
    ...,
  ] + [
    1,
    2,
    ...,
  ])
  s34: ([
    1,
    2,
    ...,
  ] + [
    1,
    ...,
  ])
  s35: ([
    1,
    2,
    ...,
  ] + [
    1,
    2,
    ...,
  ])
}
-- out/eval/stats --
Leaks:  198
Freed:  133
Reused: 130
Allocs: 201
Retain: 390

Unifications: 331
Conjuncts:    475
Disjuncts:    253
-- out/eval --
(struct){
  l0: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 3 }
    3: (int){ 1 }
    4: (int){ 2 }
    5: (int){ 3 }
    6: (int){ 1 }
    7: (int){ 2 }
    8: (int){ 3 }
  }
  l1: (#list){
  }
  l2: (#list){
  }
  l6: (#list){
  }
  l7: (#list){
    0: (int){ 1 }
    1: (int){ 1 }
    2: (int){ 1 }
  }
  l8: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
    3: (int){ 2 }
    4: (int){ 1 }
    5: (int){ 2 }
  }
  s0: (#list){
  }
  s1: (#list){
    0: (int){ 1 }
  }
  s2: (#list){
    0: (int){ 2 }
  }
  s3: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s4: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s5: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s6: (#list){
    0: (int){ 1 }
    1: (int){ 1 }
    2: (int){ 2 }
  }
  s7: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
  }
  s8: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
    3: (int){ 2 }
  }
  s9: (#list){
  }
  s10: (#list){
    0: (int){ 1 }
  }
  s11: (#list){
    0: (int){ 2 }
  }
  s12: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s13: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s14: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s15: (#list){
    0: (int){ 1 }
    1: (int){ 1 }
    2: (int){ 2 }
  }
  s16: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
  }
  s17: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
    3: (int){ 2 }
  }
  s18: (#list){
  }
  s19: (#list){
    0: (int){ 1 }
  }
  s20: (#list){
    0: (int){ 2 }
  }
  s21: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s22: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s23: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s24: (#list){
    0: (int){ 1 }
    1: (int){ 1 }
    2: (int){ 2 }
  }
  s25: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
  }
  s26: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
    3: (int){ 2 }
  }
  s27: (#list){
  }
  s28: (#list){
    0: (int){ 1 }
  }
  s29: (#list){
    0: (int){ 2 }
  }
  s30: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s31: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s32: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
  }
  s33: (#list){
    0: (int){ 1 }
    1: (int){ 1 }
    2: (int){ 2 }
  }
  s34: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
  }
  s35: (#list){
    0: (int){ 1 }
    1: (int){ 2 }
    2: (int){ 1 }
    3: (int){ 2 }
  }
}
