#evalPartial
-- in.cue --
a: _
b: a
a: {d: 1, d: _}
b: _
-- out/compile --
--- in.cue
{
  a: _
  b: 〈0;a〉
  a: {
    d: 1
    d: _
  }
  b: _
}
-- out/evalalpha --
(struct){
  a: (struct){
    d: (int){ 1 }
  }
  b: ~(a)
}
-- diff/-out/evalalpha<==>+out/eval --
diff old new
--- old
+++ new
@@ -2,7 +2,5 @@
   a: (struct){
     d: (int){ 1 }
   }
-  b: (struct){
-    d: (int){ 1 }
-  }
+  b: ~(a)
 }
