# DO NOT EDIT; generated by go run testdata/gen.go
#
#name: JSON
#evalPartial
-- in.cue --
a="a": 3
b:     a
o: {"a\nb": 2} // TODO: use $ for root?
c: o["a\nb"]
-- out/def --
a: 3
b: 3
o: {
	"a\nb": 2
}
c: 2
-- out/export --
a: 3
b: 3
o: {
	"a\nb": 2
}
c: 2
-- out/yaml --
a: 3
b: 3
o:
  ? |-
    a
    b
  : 2
c: 2
-- out/json --
{"a":3,"b":3,"o":{"a\nb":2},"c":2}
-- out/legacy-debug --
<0>{a: 3, b: 3, o: <1>{"a\nb": 2}, c: 2}
-- out/compile --
--- in.cue
{
  a: 3
  b: 〈0;a〉
  o: {
    "a\nb": 2
  }
  c: 〈0;o〉["a\nb"]
}
-- out/eval/stats --
Leaks:  0
Freed:  6
Reused: 3
Allocs: 3
Retain: 0

Unifications: 6
Conjuncts:    8
Disjuncts:    6
-- out/eval --
(struct){
  a: (int){ 3 }
  b: (int){ 3 }
  o: (struct){
    "a\nb": (int){ 2 }
  }
  c: (int){ 2 }
}
