#name: optional field unification
#evalPartial
-- in.cue --
a: {foo?: string}
b: {foo: "foo"}
c: a & b
d: a & {"foo"?: "bar"}

g1:       1
"g\(1)"?: 1
"g\(2)"?: 2
-- out/compile --
--- in.cue
{
  a: {
    foo?: string
  }
  b: {
    foo: "foo"
  }
  c: (〈0;a〉 & 〈0;b〉)
  d: (〈0;a〉 & {
    foo?: "bar"
  })
  g1: 1
  "g\(1)"?: 1
  "g\(2)"?: 2
}
-- out/eval --
(struct){
  a: (struct){
    foo?: (string){ string }
  }
  b: (struct){
    foo: (string){ "foo" }
  }
  c: (struct){
    foo: (string){ "foo" }
  }
  d: (struct){
    foo?: (string){ "bar" }
  }
  g1: (int){ 1 }
  g2?: (int){ 2 }
}
