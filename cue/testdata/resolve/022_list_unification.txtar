#name: list unification
#evalPartial
-- in.cue --
a: {l: ["foo", v], v: l[1]}
b: a & {l: [_, "bar"]}
-- out/compile --
--- in.cue
{
  a: {
    l: [
      "foo",
      〈1;v〉,
    ]
    v: 〈0;l〉[1]
  }
  b: (〈0;a〉 & {
    l: [
      _,
      "bar",
    ]
  })
}
-- out/eval --
(struct){
  a: (struct){
    l: (#list){
      0: (string){ "foo" }
      1: (_){ _ }
    }
    v: (_){ _ }
  }
  b: (struct){
    l: (#list){
      0: (string){ "foo" }
      1: (string){ "bar" }
    }
    v: (string){ "bar" }
  }
}
