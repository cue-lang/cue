{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "985c5aee_cb913224",
        "filename": "cue/types.go",
        "patchSetId": 5
      },
      "lineNbr": 723,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-03-11T13:46:58Z",
      "side": 1,
      "message": "I wonder if this is not a function of not dereferencing. It seems that calling v \u003d v.DerefValue() before calling default is probably safer. This will then do the right thing for d \u003d\u003d v.v.  This way it will also work for structure shared nodes.\n\nNote that V2 did not have structure sharing and did not forward disjunction nodes.\n\nI\u0027m still a bit fuzzy about the IsConstraint. Is that not an artifact of structure sharing? I wonder if you do the above the need to add check will go.",
      "revId": "db089843f38392712a9818f4e9a28054144859ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3df1d12b_2b6c9d7d",
        "filename": "cue/types.go",
        "patchSetId": 5
      },
      "lineNbr": 723,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-03-11T14:42:34Z",
      "side": 1,
      "message": "Changing line 719 to `d :\u003d v.v.DerefValue().Default()` doesn\u0027t seem to alter anything. Explicitly testing for `isDisjunction || v.v.IsConstraint()` is still required for the tests to pass.",
      "parentUuid": "985c5aee_cb913224",
      "revId": "db089843f38392712a9818f4e9a28054144859ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9afd8df3_8667266b",
        "filename": "cue/types.go",
        "patchSetId": 5
      },
      "lineNbr": 723,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-03-12T14:43:12Z",
      "side": 1,
      "message": "Also, the first line of the implementation of Default() does a DerefValue().",
      "parentUuid": "3df1d12b_2b6c9d7d",
      "revId": "db089843f38392712a9818f4e9a28054144859ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae479ff_d0c160c5",
        "filename": "cue/types.go",
        "patchSetId": 5
      },
      "lineNbr": 723,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-03-16T12:55:35Z",
      "side": 1,
      "message": "FTR, the correct implementation here is considered to be\n\n```\nfunc (v Value) Default() (Value, bool) {\n    if v.v \u003d\u003d nil {\n        return v, false\n    }\n\n    x :\u003d v.v.DerefValue()\n    d :\u003d x.Default()\n    if d \u003d\u003d x {\n        return v, false\n    }\n    return makeValue(v.idx, d, v.parent_), true\n}\n```\n\nHowever, doing this breaks Decode tests. I\u0027ve been unable to figure out why.",
      "parentUuid": "9afd8df3_8667266b",
      "revId": "db089843f38392712a9818f4e9a28054144859ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b410f8d_596c6bf2",
        "filename": "cue/types.go",
        "patchSetId": 5
      },
      "lineNbr": 723,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-03-17T11:52:13Z",
      "side": 1,
      "message": "Ah, the pointer comparison should only be used to determine whether the value is a default. To see whether we can return the original value, we should still check against this original value:\n\n\tx :\u003d v.v.DerefValue()\n\td :\u003d x.Default()\n\tisDefault :\u003d d !\u003d x\n\tif d \u003d\u003d v.v {\n\t\treturn v, false\n\t}\n\treturn makeValue(v.idx, d, v.parent_), isDefault\n\nA better approach, perhaps, would be to have the getNum method dereference. But for now this seems more robust (to do as well) as functions generally rely on Default to get a fully cleaned scalar value.",
      "parentUuid": "4ae479ff_d0c160c5",
      "revId": "db089843f38392712a9818f4e9a28054144859ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63b0351f_9fe633ae",
        "filename": "cue/types_test.go",
        "patchSetId": 5
      },
      "lineNbr": 1773,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-03-11T11:28:11Z",
      "side": 1,
      "message": "Before this fix, this test would not find a default in v2, but it would in v3. The change to Default() ensures this does not find a default for v3 either.",
      "revId": "db089843f38392712a9818f4e9a28054144859ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88adb4e6_c30e098d",
        "filename": "cue/types_test.go",
        "patchSetId": 5
      },
      "lineNbr": 1779,
      "author": {
        "id": 1038145
      },
      "writtenOn": "2025-03-11T11:28:11Z",
      "side": 1,
      "message": "In v2, Default() would return true here. Thus the change to Default() to explicitly allow Constraints, so the behaviour is maintained into v3.",
      "revId": "db089843f38392712a9818f4e9a28054144859ad",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}