{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "18122eb8_5b255024",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-02-02T12:34:50Z",
      "side": 1,
      "message": "LGTM in principle with one query, thanks.",
      "revId": "e629887d3331eff46effd734c562b11c83ffc40d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea0e44f6_4f9a132a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-02-19T13:48:59Z",
      "side": 1,
      "message": "FYI I wouldn\u0027t worry too much about the Go docs being runnable, because we are able to land a who load of docs on alpha.cuelang.org, like https://review.gerrithub.io/c/cue-lang/cuelang.org/+/1170263. Preview (of the proof of concept) here:\n\nhttps://cl-1170263-48--cue-cls.netlify.app/docs/howto/go-api-basics/",
      "revId": "e629887d3331eff46effd734c562b11c83ffc40d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef2c828d_a2790dce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-02-26T08:53:59Z",
      "side": 1,
      "message": "Good point. I would make it very clear when howtos are mirrors of Go examples, just so we can keep them up to date via e.g. `go generate` or some other automation rather than maintaining them twice and cause drift.",
      "parentUuid": "ea0e44f6_4f9a132a",
      "revId": "e629887d3331eff46effd734c562b11c83ffc40d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c59cb47f_89011220",
        "filename": "cue/load/testdata/testmod/example/example.cue",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-02-02T12:34:50Z",
      "side": 1,
      "message": "Doesn\u0027t this external file mean the example won\u0027t work in pkg.go.dev because it\u0027s not self-contained (as per the first CL in this chain). Or is that OK in this case?",
      "revId": "e629887d3331eff46effd734c562b11c83ffc40d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efba4b17_10024b99",
        "filename": "cue/load/testdata/testmod/example/example.cue",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-02-02T12:38:36Z",
      "side": 1,
      "message": "Indeed it won\u0027t work on the playground. I thought about this while I was writing the example, but forgot to make a note of it or rethink it.\n\ncue/load doesn\u0027t support io/fs, and using an Overlay would make the example rather complex and not really reflect what most users will want to do. So I think the only way to make it work on the playground would be to use os.MkdirTemp to create go.mod and example.cue files by hand.\n\nThe alternative would be to leave as-is and make a note that the example works when run locally, but not on pkgsite. I still think the example is useful on its own even in this semi-broken state, e.g. https://pkg.go.dev/cuelang.org/go/cue/parser#example-ParseFile still shows you the expected output before you run it, and we still test the example as part of CI.\n\nI lean towards the first option but I\u0027m not sure given the extra boilerplate. Thoughts?",
      "parentUuid": "c59cb47f_89011220",
      "revId": "e629887d3331eff46effd734c562b11c83ffc40d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b538156_a94df035",
        "filename": "cue/load/testdata/testmod/example/example.cue",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-02-06T09:17:06Z",
      "side": 1,
      "message": "If it\u0027s not too much hassle, I think that the former option could work OK. Otherwise maybe just leave a TODO explaining that the example isn\u0027t runnable and why?",
      "parentUuid": "efba4b17_10024b99",
      "revId": "e629887d3331eff46effd734c562b11c83ffc40d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb580aa3_2c335d71",
        "filename": "cue/load/testdata/testmod/example/example.cue",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-02-26T08:53:59Z",
      "side": 1,
      "message": "I thought about this some more and decided against preparing the files on MkdirTemp via extra Go code. It would draw away from the real point of the example, cue/load, and the users most likely won\u0027t be loading CUE files from temporary directories.\n\nI also think it\u0027s not unreasonable for pkg.go.dev to support reading files from testdata, and I think it will at some point (https://github.com/golang/go/issues/45475).",
      "parentUuid": "5b538156_a94df035",
      "revId": "e629887d3331eff46effd734c562b11c83ffc40d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}