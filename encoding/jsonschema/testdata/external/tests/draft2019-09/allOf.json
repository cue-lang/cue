[
	{
		"description": "allOf",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{
					"properties": {
						"bar": {
							"type": "integer"
						}
					},
					"required": [
						"bar"
					]
				},
				{
					"properties": {
						"foo": {
							"type": "string"
						}
					},
					"required": [
						"foo"
					]
				}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "allOf",
				"data": {
					"foo": "baz",
					"bar": 2
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "mismatch second",
				"data": {
					"foo": "baz"
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "mismatch first",
				"data": {
					"bar": 2
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "wrong type",
				"data": {
					"foo": "baz",
					"bar": "quux"
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with base schema",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"properties": {
				"bar": {
					"type": "integer"
				}
			},
			"required": [
				"bar"
			],
			"allOf": [
				{
					"properties": {
						"foo": {
							"type": "string"
						}
					},
					"required": [
						"foo"
					]
				},
				{
					"properties": {
						"baz": {
							"type": "null"
						}
					},
					"required": [
						"baz"
					]
				}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "valid",
				"data": {
					"foo": "quux",
					"bar": 2,
					"baz": null
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "mismatch base schema",
				"data": {
					"foo": "quux",
					"baz": null
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "mismatch first allOf",
				"data": {
					"bar": 2,
					"baz": null
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "mismatch second allOf",
				"data": {
					"foo": "quux",
					"bar": 2
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "mismatch both",
				"data": {
					"bar": 2
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf simple types",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{
					"maximum": 30
				},
				{
					"minimum": 20
				}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "valid",
				"data": 25,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "mismatch one",
				"data": 35,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with boolean schemas, all true",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				true,
				true
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "any value is valid",
				"data": "foo",
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with boolean schemas, some false",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				true,
				false
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "any value is invalid",
				"data": "foo",
				"valid": false,
				"skip": {
					"v3": "unexpected success",
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with boolean schemas, all false",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				false,
				false
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "any value is invalid",
				"data": "foo",
				"valid": false,
				"skip": {
					"v3": "unexpected success",
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with one empty schema",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "any data is valid",
				"data": 1,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with two empty schemas",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{},
				{}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "any data is valid",
				"data": 1,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with the first empty schema",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{},
				{
					"type": "number"
				}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "number is valid",
				"data": 1,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "string is invalid",
				"data": "foo",
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf with the last empty schema",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{
					"type": "number"
				},
				{}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "number is valid",
				"data": 1,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "string is invalid",
				"data": "foo",
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "nested allOf, to check validation semantics",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{
					"allOf": [
						{
							"type": "null"
						}
					]
				}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "null is valid",
				"data": null,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "anything non-null is invalid",
				"data": 123,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "allOf combined with anyOf, oneOf",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"allOf": [
				{
					"multipleOf": 2
				}
			],
			"anyOf": [
				{
					"multipleOf": 3
				}
			],
			"oneOf": [
				{
					"multipleOf": 5
				}
			]
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "allOf: false, anyOf: false, oneOf: false",
				"data": 1,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "allOf: false, anyOf: false, oneOf: true",
				"data": 5,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "allOf: false, anyOf: true, oneOf: false",
				"data": 3,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "allOf: false, anyOf: true, oneOf: true",
				"data": 15,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "allOf: true, anyOf: false, oneOf: false",
				"data": 2,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "allOf: true, anyOf: false, oneOf: true",
				"data": 10,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "allOf: true, anyOf: true, oneOf: false",
				"data": 6,
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "allOf: true, anyOf: true, oneOf: true",
				"data": 30,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	}
]
