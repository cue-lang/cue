[
	{
		"description": "maxContains without contains is ignored",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"maxContains": 1
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "one item valid against lone maxContains",
				"data": [
					1
				],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "two items still valid against lone maxContains",
				"data": [
					1,
					2
				],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "maxContains with contains",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"contains": {
				"const": 1
			},
			"maxContains": 1
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "empty data",
				"data": [],
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "all elements match, valid maxContains",
				"data": [
					1
				],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "all elements match, invalid maxContains",
				"data": [
					1,
					1
				],
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "some elements match, valid maxContains",
				"data": [
					1,
					2
				],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "some elements match, invalid maxContains",
				"data": [
					1,
					2,
					1
				],
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "maxContains with contains, value with a decimal",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"contains": {
				"const": 1
			},
			"maxContains": 1.0
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "one element matches, valid maxContains",
				"data": [
					1
				],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "too many elements match, invalid maxContains",
				"data": [
					1,
					1
				],
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "minContains \u003c maxContains",
		"schema": {
			"$schema": "https://json-schema.org/draft/2019-09/schema",
			"contains": {
				"const": 1
			},
			"minContains": 1,
			"maxContains": 3
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "actual \u003c minContains \u003c maxContains",
				"data": [],
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "minContains \u003c actual \u003c maxContains",
				"data": [
					1,
					1
				],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "minContains \u003c maxContains \u003c actual",
				"data": [
					1,
					1,
					1,
					1
				],
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	}
]
