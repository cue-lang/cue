[
	{
		"description": "minimum validation",
		"schema": {
			"minimum": 1.1
		},
		"tests": [
			{
				"description": "above the minimum is valid",
				"data": 2.6,
				"valid": true
			},
			{
				"description": "boundary point is valid",
				"data": 1.1,
				"valid": true
			},
			{
				"description": "below the minimum is invalid",
				"data": 0.6,
				"valid": false
			},
			{
				"description": "ignores non-numbers",
				"data": "x",
				"valid": true
			}
		]
	},
	{
		"description": "minimum validation (explicit false exclusivity)",
		"schema": {
			"minimum": 1.1,
			"exclusiveMinimum": false
		},
		"tests": [
			{
				"description": "above the minimum is valid",
				"data": 2.6,
				"valid": true
			},
			{
				"description": "boundary point is valid",
				"data": 1.1,
				"valid": true,
				"skip": {
					"v2": "6 errors in empty disjunction:\nconflicting values 1.1 and [...] (mismatched types float and list):\n    generated.cue:2:1\n    generated.cue:2:31\n    instance.json:1:1\nconflicting values 1.1 and bool (mismatched types float and bool):\n    generated.cue:2:1\n    generated.cue:2:8\n    instance.json:1:1\nconflicting values 1.1 and null (mismatched types float and null):\n    generated.cue:2:1\n    instance.json:1:1\nconflicting values 1.1 and string (mismatched types float and string):\n    generated.cue:2:1\n    generated.cue:2:22\n    instance.json:1:1\nconflicting values 1.1 and {...} (mismatched types float and struct):\n    generated.cue:2:1\n    generated.cue:2:39\n    instance.json:1:1\ninvalid value 1.1 (out of bound \u003e1.1):\n    generated.cue:2:15\n    instance.json:1:1\n",
					"v3": "conflicting values 1.1 and [...] (mismatched types float and list):\n    generated.cue:2:31\n    instance.json:1:1\nconflicting values 1.1 and bool (mismatched types float and bool):\n    generated.cue:2:8\n    instance.json:1:1\nconflicting values 1.1 and null (mismatched types float and null):\n    generated.cue:2:1\n    instance.json:1:1\nconflicting values 1.1 and string (mismatched types float and string):\n    generated.cue:2:22\n    instance.json:1:1\nconflicting values 1.1 and {...} (mismatched types float and struct):\n    generated.cue:2:39\n    instance.json:1:1\ninvalid value 1.1 (out of bound \u003e1.1):\n    generated.cue:2:15\n    instance.json:1:1\n"
				}
			},
			{
				"description": "below the minimum is invalid",
				"data": 0.6,
				"valid": false
			},
			{
				"description": "ignores non-numbers",
				"data": "x",
				"valid": true
			}
		]
	},
	{
		"description": "exclusiveMinimum validation",
		"schema": {
			"minimum": 1.1,
			"exclusiveMinimum": true
		},
		"tests": [
			{
				"description": "above the minimum is still valid",
				"data": 1.2,
				"valid": true
			},
			{
				"description": "boundary point is invalid",
				"data": 1.1,
				"valid": false
			}
		]
	},
	{
		"description": "minimum validation with signed integer",
		"schema": {
			"minimum": -2
		},
		"tests": [
			{
				"description": "negative above the minimum is valid",
				"data": -1,
				"valid": true
			},
			{
				"description": "positive above the minimum is valid",
				"data": 0,
				"valid": true
			},
			{
				"description": "boundary point is valid",
				"data": -2,
				"valid": true
			},
			{
				"description": "boundary point with float is valid",
				"data": -2.0,
				"valid": true
			},
			{
				"description": "float below the minimum is invalid",
				"data": -2.0001,
				"valid": false
			},
			{
				"description": "int below the minimum is invalid",
				"data": -3,
				"valid": false
			},
			{
				"description": "ignores non-numbers",
				"data": "x",
				"valid": true
			}
		]
	}
]
