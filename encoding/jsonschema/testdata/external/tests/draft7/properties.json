[
	{
		"description": "object properties validation",
		"schema": {
			"properties": {
				"foo": {
					"type": "integer"
				},
				"bar": {
					"type": "string"
				}
			}
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "both properties present and valid is valid",
				"data": {
					"foo": 1,
					"bar": "baz"
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "one property invalid is invalid",
				"data": {
					"foo": 1,
					"bar": {}
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "both properties invalid is invalid",
				"data": {
					"foo": [],
					"bar": {}
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "doesn't invalidate other properties",
				"data": {
					"quux": []
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "ignores arrays",
				"data": [],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "ignores other non-objects",
				"data": 12,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "properties, patternProperties, additionalProperties interaction",
		"schema": {
			"properties": {
				"foo": {
					"type": "array",
					"maxItems": 3
				},
				"bar": {
					"type": "array"
				}
			},
			"patternProperties": {
				"f.o": {
					"minItems": 2
				}
			},
			"additionalProperties": {
				"type": "integer"
			}
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "property validates property",
				"data": {
					"foo": [
						1,
						2
					]
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "property invalidates property",
				"data": {
					"foo": [
						1,
						2,
						3,
						4
					]
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "patternProperty invalidates property",
				"data": {
					"foo": []
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "patternProperty validates nonproperty",
				"data": {
					"fxo": [
						1,
						2
					]
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "patternProperty invalidates nonproperty",
				"data": {
					"fxo": []
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "additionalProperty ignores property",
				"data": {
					"bar": []
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "additionalProperty validates others",
				"data": {
					"quux": 3
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "additionalProperty invalidates others",
				"data": {
					"quux": "foo"
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "properties with boolean schema",
		"schema": {
			"properties": {
				"foo": true,
				"bar": false
			}
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "no property present is valid",
				"data": {},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "only 'true' property present is valid",
				"data": {
					"foo": 1
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "only 'false' property present is invalid",
				"data": {
					"bar": 2
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "both properties present is invalid",
				"data": {
					"foo": 1,
					"bar": 2
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "properties with escaped characters",
		"schema": {
			"properties": {
				"foo\nbar": {
					"type": "number"
				},
				"foo\"bar": {
					"type": "number"
				},
				"foo\\bar": {
					"type": "number"
				},
				"foo\rbar": {
					"type": "number"
				},
				"foo\tbar": {
					"type": "number"
				},
				"foo\fbar": {
					"type": "number"
				}
			}
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "object with all numbers is valid",
				"data": {
					"foo\nbar": 1,
					"foo\"bar": 1,
					"foo\\bar": 1,
					"foo\rbar": 1,
					"foo\tbar": 1,
					"foo\fbar": 1
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "object with strings is invalid",
				"data": {
					"foo\nbar": "1",
					"foo\"bar": "1",
					"foo\\bar": "1",
					"foo\rbar": "1",
					"foo\tbar": "1",
					"foo\fbar": "1"
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "properties with null valued instance properties",
		"schema": {
			"properties": {
				"foo": {
					"type": "null"
				}
			}
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "allows null values",
				"data": {
					"foo": null
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	},
	{
		"description": "properties whose names are Javascript object property names",
		"comment": "Ensure JS implementations don't universally consider e.g. __proto__ to always be present in an object.",
		"schema": {
			"properties": {
				"__proto__": {
					"type": "number"
				},
				"toString": {
					"properties": {
						"length": {
							"type": "string"
						}
					}
				},
				"constructor": {
					"type": "number"
				}
			}
		},
		"skip": {
			"v3-roundtrip": "generation only supported in version https://json-schema.org/draft/2020-12/schema"
		},
		"tests": [
			{
				"description": "ignores arrays",
				"data": [],
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "ignores other non-objects",
				"data": 12,
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "none of the properties mentioned",
				"data": {},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "__proto__ not valid",
				"data": {
					"__proto__": "foo"
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "toString not valid",
				"data": {
					"toString": {
						"length": 37
					}
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "constructor not valid",
				"data": {
					"constructor": {
						"length": 37
					}
				},
				"valid": false,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			},
			{
				"description": "all present and valid",
				"data": {
					"__proto__": 12,
					"toString": {
						"length": "foo"
					},
					"constructor": 37
				},
				"valid": true,
				"skip": {
					"v3-roundtrip": "could not extract schema"
				}
			}
		]
	}
]
