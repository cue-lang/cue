-- in.cue --
import "math"

#mul: math.MultipleOf(5)

#neq: !=4

#exMin: >5
#exMax: <6

#int:     int64
#intNull: int64 | null

-- out/TestGenerateOpenAPI-v3/out.json --
{
   "openapi": "3.0.0",
   "info": {
      "title": "Generated by cue.",
      "version": "no version"
   },
   "paths": {},
   "components": {
      "schemas": {
         "exMax": {
            "type": "number",
            "maximum": 6,
            "exclusiveMaximum": true
         },
         "exMin": {
            "type": "number",
            "minimum": 5,
            "exclusiveMinimum": true
         },
         "int": {
            "type": "integer",
            "format": "int64"
         },
         "intNull": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807,
            "nullable": true
         },
         "mul": {
            "type": "number",
            "multipleOf": 5
         },
         "neq": {
            "type": "number",
            "not": {
               "allOf": [
                  {
                     "minimum": 4
                  },
                  {
                     "maximum": 4
                  }
               ]
            }
         }
      }
   }
}
-- diff/-out/TestGenerateOpenAPI-v3/out.json<==>+out/TestGenerateOpenAPI/out.json --
diff old new
--- old
+++ new
@@ -34,7 +34,7 @@
          "neq": {
             "type": "number",
             "not": {
-               "allOff": [
+               "allOf": [
                   {
                      "minimum": 4
                   },
-- out/TestGenerateOpenAPI-v3-noshare/out.json --
{
   "openapi": "3.0.0",
   "info": {
      "title": "Generated by cue.",
      "version": "no version"
   },
   "paths": {},
   "components": {
      "schemas": {
         "exMax": {
            "type": "number",
            "maximum": 6,
            "exclusiveMaximum": true
         },
         "exMin": {
            "type": "number",
            "minimum": 5,
            "exclusiveMinimum": true
         },
         "int": {
            "type": "integer",
            "format": "int64"
         },
         "intNull": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807,
            "nullable": true
         },
         "mul": {
            "type": "number",
            "multipleOf": 5
         },
         "neq": {
            "type": "number",
            "not": {
               "allOf": [
                  {
                     "minimum": 4
                  },
                  {
                     "maximum": 4
                  }
               ]
            }
         }
      }
   }
}
-- diff/-out/TestGenerateOpenAPI-v3-noshare/out.json<==>+out/TestGenerateOpenAPI/out.json --
diff old new
--- old
+++ new
@@ -34,7 +34,7 @@
          "neq": {
             "type": "number",
             "not": {
-               "allOff": [
+               "allOf": [
                   {
                      "minimum": 4
                   },
-- out/TestGenerateOpenAPI/out.json --
{
   "openapi": "3.0.0",
   "info": {
      "title": "Generated by cue.",
      "version": "no version"
   },
   "paths": {},
   "components": {
      "schemas": {
         "exMax": {
            "type": "number",
            "maximum": 6,
            "exclusiveMaximum": true
         },
         "exMin": {
            "type": "number",
            "minimum": 5,
            "exclusiveMinimum": true
         },
         "int": {
            "type": "integer",
            "format": "int64"
         },
         "intNull": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807,
            "nullable": true
         },
         "mul": {
            "type": "number",
            "multipleOf": 5
         },
         "neq": {
            "type": "number",
            "not": {
               "allOff": [
                  {
                     "minimum": 4
                  },
                  {
                     "maximum": 4
                  }
               ]
            }
         }
      }
   }
}
