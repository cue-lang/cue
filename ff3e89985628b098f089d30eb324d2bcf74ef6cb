{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aa9023c1_ef906983",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "module",
      "range": {
        "startLine": 7,
        "startChar": 40,
        "endLine": 7,
        "endChar": 45
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36b780b3_e275ac21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa9023c1_ef906983",
      "range": {
        "startLine": 7,
        "startChar": 40,
        "endLine": 7,
        "endChar": 45
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d7f720_6be3c06a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "perhaps mention that writing a local regression test for this is hard, as dependency modules only have versions as provided by a proxy, and deps replaced by a directory don\u0027t have module versions.\n\nalso \"module version\" rather than \"build version\".",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 49
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3d867b5_417f37f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36d7f720_6be3c06a",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 49
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34634324_fbf88cea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "SGTM, the only major thing left I see is that the hard-coded language version isn\u0027t what I expected to see",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02eb818d_9f032d77",
        "filename": "cmd/cue/cmd/testdata/script/modinit_without_version.txtar",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "module",
      "range": {
        "startLine": 1,
        "startChar": 48,
        "endLine": 1,
        "endChar": 53
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c1ccc34_f87f212f",
        "filename": "cmd/cue/cmd/testdata/script/modinit_without_version.txtar",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02eb818d_9f032d77",
      "range": {
        "startLine": 1,
        "startChar": 48,
        "endLine": 1,
        "endChar": 53
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6508c4d6_1e0ca9e7",
        "filename": "cmd/cue/cmd/version.go",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "you say 20 above but left 16 here? did you check that the output still looks OK?",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a2d88f5_6135e7f5",
        "filename": "cmd/cue/cmd/version.go",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Yeah, 20 is a holdover from when I had \"cue.language.version\" which seemed a bit too long.",
      "parentUuid": "6508c4d6_1e0ca9e7",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a4756e7_35ce3cf8",
        "filename": "cmd/cue/cmd/version.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "rename to moduleVersion as well, or just leave as cueVersion",
      "range": {
        "startLine": 85,
        "startChar": 5,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "817dcde8_81eb6947",
        "filename": "cmd/cue/cmd/version.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a4756e7_35ce3cf8",
      "range": {
        "startLine": 85,
        "startChar": 5,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "636e4ec2_608cf9a1",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "this should be v0.9.0 as discussed; we agreed it would only follow major versions and not alphas or any other pre-releases.",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b46ed2d6_d6138645",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "I had been thinking that it was still worth tracking (some) prerelease versions here, specifically the ones that add new features, because otherwise we can be in a situation where a binary can reject data created by another binary that\u0027s ostensibly using the same language version.\n\nThat said, given that this is all prerelease and hence inherently unstable, it\u0027s probably fine, so done.",
      "parentUuid": "636e4ec2_608cf9a1",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21c5417b_13ac4d4e",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T09:01:29Z",
      "side": 1,
      "message": "Just wanted to be on the same page in terms of what the language version should be and when we should bump it. We\u0027d discussed following the Go model of bumping to a new major version when feature development begins on master, so I\u0027d stick with that unless we discuss otherwise together with Paul and Marcel.",
      "parentUuid": "b46ed2d6_d6138645",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b816078_538826c4",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "`moduleVersionOnce` for consistency",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 15
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb171381_39d15701",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b816078_538826c4",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 15
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ca00f7_6537560b",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "leave a brief comment about when this can happen. from the godoc:\n\n\u003e The information is available only in binaries built with module support. \n\nso this could happen if the info was stripped or if some alternative toolchain was used for the build, I assume. but not with either of the supported build methods we have, i.e. `go install ./cmd/cue` or `go install cuelang.org/go/cmd/cue@version`.",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9277a958_487dcdda",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94ca00f7_6537560b",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e1a1f20_24586159",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "as far as I can tell this is backwards; if M1 is replaced by M2, we need to return M2, not M1.",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c6358a7_d53c4441",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Isn\u0027t that what this does? The doc comment in Module says:\n```\nReplace *Module // replaced by this module\n```\nwhich indicates to me that M1 is m here and M2 is m.Replace.\n\nI\u0027ll experiment to be sure.\n\nEdit: after experimentation, it does seem that this is doing the right thing.",
      "parentUuid": "9e1a1f20_24586159",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67a01ed_1e4e6687",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T09:01:29Z",
      "side": 1,
      "message": "Yes, when we are M1 and we are being replaced by M2, M1 should be m and M2 should be m.Replace. So we should return M2, not M1, because M1\u0027s version is not being used at all.\n\nSo with the logic below:\n\n```\nif m.Path \u003d\u003d cueModule {\n\treturn m\n}\nif m.Replace !\u003d nil \u0026\u0026 m.Replace.Path \u003d\u003d cueModule {\n\treturn m.Replace\n}\n```\n\nthis still seems backwards to me. `m.Path \u003d\u003d cueModule` will likely be true for M1, so we will return M1, not returning M2 in the scenario above.\n\nyou said you experimented with this and your code was working well, can you give some details? I\u0027m not sure you can easily test this properly until we push the code to master and resolve module versions via proxy.golang.org.\n\nI don\u0027t want to block the CL on this comment because the situation should be rare, but I reckon the logic isn\u0027t correct, so we might need to revisit it later.",
      "parentUuid": "2c6358a7_d53c4441",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad74d9b4_a7ae9c3f",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "can we make this \"language %s\" or \"lang %s\" for the sake of clarity? I slightly worry that on stable clients, both strings will often be the same (e.g. v0.10.0), so a server might mistakenly parse them the wrong way around and not notice for a while.",
      "range": {
        "startLine": 76,
        "startChar": 33,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7379b5c1_4706bf86",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad74d9b4_a7ae9c3f",
      "range": {
        "startLine": 76,
        "startChar": 33,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e9cc0f1_8e4c3aed",
        "filename": "internal/cueversion/version_test.go",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "TestModuleVersion",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 16
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1e98654_01e07f10",
        "filename": "internal/cueversion/version_test.go",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-30T08:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e9cc0f1_8e4c3aed",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 16
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}