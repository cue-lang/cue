{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aa9023c1_ef906983",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "module",
      "range": {
        "startLine": 7,
        "startChar": 40,
        "endLine": 7,
        "endChar": 45
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d7f720_6be3c06a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "perhaps mention that writing a local regression test for this is hard, as dependency modules only have versions as provided by a proxy, and deps replaced by a directory don\u0027t have module versions.\n\nalso \"module version\" rather than \"build version\".",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 49
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34634324_fbf88cea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "SGTM, the only major thing left I see is that the hard-coded language version isn\u0027t what I expected to see",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02eb818d_9f032d77",
        "filename": "cmd/cue/cmd/testdata/script/modinit_without_version.txtar",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "module",
      "range": {
        "startLine": 1,
        "startChar": 48,
        "endLine": 1,
        "endChar": 53
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6508c4d6_1e0ca9e7",
        "filename": "cmd/cue/cmd/version.go",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "you say 20 above but left 16 here? did you check that the output still looks OK?",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a4756e7_35ce3cf8",
        "filename": "cmd/cue/cmd/version.go",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "rename to moduleVersion as well, or just leave as cueVersion",
      "range": {
        "startLine": 85,
        "startChar": 5,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "636e4ec2_608cf9a1",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "this should be v0.9.0 as discussed; we agreed it would only follow major versions and not alphas or any other pre-releases.",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b816078_538826c4",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "`moduleVersionOnce` for consistency",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 15
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ca00f7_6537560b",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "leave a brief comment about when this can happen. from the godoc:\n\n\u003e The information is available only in binaries built with module support. \n\nso this could happen if the info was stripped or if some alternative toolchain was used for the build, I assume. but not with either of the supported build methods we have, i.e. `go install ./cmd/cue` or `go install cuelang.org/go/cmd/cue@version`.",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e1a1f20_24586159",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "as far as I can tell this is backwards; if M1 is replaced by M2, we need to return M2, not M1.",
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad74d9b4_a7ae9c3f",
        "filename": "internal/cueversion/version.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "can we make this \"language %s\" or \"lang %s\" for the sake of clarity? I slightly worry that on stable clients, both strings will often be the same (e.g. v0.10.0), so a server might mistakenly parse them the wrong way around and not notice for a while.",
      "range": {
        "startLine": 76,
        "startChar": 33,
        "endLine": 76,
        "endChar": 35
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e9cc0f1_8e4c3aed",
        "filename": "internal/cueversion/version_test.go",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-30T07:39:55Z",
      "side": 1,
      "message": "TestModuleVersion",
      "range": {
        "startLine": 12,
        "startChar": 5,
        "endLine": 12,
        "endChar": 16
      },
      "revId": "ff3e89985628b098f089d30eb324d2bcf74ef6cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}