Test comprehensions that are defined above the reference root.

Because the references are not at addressable locations, the printed
references are bogus. However, this simply tests they are found, reported,
and do not cause a crash.

TODO: filter bogus references.
-- in.cue --
for key, value in { test: 1 } {
	("a"): b: k1: key
	("a"): b: v1: value
	a: b: k2: key
	a: b: v2: value
}
a: {
	for key, value in { test: 1 } {
		("b"): k3: key
		("b"): v3: value
		b: k4: key
		b: v4: value
	}
	b: {}
}
-- out/dependencies/field --
line  reference    path of resulting vertex
-- out/dependencies/all --
line  reference    path of resulting vertex
4:    key       => key
5:    value     => **non-rooted**
2:    key       => key
3:    value     => **non-rooted**
-- out/dependencies/dynamic --
line  reference    path of resulting vertex
4:    key       => key
5:    value     => **non-rooted**
11:   key       => key
12:   value     => **non-rooted**
2:    key       => key
3:    value     => **non-rooted**
9:    key       => key
10:   value     => **non-rooted**
