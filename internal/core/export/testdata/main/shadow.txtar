In this file we test cases where references are shadowed:
- x: x: x
- a newly created dynamic field which ends up shadowing an existing field.

-- in.cue --
shadowRef: t1: {
	x: "x": x | null
}

shadowRef: t2: {
	x: "x": "x": x | null
}

shadowRef: t3: {
	x: "x": x: "x": x | null
}

shadowRef: t4: {
	X=x: {
		x: X | null
		y: x
	}
}

shadowRef: t5: {
	X=x: x: X | null
}

shadowRef: e1: {
	x: "x": x // structural error, but should still print ok.
	x: {}
}

shadowAlias: t1: {
	y: "outer"
	a: {
		key: "y"
		X=(key): "inner"

		refs: {
			Z="y": 1
			outer: y
			mid:   X
			inner: Z

		}
	}
}

shadowAlias: t2: {
	a: {
		key: "y"
		X=(key): "inner"

		refs: {
			Z="y": 1
			outer: y
			mid:   X
			inner: Z

		}
	}
	y: "outer"
}
-- out/definition --
shadowRef: {
	t1: {
		x_1=x: {
			x: x_1 | null
		}
	}
	t2: {
		x_5=x: {
			x: {
				x: x_5 | null
			}
		}
	}
	t3: {
		x: {
			x: {
				x_A=x: {
					x: x_A | null
				}
			}
		}
	}
	t4: {
		x_8=x: {
			x: x_8 | null
			y: x
		}
	}
	t5: {
		x_E=x: {
			x: x_E | null
		}
	}
	e1: {
		x_B=x: {
			x: x_B
		}
	}
}
shadowAlias: {
	t1: {
		y_B=y: "outer"
		a: {
			key:     "y"
			X=(key): "inner"
			refs: {
				y:     1
				outer: y_B
				mid:   X
				inner: y
			}
		}
	}
	t2: {
		a: {
			key:       "y"
			X_1=(key): "inner"
			refs: {
				y:     1
				outer: y_6
				mid:   X_1
				inner: y
			}
		}
		y_6=y: "outer"
	}
}
-- out/doc --
[]
[shadowRef]
[shadowRef t1]
[shadowRef t1 x]
[shadowRef t1 x x]
[shadowRef t2]
[shadowRef t2 x]
[shadowRef t2 x x]
[shadowRef t2 x x x]
[shadowRef t3]
[shadowRef t3 x]
[shadowRef t3 x x]
[shadowRef t3 x x x]
[shadowRef t3 x x x x]
[shadowRef t4]
[shadowRef t4 x]
[shadowRef t4 x x]
[shadowRef t4 x y]
[shadowRef t5]
[shadowRef t5 x]
[shadowRef t5 x x]
[shadowRef e1]
[shadowRef e1 x]
[shadowRef e1 x x]
[shadowAlias]
[shadowAlias t1]
[shadowAlias t1 y]
[shadowAlias t1 a]
[shadowAlias t1 a key]
[shadowAlias t1 a refs]
[shadowAlias t1 a refs y]
[shadowAlias t1 a refs outer]
[shadowAlias t1 a refs mid]
[shadowAlias t1 a refs inner]
[shadowAlias t1 a y]
[shadowAlias t2]
[shadowAlias t2 a]
[shadowAlias t2 a key]
[shadowAlias t2 a refs]
[shadowAlias t2 a refs y]
[shadowAlias t2 a refs outer]
[shadowAlias t2 a refs mid]
[shadowAlias t2 a refs inner]
[shadowAlias t2 a y]
[shadowAlias t2 y]
-- out/value --
== Simplified
_|_ // shadowRef.e1.x.x: structural cycle (and 1 more errors)
== Raw
_|_ // shadowRef.e1.x.x: structural cycle (and 1 more errors)
== Final
_|_ // shadowRef.e1.x.x: structural cycle (and 1 more errors)
== All
{
	shadowRef: {
		t1: {
			x: {
				x: null
			}
		}
		t2: {
			x: {
				x: {
					x: null
				}
			}
		}
		t3: {
			x: {
				x: {
					x: {
						x: null
					}
				}
			}
		}
		t4: {
			x: {
				x: null
				y: null
			}
		}
		t5: {
			x: {
				x: null
			}
		}
		e1: {
			x: {
				x: _|_ // shadowRef.e1.x.x: structural cycle (and 1 more errors)
			}
		}
	}
	shadowAlias: {
		t1: {
			y: "outer"
			a: {
				key: "y"
				y:   "inner"
				refs: {
					y:     1
					outer: "outer"
					mid:   "inner"
					inner: 1
				}
			}
		}
		t2: {
			a: {
				key: "y"
				y:   "inner"
				refs: {
					y:     1
					outer: "outer"
					mid:   "inner"
					inner: 1
				}
			}
			y: "outer"
		}
	}
}
== Eval
_|_ // shadowRef.e1.x.x: structural cycle (and 1 more errors)
