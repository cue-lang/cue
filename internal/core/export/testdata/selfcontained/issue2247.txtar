#inlineImports: true
-- cue.mod/module.cue --
module: "example.com"
language: version: "v0.9.0"
-- x.cue --
import "example.com/t"

f: t.p
-- t/t.cue --
package t

p: {
	c: [int]
	d: [c][0]
	// TODO: simplify these:
	e: {out: c}.out
	f: {out: q}.out
	g: {out: q}.out

	h: {out: r: s: string}.out
	i: h.r
	j: h.r.s

	k: r.k
	l: r.k.l
}

q: {
	x: [...int]
}

r: {out: k: l: string}.out

-- out/self/default --
import "example.com/t"

f: t.p
-- out/self-v3/expand_imports --
f: {
	c: [int]
	d: [c][0]
	// TODO: simplify these:
	e: {
		out: c
	}.out
	f: {
		out: Q
	}.out
	g: {
		out: Q
	}.out
	h: {
		out: {
			r: {
				s: string
			}
		}
	}.out
	i: h.r
	j: h.r.s
	k: K
	l: K.l
}

//cue:path: "example.com/t".q
let Q = {
	x: [...int]
}

//cue:path: "example.com/t".out.k
let K = {
	l: string
}
-- diff/-out/self-v3/expand_imports<==>+out/self/expand_imports --
diff old new
--- old
+++ new
@@ -29,7 +29,7 @@
 	x: [...int]
 }
 
-//cue:path: "example.com/t".r.k
+//cue:path: "example.com/t".out.k
 let K = {
 	l: string
 }
-- out/self/expand_imports --
f: {
	c: [int]
	d: [c][0]
	// TODO: simplify these:
	e: {
		out: c
	}.out
	f: {
		out: Q
	}.out
	g: {
		out: Q
	}.out
	h: {
		out: {
			r: {
				s: string
			}
		}
	}.out
	i: h.r
	j: h.r.s
	k: K
	l: K.l
}

//cue:path: "example.com/t".q
let Q = {
	x: [...int]
}

//cue:path: "example.com/t".r.k
let K = {
	l: string
}
