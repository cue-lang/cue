#InferTasks: true
-- in.cue --
import "tool/exec"

foo: {
	$id: "tool/http.Do"

	method: "GET"
	url:    string

	request: body: *bytes | string
}

// vendorgithubschema is expected to be run within the cuelang.org/go
// cue.mod directory
root: {
	get: foo & {
		request: body: ""
		url: "https://raw.githubusercontent.com/SchemaStore/schemastore/f7a0789ccb3bd74a720ddbd6691d60fd9e2d8b7a/src/schemas/json/github-workflow.json"
	}
	convert: exec.Run & {
		stdin: get.response.body
		cmd:   "go run cuelang.org/go/cmd/cue import -f -p json -l #Workflow: jsonschema: - --outfile pkg/github.com/SchemaStore/schemastore/src/schemas/json/github-workflow.cue"
	}
}
-- out/run/errors --
-- out/run/t0 --
graph TD
  t0("root.get [Ready]")
  t1("root.convert [Waiting]")
  t1-->t0

-- out/run/t1 --
graph TD
  t0("root.get [Terminated]")
  t1("root.convert [Ready]")
  t1-->t0

-- out/run/t1/value --
{
	$id:    "tool/http.Do"
	method: "GET"
	stdout: "foo"
	url:    "https://raw.githubusercontent.com/SchemaStore/schemastore/f7a0789ccb3bd74a720ddbd6691d60fd9e2d8b7a/src/schemas/json/github-workflow.json"
	request: {
		body: ""
	}
}
-- out/run/t2 --
graph TD
  t0("root.get [Terminated]")
  t1("root.convert [Terminated]")
  t1-->t0

-- out/run/t2/value --
{
	$id: "tool/exec.Run"
	cmd: "go run cuelang.org/go/cmd/cue import -f -p json -l #Workflow: jsonschema: - --outfile pkg/github.com/SchemaStore/schemastore/src/schemas/json/github-workflow.cue"
	env: {}
	stdout:  "foo"
	stderr:  null
	stdin:   (*null | string | bytes) & GET.response.body
	success: bool

	//cue:path: root.get
	let GET = {
		$id:    "tool/http.Do"
		method: "GET"
		url:    string
		request: {
			body: *bytes | string
		}
	} & {
		request: {
			body: ""
		}
		url:    "https://raw.githubusercontent.com/SchemaStore/schemastore/f7a0789ccb3bd74a720ddbd6691d60fd9e2d8b7a/src/schemas/json/github-workflow.json"
		stdout: "foo"
	}
}
-- out/run/t3 --
graph TD
  t0("root.get [Terminated]")
  t0-->t2
  t1("root.convert [Terminated]")
  t1-->t0
  t2("foo [Terminated]")

-- out/run/t3/value --
{
	$id: "tool/exec.Run"
	cmd: "go run cuelang.org/go/cmd/cue import -f -p json -l #Workflow: jsonschema: - --outfile pkg/github.com/SchemaStore/schemastore/src/schemas/json/github-workflow.cue"
	env: {}
	stdout:  "foo"
	stderr:  null
	stdin:   (*null | string | bytes) & get.response.body
	success: bool
}
-- out/run/t1/stats --
Leaks:  0
Freed:  41
Reused: 34
Allocs: 7
Retain: 0

Unifications: 24
Conjuncts:    64
Disjuncts:    41
-- out/run/t2/stats --
Leaks:  0
Freed:  41
Reused: 41
Allocs: 0
Retain: 0

Unifications: 24
Conjuncts:    68
Disjuncts:    41
-- out/run/stats/totals --
Leaks:  0
Freed:  82
Reused: 75
Allocs: 7
Retain: 0

Unifications: 48
Conjuncts:    132
Disjuncts:    82